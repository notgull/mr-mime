// This file is automatically generated by `mr-mime-generator`. Do not edit.

#[derive(Debug, Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub(crate) enum Type {
    Star,
    Application,
    Audio,
    Chemical,
    Font,
    Image,
    Inode,
    Message,
    Model,
    Multipart,
    Text,
    Video,
}

impl Type {
    pub(crate) fn as_str(self) -> &'static str {
        match self {
            Type::Star => "*",
            Type::Application => "Application",
            Type::Audio => "Audio",
            Type::Chemical => "Chemical",
            Type::Font => "Font",
            Type::Image => "Image",
            Type::Inode => "Inode",
            Type::Message => "Message",
            Type::Model => "Model",
            Type::Multipart => "Multipart",
            Type::Text => "Text",
            Type::Video => "Video",
        }
    }
}
impl core::str::FromStr for Type {
    type Err = crate::InvalidName;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        const GRAPH: intern_str::Graph<
            'static,
            'static,
            intern_str::CaseInsensitive<&'static str>,
            Option<Type>,
        > = {
            const NODES: &[intern_str::Node<
                'static,
                intern_str::CaseInsensitive<&'static str>,
                Option<Type>,
            >] = &[
                intern_str::Node::new(&[], None, 0, 18446744073709551615),
                intern_str::Node::new(&[], Some(Type::Star), 0, 1),
                intern_str::Node::new(&[], Some(Type::Application), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cation"), 2)], None, 0, 6),
                intern_str::Node::new(&[], Some(Type::Audio), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ppli"), 3),
                        (intern_str::CaseInsensitive("udio"), 4),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Type::Chemical), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("hemical"), 6)], None, 0, 7),
                intern_str::Node::new(&[], Some(Type::Font), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ont"), 8)], None, 0, 3),
                intern_str::Node::new(&[], Some(Type::Image), 0, 1),
                intern_str::Node::new(&[], Some(Type::Inode), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mage"), 10),
                        (intern_str::CaseInsensitive("node"), 11),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Type::Message), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ge"), 13)], None, 0, 2),
                intern_str::Node::new(&[], Some(Type::Model), 0, 1),
                intern_str::Node::new(&[], Some(Type::Multipart), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("part"), 16)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("essa"), 14),
                        (intern_str::CaseInsensitive("odel"), 15),
                        (intern_str::CaseInsensitive("ulti"), 17),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Type::Text), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ext"), 19)], None, 0, 3),
                intern_str::Node::new(&[], Some(Type::Video), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ideo"), 21)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("*"), 1),
                        (intern_str::CaseInsensitive("a"), 5),
                        (intern_str::CaseInsensitive("c"), 7),
                        (intern_str::CaseInsensitive("f"), 9),
                        (intern_str::CaseInsensitive("i"), 12),
                        (intern_str::CaseInsensitive("m"), 18),
                        (intern_str::CaseInsensitive("t"), 20),
                        (intern_str::CaseInsensitive("v"), 22),
                    ],
                    None,
                    0,
                    1,
                ),
            ];
            const GRAPH: intern_str::Graph<
                'static,
                'static,
                intern_str::CaseInsensitive<&'static str>,
                Option<Type>,
            > = intern_str::Graph::new(NODES, 23);
            GRAPH
        };
        GRAPH
            .process(intern_str::CaseInsensitive(s))
            .as_ref()
            .copied()
            .ok_or(crate::InvalidName)
    }
}

impl AsRef<str> for Type {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}

impl From<Type> for &'static str {
    fn from(name: Type) -> Self {
        name.as_str()
    }
}

#[derive(Debug, Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub(crate) enum Subtype {
    Star,
    A2l,
    Aac,
    Ac3,
    Ace,
    Aces,
    Activemessage,
    Activity,
    Alternative,
    AltoCdni,
    AltoCdnifilter,
    AltoCostmap,
    AltoCostmapfilter,
    AltoDirectory,
    AltoEndpointcost,
    AltoEndpointcostparams,
    AltoEndpointprop,
    AltoEndpointpropparams,
    AltoError,
    AltoNetworkmap,
    AltoNetworkmapfilter,
    AltoPropmap,
    AltoPropmapparams,
    AltoUpdatestreamcontrol,
    AltoUpdatestreamparams,
    Aml,
    Amr,
    AmrWb,
    AndrewInset,
    Annodex,
    Appledouble,
    Applefile,
    Aptx,
    Asc,
    At,
    Atf,
    Atfx,
    Atom,
    Atomcat,
    Atomdeleted,
    Atomicmail,
    Atomserv,
    Atomsvc,
    Atrac3,
    AtracAdvancedLossless,
    AtracX,
    AtscDwd,
    AtscDynamicEventMessage,
    AtscHeld,
    AtscRdt,
    AtscRsat,
    Atxml,
    AuthPolicy,
    Av1,
    Avci,
    Avcs,
    Avif,
    BacnetXdd,
    Basic,
    BatchSmtp,
    Bbolin,
    Beep,
    Blockdevice,
    Bmp,
    Bmpeg,
    Bt656,
    Bv16,
    Bv32,
    Byteranges,
    CacheManifest,
    Calendar,
    CallCompletion,
    Cals1840,
    Captive,
    Cbor,
    CborSeq,
    Cccex,
    Ccmp,
    Ccxml,
    Cdfx,
    CdmiCapability,
    CdmiContainer,
    CdmiDomain,
    CdmiObject,
    CdmiQueue,
    Cdni,
    Cea,
    Cea2018,
    CelB,
    Cellml,
    Cfw,
    Cgm,
    Chardevice,
    City,
    Clearmode,
    Clr,
    Clue,
    ClueInfo,
    Cms,
    Cn,
    Cnrp,
    CoapGroup,
    CoapPayload,
    Collection,
    Commonground,
    ConferenceInfo,
    Cose,
    CoseKey,
    CoseKeySet,
    Cpim,
    Cpl,
    Cql,
    CqlExtension,
    CqlIdentifier,
    Csound,
    Csrattrs,
    Css,
    CstAdata,
    Csta,
    Csv,
    CsvSchema,
    Csvm,
    CuSeeme,
    Cwt,
    Cybercash,
    Dash,
    DashPatch,
    Dashdelta,
    Dat12,
    Davmount,
    DcaRft,
    Dcd,
    DecDx,
    DeliveryStatus,
    DialogInfo,
    Dicom,
    DicomRle,
    Digest,
    Dii,
    Directory,
    DirectoryLocked,
    DispositionNotification,
    Dit,
    Dl,
    Dls,
    Dns,
    DnsMessage,
    Dots,
    Dskpp,
    Dsptype,
    DsrEs201108,
    DsrEs202050,
    DsrEs202211,
    DsrEs202212,
    Dssc,
    Dv,
    Dvcs,
    Dvi4,
    E57,
    Eac3,
    EdiConsent,
    EdiX12,
    Edifact,
    Efi,
    Elm,
    EmergencyCallDataCap,
    EmergencyCallDataComment,
    EmergencyCallDataControl,
    EmergencyCallDataDeviceInfo,
    EmergencyCallDataECallMsd,
    EmergencyCallDataProviderInfo,
    EmergencyCallDataServiceInfo,
    EmergencyCallDataSubscriberInfo,
    EmergencyCallDataVeds,
    Emf,
    Emma,
    Emotionml,
    Encaprtp,
    Encrypted,
    Enriched,
    Epp,
    Epub,
    Eshop,
    Evrc,
    Evrc0,
    Evrc1,
    EvrcQcp,
    Evrcb,
    Evrcb0,
    Evrcb1,
    Evrcnw,
    Evrcnw0,
    Evrcnw1,
    Evrcwb,
    Evrcwb0,
    Evrcwb1,
    Evs,
    Example,
    Exi,
    ExpectCtReport,
    Express,
    ExternalBody,
    Fastinfoset,
    Fastsoap,
    Fdt,
    FeedbackReport,
    Ffv1,
    Fhir,
    Fhirpath,
    Fifo,
    Fits,
    Flac,
    Flexfec,
    Fli,
    FontTdpfr,
    FormData,
    FrameworkAttributes,
    Futuresplash,
    Fwdred,
    G3fax,
    G7110,
    G719,
    G722,
    G7221,
    G723,
    G72616,
    G72624,
    G72632,
    G72640,
    G728,
    G729,
    G7291,
    G729d,
    G729e,
    Geo,
    Geopackage,
    Geoxacml,
    Gff3,
    Gif,
    Gl,
    Global,
    GlobalDeliveryStatus,
    GlobalDispositionNotification,
    GlobalHeaders,
    Gltf,
    GltfBinary,
    GltfBuffer,
    Gml,
    GrammarRefList,
    Gsm,
    GsmEfr,
    GsmHr08,
    Gzip,
    H224,
    H261,
    H263,
    H2631998,
    H2632000,
    H264,
    H264Rcdo,
    H264Svc,
    H265,
    HeaderSet,
    Heic,
    HeicSequence,
    Heif,
    HeifSequence,
    Hej2k,
    Held,
    Hsj2,
    Hta,
    Html,
    Http,
    Hyperstudio,
    ILbc,
    IbeKeyRequest,
    IbePkgReply,
    IbePpData,
    Ief,
    Iges,
    ImIscomposing,
    Imdn,
    Index,
    IndexCmd,
    IndexObj,
    IndexResponse,
    IndexVnd,
    Inkml,
    Iotp,
    IpMrV25,
    Ipfix,
    Ipp,
    IsoSegment,
    Isup,
    Its,
    JavaArchive,
    JavaSerializedObject,
    JavaVm,
    Javascript,
    JcrCnd,
    Jf2feed,
    Jls,
    Jose,
    Jp2,
    Jpeg,
    Jpeg2000,
    Jph,
    Jphc,
    Jpm,
    Jpx,
    Jrd,
    Jscalendar,
    Json,
    JsonPatch,
    JsonSeq,
    Jwk,
    JwkSet,
    Jwt,
    Jxl,
    Jxr,
    JxrA,
    JxrS,
    Jxs,
    Jxsc,
    Jxsi,
    Jxss,
    Jxsv,
    KpmlRequest,
    KpmlResponse,
    Ktx,
    Ktx2,
    L16,
    L20,
    L24,
    L8,
    Ld,
    Lgr,
    LinkFormat,
    LoadControl,
    Lost,
    Lostsync,
    Lpc,
    Lpf,
    Lxf,
    M3g,
    MacBinhex40,
    MacCompactpro,
    Macwriteii,
    Mads,
    Manifest,
    Marc,
    Marcxml,
    Markdown,
    Mathematica,
    Mathml,
    MathmlContent,
    MathmlPresentation,
    MbmsAssociatedProcedureDescription,
    MbmsDeregister,
    MbmsEnvelope,
    MbmsMsk,
    MbmsMskResponse,
    MbmsProtectionDescription,
    MbmsReceptionReport,
    MbmsRegister,
    MbmsRegisterResponse,
    MbmsSchedule,
    MbmsUserServiceDescription,
    Mbox,
    MediaControl,
    MediaPolicyDataset,
    Mediaservercontrol,
    Melp,
    Melp1200,
    Melp2400,
    Melp600,
    MergePatch,
    Mesh,
    Metalink4,
    Mets,
    Mf4,
    Mhas,
    Mikey,
    Mipc,
    MissingBlocks,
    Mixed,
    Mizar,
    Mj2,
    MmtAei,
    MmtUsd,
    MobileXmf,
    Mods,
    MossKeys,
    MossSignature,
    MosskeyData,
    MosskeyRequest,
    Mp1s,
    Mp21,
    Mp2p,
    Mp2t,
    Mp4,
    Mp4aLatm,
    Mp4vEs,
    Mpa,
    MpaRobust,
    Mpeg,
    Mpeg4Generic,
    Mpeg4Iod,
    Mpeg4IodXmt,
    Mpegurl,
    Mpv,
    MrbConsumer,
    MrbPublish,
    Msaccess,
    MscIvr,
    MscMixer,
    Msword,
    Mtl,
    Mud,
    Multilingual,
    MultipartCore,
    Mxf,
    N3,
    NQuads,
    NTriples,
    Naplps,
    Nasdata,
    NewsCheckgroups,
    NewsGroupinfo,
    NewsTransmission,
    Nlsml,
    Node,
    Nss,
    Nv,
    OauthAuthzReq,
    Obj,
    ObliviousDnsMessage,
    OcspRequest,
    OcspResponse,
    OctetStream,
    Oda,
    Odm,
    Odx,
    OebpsPackage,
    Ogg,
    Onenote,
    OpcNodeset,
    Opus,
    Oscore,
    Otf,
    Oxps,
    P21,
    P2pOverlay,
    Parallel,
    Parameters,
    Parityfec,
    Partial,
    Passport,
    PatchOpsError,
    Pcma,
    PcmaWb,
    Pcmu,
    PcmuWb,
    Pdf,
    Pdx,
    PemCertificateChain,
    PgpEncrypted,
    PgpKeys,
    PgpSignature,
    PicsRules,
    Pidf,
    PidfDiff,
    Pkcs10,
    Pkcs12,
    Pkcs7Mime,
    Pkcs7Signature,
    Pkcs8,
    Pkcs8Encrypted,
    PkixAttrCert,
    PkixCert,
    PkixCrl,
    PkixPkipath,
    Pkixcmp,
    Plain,
    Pls,
    Png,
    PocSettings,
    Pointer,
    Postscript,
    PpspTracker,
    Prc,
    Problem,
    Provenance,
    ProvenanceNotation,
    PrsAlvestrandTitraxSheet,
    PrsBtif,
    PrsCww,
    PrsCyn,
    PrsFallensteinRst,
    PrsHpub,
    PrsLinesTag,
    PrsNprend,
    PrsPlucker,
    PrsPropLogic,
    PrsPti,
    PrsRdfXmlCrypt,
    PrsSid,
    PrsXsf,
    Pskc,
    Pvd,
    PwgRaster,
    Qcelp,
    Qsig,
    Quicktime,
    Raptorfec,
    Raw,
    Rdap,
    Rdf,
    Red,
    Reginfo,
    Related,
    RelaxNgCompactSyntax,
    RemotePrinting,
    Report,
    Reputon,
    ResourceLists,
    ResourceListsDiff,
    Rfc,
    Rfc822,
    Rfc822Headers,
    Riscos,
    Rlmi,
    RlsServices,
    RouteApd,
    RouteSTsid,
    RouteUsd,
    RpkiGhostbusters,
    RpkiManifest,
    RpkiPublication,
    RpkiRoa,
    RpkiUpdown,
    Rtf,
    RtpEncAescm128,
    RtpMidi,
    Rtploopback,
    Rtx,
    SHttp,
    Samlassertion,
    Samlmetadata,
    Sarif,
    SarifExternalProperties,
    Sbe,
    Sbml,
    Scaip,
    Scim,
    Scip,
    ScvpCvRequest,
    ScvpCvResponse,
    ScvpVpRequest,
    ScvpVpResponse,
    Sdp,
    Secevent,
    Senml,
    SenmlEtch,
    SenmlExi,
    Sensml,
    SensmlExi,
    Sep,
    SepExi,
    SessionInfo,
    SetPayment,
    SetPaymentInitiation,
    SetRegistration,
    SetRegistrationInitiation,
    Sfnt,
    Sgml,
    SgmlOpenCatalog,
    Shaclc,
    Shex,
    Shf,
    Sieve,
    Signed,
    SimpleFilter,
    SimpleMessageSummary,
    SimpleSymbolContainer,
    Sip,
    Sipc,
    Sipfrag,
    Slate,
    Smil,
    Smpte291,
    Smpte292m,
    Smpte336m,
    Smv,
    Smv0,
    SmvQcp,
    Soap,
    Socket,
    Sofa,
    SpMidi,
    SparqlQuery,
    SparqlResults,
    Spdx,
    Speex,
    SpiritsEvent,
    Sql,
    Srgs,
    Sru,
    Ssml,
    Step,
    StepXml,
    Stix,
    Stl,
    Strings,
    Svg,
    Swid,
    T140,
    T140c,
    T38,
    TabSeparatedValues,
    TampApexUpdate,
    TampApexUpdateConfirm,
    TampCommunityUpdate,
    TampCommunityUpdateConfirm,
    TampError,
    TampSequenceAdjust,
    TampSequenceAdjustConfirm,
    TampStatusQuery,
    TampStatusResponse,
    TampUpdate,
    TampUpdateConfirm,
    Taxii,
    Td,
    Tei,
    TelephoneEvent,
    TetraAcelp,
    TetraAcelpBb,
    TetraIsi,
    Texmacs,
    Thraud,
    Tiff,
    TiffFx,
    TimestampQuery,
    TimestampReply,
    TimestampedData,
    Tlsrpt,
    Tnauthlist,
    TokenIntrospection,
    Tone,
    TrackingStatus,
    TrickleIceSdpfrag,
    Trig,
    Troff,
    Tsvcis,
    Ttf,
    Ttml,
    Turtle,
    TveTrigger,
    Tzif,
    TzifLeap,
    U3d,
    Uemclip,
    Ulpfec,
    UrcGrpsheet,
    UrcRessheet,
    UrcTargetdesc,
    UrcUisocketdesc,
    UriList,
    Usac,
    Vc1,
    Vc2,
    Vcard,
    Vdvi,
    Vemmi,
    VmrWb,
    Vnd1000mindsDecisionModel,
    Vnd3gpp2Bcmcsinfo,
    Vnd3gpp2Sms,
    Vnd3gpp2Tcap,
    Vnd3gpp5gnas,
    Vnd3gppAccessTransferEvents,
    Vnd3gppBsf,
    Vnd3gppGmop,
    Vnd3gppGtpc,
    Vnd3gppInterworkingData,
    Vnd3gppIufp,
    Vnd3gppLpp,
    Vnd3gppMcSignallingEar,
    Vnd3gppMcdataAffiliationCommand,
    Vnd3gppMcdataInfo,
    Vnd3gppMcdataPayload,
    Vnd3gppMcdataServiceConfig,
    Vnd3gppMcdataSignalling,
    Vnd3gppMcdataUeConfig,
    Vnd3gppMcdataUserProfile,
    Vnd3gppMcpttAffiliationCommand,
    Vnd3gppMcpttFloorRequest,
    Vnd3gppMcpttInfo,
    Vnd3gppMcpttLocationInfo,
    Vnd3gppMcpttMbmsUsageInfo,
    Vnd3gppMcpttServiceConfig,
    Vnd3gppMcpttSigned,
    Vnd3gppMcpttUeConfig,
    Vnd3gppMcpttUeInitConfig,
    Vnd3gppMcpttUserProfile,
    Vnd3gppMcvideoAffiliationCommand,
    Vnd3gppMcvideoInfo,
    Vnd3gppMcvideoLocationInfo,
    Vnd3gppMcvideoMbmsUsageInfo,
    Vnd3gppMcvideoServiceConfig,
    Vnd3gppMcvideoTransmissionRequest,
    Vnd3gppMcvideoUeConfig,
    Vnd3gppMcvideoUserProfile,
    Vnd3gppMidCall,
    Vnd3gppNgap,
    Vnd3gppPfcp,
    Vnd3gppPicBwLarge,
    Vnd3gppPicBwSmall,
    Vnd3gppPicBwVar,
    Vnd3gppProse,
    Vnd3gppProsePc3ch,
    Vnd3gppS1ap,
    Vnd3gppSms,
    Vnd3gppSrvccExt,
    Vnd3gppSrvccInfo,
    Vnd3gppStateAndEventInfo,
    Vnd3gppUssd,
    Vnd3gppV2xLocalServiceInformation,
    Vnd3lightssoftwareImagescal,
    Vnd3mPostItNotes,
    Vnd4sb,
    VndA,
    VndAbc,
    VndAccpacSimplyAso,
    VndAccpacSimplyImp,
    VndAcucobol,
    VndAcucorp,
    VndAdobeFlashMovie,
    VndAdobeFormscentralFcdt,
    VndAdobeFxp,
    VndAdobePartialUpload,
    VndAdobePhotoshop,
    VndAdobeXdp,
    VndAdobeXfdf,
    VndAetherImp,
    VndAfpcAfplinedata,
    VndAfpcAfplinedataPagedef,
    VndAfpcCmocaCmresource,
    VndAfpcFocaCharset,
    VndAfpcFocaCodedfont,
    VndAfpcFocaCodepage,
    VndAfpcModca,
    VndAfpcModcaFormdef,
    VndAfpcModcaMediummap,
    VndAfpcModcaObjectcontainer,
    VndAfpcModcaOverlay,
    VndAfpcModcaPagesegment,
    VndAge,
    VndAhBarcode,
    VndAheadSpace,
    VndAirzipAcceleratorAzv,
    VndAirzipFilesecureAzf,
    VndAirzipFilesecureAzs,
    VndAmadeus,
    VndAmazonMobi8Ebook,
    VndAmericandynamicsAcc,
    VndAmigaAmi,
    VndAmundsenMaze,
    VndAndroidOta,
    VndAndroidPackageArchive,
    VndAnki,
    VndAnserWebCertificateIssueInitiation,
    VndAnserWebFundsTransferInitiation,
    VndAntixGameComponent,
    VndApacheArrowFile,
    VndApacheArrowStream,
    VndApacheThriftBinary,
    VndApacheThriftCompact,
    VndApacheThriftJson,
    VndApi,
    VndAplextorWarrp,
    VndApothekendeReservation,
    VndAppleInstaller,
    VndAppleKeynote,
    VndAppleMpegurl,
    VndAppleNumbers,
    VndApplePages,
    VndAristanetworksSwi,
    VndArtisan,
    VndArtsquare,
    VndAsciiArt,
    VndAstraeaSoftwareIota,
    VndAudiograph,
    VndAudiokoz,
    VndAutopackage,
    VndAvalon,
    VndAvistar,
    VndBalsamiqBmml,
    VndBalsamiqBmpr,
    VndBananaAccounting,
    VndBbfUspError,
    VndBbfUspMsg,
    VndBekitzurStech,
    VndBintMedContent,
    VndBintMedPlus,
    VndBiopaxRdf,
    VndBlinkIdbValueWrapper,
    VndBlueiceMultipass,
    VndBluetoothEpOob,
    VndBluetoothLeOob,
    VndBmi,
    VndBpf,
    VndBpf3,
    VndBusinessobjects,
    VndByuUapi,
    VndCabJscript,
    VndCanonCpdl,
    VndCanonLips,
    VndCapasystemsPg,
    VndCctv,
    VndCelp,
    VndCendioThinlincClientconf,
    VndCenturySystemsTcpStream,
    VndChemdraw,
    VndChessPgn,
    VndChipnutsKaraokeMmd,
    VndCiedi,
    VndCinderella,
    VndCirpackIsdnExt,
    VndCiscoNse,
    VndCitationstylesStyle,
    VndClaymore,
    VndCloantoRp9,
    VndClonkC4group,
    VndCluetrustCartomobileConfig,
    VndCluetrustCartomobileConfigPkg,
    VndCmlesRadioEvents,
    VndCnsAnp1,
    VndCnsInf1,
    VndCnsInf2,
    VndCoffeescript,
    VndCollabioXodocumentsDocument,
    VndCollabioXodocumentsDocumentTemplate,
    VndCollabioXodocumentsPresentation,
    VndCollabioXodocumentsPresentationTemplate,
    VndCollabioXodocumentsSpreadsheet,
    VndCollabioXodocumentsSpreadsheetTemplate,
    VndCollada,
    VndCollection,
    VndCollectionDoc,
    VndCollectionNext,
    VndComicbook,
    VndComicbookRar,
    VndCommerceBattelle,
    VndCommonspace,
    VndContactCmsg,
    VndCoreosIgnition,
    VndCosmocaller,
    VndCrickClicker,
    VndCrickClickerKeyboard,
    VndCrickClickerPalette,
    VndCrickClickerTemplate,
    VndCrickClickerWordbank,
    VndCriticaltoolsWbs,
    VndCryptiiPipe,
    VndCryptoShadeFile,
    VndCryptomatorEncrypted,
    VndCryptomatorVault,
    VndCtcPosml,
    VndCtctWs,
    VndCupsPdf,
    VndCupsPostscript,
    VndCupsPpd,
    VndCupsRaster,
    VndCupsRaw,
    VndCurl,
    VndCyanDeanRoot,
    VndCybank,
    VndCyclonedx,
    VndD2lCoursepackage1p0,
    VndD3mDataset,
    VndD3mProblem,
    VndDart,
    VndDataVisionRdz,
    VndDatapackage,
    VndDataresource,
    VndDbf,
    VndDebianBinaryPackage,
    VndDebianCopyright,
    VndDeceAudio,
    VndDeceData,
    VndDeceGraphic,
    VndDeceHd,
    VndDeceMobile,
    VndDeceMp4,
    VndDecePd,
    VndDeceSd,
    VndDeceTtml,
    VndDeceUnspecified,
    VndDeceVideo,
    VndDeceZip,
    VndDenovoFcselayoutLink,
    VndDesmumeMovie,
    VndDigitalWinds,
    VndDirBiPlateDlNosuffix,
    VndDirectvMpeg,
    VndDirectvMpegTts,
    VndDjvu,
    VndDlnaAdts,
    VndDlnaMpegTts,
    VndDmClientScript,
    VndDmDelegation,
    VndDna,
    VndDocument,
    VndDolbyHeaac1,
    VndDolbyHeaac2,
    VndDolbyMlp,
    VndDolbyMobile1,
    VndDolbyMobile2,
    VndDolbyMps,
    VndDolbyPl2,
    VndDolbyPl2x,
    VndDolbyPl2z,
    VndDolbyPulse1,
    VndDoremirScorecloudBinaryDocument,
    VndDpgraph,
    VndDra,
    VndDreamfactory,
    VndDrive,
    VndDtgLocal,
    VndDtgLocalFlash,
    VndDtgLocalHtml,
    VndDts,
    VndDtsHd,
    VndDtsUhd,
    VndDvbAit,
    VndDvbDvbisl,
    VndDvbDvbj,
    VndDvbEsgcontainer,
    VndDvbFile,
    VndDvbIpdcdftnotifaccess,
    VndDvbIpdcesgaccess,
    VndDvbIpdcesgaccess2,
    VndDvbIpdcesgpdd,
    VndDvbIpdcroaming,
    VndDvbIptvAlfecBase,
    VndDvbIptvAlfecEnhancement,
    VndDvbNotifAggregateRoot,
    VndDvbNotifContainer,
    VndDvbNotifGeneric,
    VndDvbNotifIaMsglist,
    VndDvbNotifIaRegistrationRequest,
    VndDvbNotifIaRegistrationResponse,
    VndDvbNotifInit,
    VndDvbPfr,
    VndDvbService,
    VndDvbSubtitle,
    VndDwf,
    VndDwg,
    VndDxf,
    VndDxr,
    VndDynageo,
    VndDzr,
    VndEasykaraokeCdgdownload,
    VndEcdisUpdate,
    VndEcipRlp,
    VndEclipseDitto,
    VndEcowinChart,
    VndEcowinFilerequest,
    VndEcowinFileupdate,
    VndEcowinSeries,
    VndEcowinSeriesrequest,
    VndEcowinSeriesupdate,
    VndEfiImg,
    VndEfiIso,
    VndEmclientAccessrequest,
    VndEnliven,
    VndEnphaseEnvoy,
    VndEprintsData,
    VndEpsonEsf,
    VndEpsonMsf,
    VndEpsonQuickanime,
    VndEpsonSalt,
    VndEpsonSsf,
    VndEricssonQuickcall,
    VndEsmertecThemeDescriptor,
    VndEspassEspass,
    VndEszigno3,
    VndEtsiAoc,
    VndEtsiAsicE,
    VndEtsiAsicS,
    VndEtsiCug,
    VndEtsiIptvcommand,
    VndEtsiIptvdiscovery,
    VndEtsiIptvprofile,
    VndEtsiIptvsadBc,
    VndEtsiIptvsadCod,
    VndEtsiIptvsadNpvr,
    VndEtsiIptvservice,
    VndEtsiIptvsync,
    VndEtsiIptvueprofile,
    VndEtsiMcid,
    VndEtsiMheg5,
    VndEtsiOverloadControlPolicyDataset,
    VndEtsiPstn,
    VndEtsiSci,
    VndEtsiSimservs,
    VndEtsiTimestampToken,
    VndEtsiTsl,
    VndEtsiTslDer,
    VndEuKasparianCar,
    VndEudoraData,
    VndEveradPlj,
    VndEvolvEcigProfile,
    VndEvolvEcigSettings,
    VndEvolvEcigTheme,
    VndExstreamEmpower,
    VndExstreamPackage,
    VndEzpixAlbum,
    VndEzpixPackage,
    VndFSecureMobile,
    VndFamilysearchGedcom,
    VndFastbidsheet,
    VndFastcopyDiskImage,
    VndFdf,
    VndFdsnMseed,
    VndFdsnSeed,
    VndFfsns,
    VndFiclabFlb,
    VndFiclabFlt,
    VndFilmitZfc,
    VndFints,
    VndFiremonkeysCloudcell,
    VndFlatland3dml,
    VndFloGraphIt,
    VndFluxtimeClip,
    VndFly,
    VndFmiFlexstor,
    VndFontFontforgeSfd,
    VndFpx,
    VndFramemaker,
    VndFscWeblaunch,
    VndFst,
    VndFujifilmFbDocuworks,
    VndFujifilmFbDocuworksBinder,
    VndFujifilmFbDocuworksContainer,
    VndFujifilmFbJfi,
    VndFujitsuOasys,
    VndFujitsuOasys2,
    VndFujitsuOasys3,
    VndFujitsuOasysgp,
    VndFujitsuOasysprs,
    VndFujixeroxArt4,
    VndFujixeroxArtEx,
    VndFujixeroxDdd,
    VndFujixeroxDocuworks,
    VndFujixeroxDocuworksBinder,
    VndFujixeroxDocuworksContainer,
    VndFujixeroxEdmicsMmr,
    VndFujixeroxEdmicsRlc,
    VndFujixeroxHbpl,
    VndFutMisnet,
    VndFutoin,
    VndFuzzysheet,
    VndFvt,
    VndGdl,
    VndGenomatixTuxedo,
    VndGenticsGrd,
    VndGeogebraFile,
    VndGeogebraSlides,
    VndGeogebraTool,
    VndGeometryExplorer,
    VndGeonext,
    VndGeoplan,
    VndGeospace,
    VndGerber,
    VndGlobalgraphicsPgb,
    VndGlobalplatformCardContentMgt,
    VndGlobalplatformCardContentMgtResponse,
    VndGml,
    VndGnuTalerExchange,
    VndGnuTalerMerchant,
    VndGoogleEarthKml,
    VndGoogleEarthKmz,
    VndGovSkEForm,
    VndGovSkXmldatacontainer,
    VndGrafeq,
    VndGraphviz,
    VndGridmp,
    VndGrooveAccount,
    VndGrooveHelp,
    VndGrooveIdentityMessage,
    VndGrooveInjector,
    VndGrooveToolMessage,
    VndGrooveToolTemplate,
    VndGrooveVcard,
    VndGsGdl,
    VndGtw,
    VndHal,
    VndHandHeldEntertainment,
    VndHans,
    VndHbci,
    VndHc,
    VndHclBireports,
    VndHdt,
    VndHeroku,
    VndHgl,
    VndHheLessonPlayer,
    VndHl7cda,
    VndHl7v2,
    VndHnsAudio,
    VndHnsVideo,
    VndHpHpgl,
    VndHpHpid,
    VndHpHps,
    VndHpJlyt,
    VndHpPcl,
    VndHpPclxl,
    VndHttphone,
    VndHydrostatixSofData,
    VndHyper,
    VndHyperItem,
    VndHyperdrive,
    VndHzn3dCrossword,
    VndIbmElectronicMedia,
    VndIbmMiniPay,
    VndIbmRightsManagement,
    VndIbmSecureContainer,
    VndIccprofile,
    VndIeee1905,
    VndIgloader,
    VndImagemeterFolder,
    VndImagemeterImage,
    VndImmervisionIvp,
    VndImmervisionIvu,
    VndImsImsccv1p1,
    VndImsImsccv1p2,
    VndImsImsccv1p3,
    VndImsLisV2Result,
    VndImsLtiV2Toolconsumerprofile,
    VndImsLtiV2Toolproxy,
    VndImsLtiV2ToolproxyId,
    VndImsLtiV2Toolsettings,
    VndImsLtiV2ToolsettingsSimple,
    VndIn3d3dml,
    VndIn3dSpot,
    VndInformedcontrolRms,
    VndInfotechProject,
    VndInnopathWampNotification,
    VndInsorsIgm,
    VndInterconFormnet,
    VndIntergeo,
    VndIntertrustDigibox,
    VndIntertrustNncp,
    VndIntuQbo,
    VndIntuQfx,
    VndIptcG2Catalogitem,
    VndIptcG2Conceptitem,
    VndIptcG2Knowledgeitem,
    VndIptcG2Newsitem,
    VndIptcG2Newsmessage,
    VndIptcG2Packageitem,
    VndIptcG2Planningitem,
    VndIptcNewsMl,
    VndIptcNitf,
    VndIptvforum1dparityfec1010,
    VndIptvforum1dparityfec2005,
    VndIptvforum2dparityfec1010,
    VndIptvforum2dparityfec2005,
    VndIptvforumTtsavc,
    VndIptvforumTtsmpeg2,
    VndIpunpluggedRcprofile,
    VndIrepositoryPackage,
    VndIsXpr,
    VndIsacFcs,
    VndIso1178310,
    VndJam,
    VndJapannetDirectoryService,
    VndJapannetJpnstoreWakeup,
    VndJapannetPaymentWakeup,
    VndJapannetRegistration,
    VndJapannetRegistrationWakeup,
    VndJapannetSetstoreWakeup,
    VndJapannetVerification,
    VndJapannetVerificationWakeup,
    VndJcpJavameMidletRms,
    VndJisp,
    VndJoostJodaArchive,
    VndJskIsdnNgn,
    VndKahootz,
    VndKdeKarbon,
    VndKdeKchart,
    VndKdeKformula,
    VndKdeKivio,
    VndKdeKontour,
    VndKdeKpresenter,
    VndKdeKspread,
    VndKdeKword,
    VndKenameaapp,
    VndKidspiration,
    VndKinar,
    VndKoan,
    VndKodakDescriptor,
    VndLas,
    VndLasLas,
    VndLaszip,
    VndLatexZ,
    VndLeap,
    VndLibertyRequest,
    VndLlamagraphicsLifeBalanceDesktop,
    VndLlamagraphicsLifeBalanceExchange,
    VndLogipipeCircuit,
    VndLoom,
    VndLotus123,
    VndLotusApproach,
    VndLotusFreelance,
    VndLotusNotes,
    VndLotusOrganizer,
    VndLotusScreencam,
    VndLotusWordpro,
    VndLucentVoice,
    VndMacportsPortpkg,
    VndMapboxVectorTile,
    VndMarlinDrmActiontoken,
    VndMarlinDrmConftoken,
    VndMarlinDrmLicense,
    VndMarlinDrmMdcf,
    VndMason,
    VndMaxarArchive3tz,
    VndMaxmindMaxmindDb,
    VndMcd,
    VndMedcalcdata,
    VndMediastationCdkey,
    VndMeridianSlingshot,
    VndMfer,
    VndMfmp,
    VndMicro,
    VndMicrografxFlo,
    VndMicrografxIgx,
    VndMicrosoftIcon,
    VndMicrosoftPortableExecutable,
    VndMicrosoftWindowsThumbnailCache,
    VndMiele,
    VndMif,
    VndMinisoftHp3000Save,
    VndMitsubishiMistyGuardTrustweb,
    VndMix,
    VndMobiusDaf,
    VndMobiusDis,
    VndMobiusMbk,
    VndMobiusMqy,
    VndMobiusMsl,
    VndMobiusPlc,
    VndMobiusTxf,
    VndMoml,
    VndMophunApplication,
    VndMophunCertificate,
    VndMotorolaFlexsuite,
    VndMotorolaFlexsuiteAdsi,
    VndMotorolaFlexsuiteFis,
    VndMotorolaFlexsuiteGotap,
    VndMotorolaFlexsuiteKmr,
    VndMotorolaFlexsuiteTtc,
    VndMotorolaFlexsuiteWem,
    VndMotorolaIprm,
    VndMotorolaReflex,
    VndMotorolaVideo,
    VndMotorolaVideop,
    VndMozillaApng,
    VndMozillaXul,
    VndMpegurl,
    VndMs3mfdocument,
    VndMsArtgalry,
    VndMsAsf,
    VndMsCabCompressed,
    VndMsExcel,
    VndMsExcelAddinMacroEnabled12,
    VndMsExcelSheetBinaryMacroEnabled12,
    VndMsExcelSheetMacroEnabled12,
    VndMsExcelTemplateMacroEnabled12,
    VndMsFontobject,
    VndMsHtmlhelp,
    VndMsIms,
    VndMsLrm,
    VndMsMediapackage,
    VndMsModi,
    VndMsOfficeActiveX,
    VndMsOfficetheme,
    VndMsPkiSeccat,
    VndMsPlayreadyInitiator,
    VndMsPlayreadyMediaPya,
    VndMsPlayreadyMediaPyv,
    VndMsPowerpoint,
    VndMsPowerpointAddinMacroEnabled12,
    VndMsPowerpointPresentationMacroEnabled12,
    VndMsPowerpointSlideMacroEnabled12,
    VndMsPowerpointSlideshowMacroEnabled12,
    VndMsPowerpointTemplateMacroEnabled12,
    VndMsPrintDeviceCapabilities,
    VndMsPrintSchemaTicket,
    VndMsProject,
    VndMsTnef,
    VndMsWindowsDevicepairing,
    VndMsWindowsNwprintingOob,
    VndMsWindowsPrinterpairing,
    VndMsWindowsWsdOob,
    VndMsWmdrmLicChlgReq,
    VndMsWmdrmLicResp,
    VndMsWmdrmMeterChlgReq,
    VndMsWmdrmMeterResp,
    VndMsWordDocumentMacroEnabled12,
    VndMsWordTemplateMacroEnabled12,
    VndMsWorks,
    VndMsWpl,
    VndMsXpsdocument,
    VndMsaDiskImage,
    VndMseq,
    VndMsign,
    VndMts,
    VndMultiadCreator,
    VndMultiadCreatorCif,
    VndMusicNiff,
    VndMusician,
    VndMuveeStyle,
    VndMynfc,
    VndNacamarYbrid,
    VndNcdControl,
    VndNcdReference,
    VndNearstInv,
    VndNebumindLine,
    VndNervana,
    VndNet2phoneCommcenterCommand,
    VndNetFpx,
    VndNetfpx,
    VndNeurolanguageNlu,
    VndNimn,
    VndNintendoNitroRom,
    VndNintendoSnesRom,
    VndNitf,
    VndNoblenetDirectory,
    VndNoblenetSealer,
    VndNoblenetWeb,
    VndNokiaCatalogs,
    VndNokiaConml,
    VndNokiaISdsRadioPresets,
    VndNokiaInterleavedMultimedia,
    VndNokiaIptvConfig,
    VndNokiaLandmark,
    VndNokiaLandmarkcollection,
    VndNokiaMobileXmf,
    VndNokiaMp4vr,
    VndNokiaNGageAc,
    VndNokiaNGageData,
    VndNokiaNcd,
    VndNokiaPcd,
    VndNokiaRadioPreset,
    VndNokiaRadioPresets,
    VndNokiaVideovoip,
    VndNortelVbk,
    VndNovadigmEdm,
    VndNovadigmEdx,
    VndNovadigmExt,
    VndNttLocalContentShare,
    VndNttLocalFileTransfer,
    VndNttLocalOgwRemoteAccess,
    VndNttLocalSipTaRemote,
    VndNttLocalSipTaTcpStream,
    VndNueraEcelp4800,
    VndNueraEcelp7470,
    VndNueraEcelp9600,
    VndOasisOpendocumentChart,
    VndOasisOpendocumentChartTemplate,
    VndOasisOpendocumentDatabase,
    VndOasisOpendocumentFormula,
    VndOasisOpendocumentFormulaTemplate,
    VndOasisOpendocumentGraphics,
    VndOasisOpendocumentGraphicsTemplate,
    VndOasisOpendocumentImage,
    VndOasisOpendocumentImageTemplate,
    VndOasisOpendocumentPresentation,
    VndOasisOpendocumentPresentationTemplate,
    VndOasisOpendocumentSpreadsheet,
    VndOasisOpendocumentSpreadsheetTemplate,
    VndOasisOpendocumentText,
    VndOasisOpendocumentTextMaster,
    VndOasisOpendocumentTextTemplate,
    VndOasisOpendocumentTextWeb,
    VndObjectvideo,
    VndObn,
    VndOcf,
    VndOciImageManifestV1,
    VndOctelSbc,
    VndOftnL10n,
    VndOipfContentaccessdownload,
    VndOipfContentaccessstreaming,
    VndOipfCspgHexbinary,
    VndOipfDaeSvg,
    VndOipfDaeXhtml,
    VndOipfMippvcontrolmessage,
    VndOipfPaeGem,
    VndOipfSpdiscovery,
    VndOipfSpdlist,
    VndOipfUeprofile,
    VndOipfUserprofile,
    VndOlpcSugar,
    VndOmaBcastAssociatedProcedureParameter,
    VndOmaBcastDrmTrigger,
    VndOmaBcastImd,
    VndOmaBcastLtkm,
    VndOmaBcastNotification,
    VndOmaBcastProvisioningtrigger,
    VndOmaBcastSgboot,
    VndOmaBcastSgdd,
    VndOmaBcastSgdu,
    VndOmaBcastSimpleSymbolContainer,
    VndOmaBcastSmartcardTrigger,
    VndOmaBcastSprov,
    VndOmaBcastStkm,
    VndOmaCabAddressBook,
    VndOmaCabFeatureHandler,
    VndOmaCabPcc,
    VndOmaCabSubsInvite,
    VndOmaCabUserPrefs,
    VndOmaDcd,
    VndOmaDcdc,
    VndOmaDd2,
    VndOmaDrmRisd,
    VndOmaGroupUsageList,
    VndOmaLwm2m,
    VndOmaPal,
    VndOmaPocDetailedProgressReport,
    VndOmaPocFinalReport,
    VndOmaPocGroups,
    VndOmaPocInvocationDescriptor,
    VndOmaPocOptimizedProgressReport,
    VndOmaPush,
    VndOmaScidmMessages,
    VndOmaScwsConfig,
    VndOmaScwsHttpRequest,
    VndOmaScwsHttpResponse,
    VndOmaXcapDirectory,
    VndOmadsEmail,
    VndOmadsFile,
    VndOmadsFolder,
    VndOmalocSuplInit,
    VndOnepager,
    VndOnepagertamp,
    VndOnepagertamx,
    VndOnepagertat,
    VndOnepagertatp,
    VndOnepagertatx,
    VndOpenbloxGame,
    VndOpenbloxGameBinary,
    VndOpeneyeOeb,
    VndOpengex,
    VndOpenofficeorgExtension,
    VndOpenstreetmapData,
    VndOpentimestampsOts,
    VndOpenxmlformatsOfficedocumentCustomProperties,
    VndOpenxmlformatsOfficedocumentCustomXmlProperties,
    VndOpenxmlformatsOfficedocumentDrawing,
    VndOpenxmlformatsOfficedocumentDrawingmlChart,
    VndOpenxmlformatsOfficedocumentDrawingmlChartshapes,
    VndOpenxmlformatsOfficedocumentDrawingmlDiagramColors,
    VndOpenxmlformatsOfficedocumentDrawingmlDiagramData,
    VndOpenxmlformatsOfficedocumentDrawingmlDiagramLayout,
    VndOpenxmlformatsOfficedocumentDrawingmlDiagramStyle,
    VndOpenxmlformatsOfficedocumentExtendedProperties,
    VndOpenxmlformatsOfficedocumentPresentationmlCommentAuthors,
    VndOpenxmlformatsOfficedocumentPresentationmlComments,
    VndOpenxmlformatsOfficedocumentPresentationmlHandoutMaster,
    VndOpenxmlformatsOfficedocumentPresentationmlNotesMaster,
    VndOpenxmlformatsOfficedocumentPresentationmlNotesSlide,
    VndOpenxmlformatsOfficedocumentPresentationmlPresProps,
    VndOpenxmlformatsOfficedocumentPresentationmlPresentation,
    VndOpenxmlformatsOfficedocumentPresentationmlPresentationMain,
    VndOpenxmlformatsOfficedocumentPresentationmlSlide,
    VndOpenxmlformatsOfficedocumentPresentationmlSlideLayout,
    VndOpenxmlformatsOfficedocumentPresentationmlSlideMaster,
    VndOpenxmlformatsOfficedocumentPresentationmlSlideUpdateInfo,
    VndOpenxmlformatsOfficedocumentPresentationmlSlideshow,
    VndOpenxmlformatsOfficedocumentPresentationmlSlideshowMain,
    VndOpenxmlformatsOfficedocumentPresentationmlTableStyles,
    VndOpenxmlformatsOfficedocumentPresentationmlTags,
    VndOpenxmlformatsOfficedocumentPresentationmlTemplate,
    VndOpenxmlformatsOfficedocumentPresentationmlTemplateMain,
    VndOpenxmlformatsOfficedocumentPresentationmlViewProps,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlCalcChain,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlChartsheet,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlComments,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlConnections,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlDialogsheet,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlExternalLink,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheDefinition,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheRecords,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotTable,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlQueryTable,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionHeaders,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionLog,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlSharedStrings,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlSheet,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMain,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMetadata,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlStyles,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlTable,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlTableSingleCells,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplate,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplateMain,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlUserNames,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlVolatileDependencies,
    VndOpenxmlformatsOfficedocumentSpreadsheetmlWorksheet,
    VndOpenxmlformatsOfficedocumentTheme,
    VndOpenxmlformatsOfficedocumentThemeOverride,
    VndOpenxmlformatsOfficedocumentVmlDrawing,
    VndOpenxmlformatsOfficedocumentWordprocessingmlComments,
    VndOpenxmlformatsOfficedocumentWordprocessingmlDocument,
    VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentGlossary,
    VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentMain,
    VndOpenxmlformatsOfficedocumentWordprocessingmlEndnotes,
    VndOpenxmlformatsOfficedocumentWordprocessingmlFontTable,
    VndOpenxmlformatsOfficedocumentWordprocessingmlFooter,
    VndOpenxmlformatsOfficedocumentWordprocessingmlFootnotes,
    VndOpenxmlformatsOfficedocumentWordprocessingmlNumbering,
    VndOpenxmlformatsOfficedocumentWordprocessingmlSettings,
    VndOpenxmlformatsOfficedocumentWordprocessingmlStyles,
    VndOpenxmlformatsOfficedocumentWordprocessingmlTemplate,
    VndOpenxmlformatsOfficedocumentWordprocessingmlTemplateMain,
    VndOpenxmlformatsOfficedocumentWordprocessingmlWebSettings,
    VndOpenxmlformatsPackageCoreProperties,
    VndOpenxmlformatsPackageDigitalSignatureXmlsignature,
    VndOpenxmlformatsPackageRelationships,
    VndOracleResource,
    VndOrangeIndata,
    VndOsaNetdeploy,
    VndOsgeoMapguidePackage,
    VndOsgiBundle,
    VndOsgiDp,
    VndOsgiSubsystem,
    VndOtpsCtKip,
    VndOxliCountgraph,
    VndPagerduty,
    VndPalm,
    VndPanoply,
    VndPaosXml,
    VndParasolidTransmitBinary,
    VndParasolidTransmitText,
    VndPatentdive,
    VndPatientecommsdoc,
    VndPawaafile,
    VndPcoB16,
    VndPcos,
    VndPgFormat,
    VndPgOsasli,
    VndPiaccessApplicationLicence,
    VndPicsel,
    VndPmiWidget,
    VndPocGroupAdvertisement,
    VndPocketlearn,
    VndPowerbuilder6,
    VndPowerbuilder6S,
    VndPowerbuilder7,
    VndPowerbuilder75,
    VndPowerbuilder75S,
    VndPowerbuilder7S,
    VndPreminet,
    VndPresonusMultitrack,
    VndPreviewsystemsBox,
    VndProteusMagazine,
    VndPsfs,
    VndPublishareDeltaTree,
    VndPviPtid1,
    VndPwgMultiplexed,
    VndPwgXhtmlPrint,
    VndPythaPyox,
    VndQualcommBrewAppRes,
    VndQuarantainenet,
    VndQuarkQuarkXPress,
    VndQuobjectQuoxdocument,
    VndRadgamettoolsBink,
    VndRadgamettoolsSmacker,
    VndRadiance,
    VndRadisysMoml,
    VndRadisysMsml,
    VndRadisysMsmlAudit,
    VndRadisysMsmlAuditConf,
    VndRadisysMsmlAuditConn,
    VndRadisysMsmlAuditDialog,
    VndRadisysMsmlAuditStream,
    VndRadisysMsmlBasicLayout,
    VndRadisysMsmlConf,
    VndRadisysMsmlDialog,
    VndRadisysMsmlDialogBase,
    VndRadisysMsmlDialogFaxDetect,
    VndRadisysMsmlDialogFaxSendrecv,
    VndRadisysMsmlDialogGroup,
    VndRadisysMsmlDialogSpeech,
    VndRadisysMsmlDialogTransform,
    VndRainstorData,
    VndRapid,
    VndRar,
    VndRealvncBed,
    VndRecordareMusicxml,
    VndRenLearnRlprint,
    VndResilientLogic,
    VndRestful,
    VndRhetorex32kadpcm,
    VndRigCryptonote,
    VndRimCod,
    VndRip,
    VndRosetteAnnotatedDataModel,
    VndRoute66Link66,
    VndRs274x,
    VndRuckusDownload,
    VndS3sms,
    VndSailingtrackerTrack,
    VndSapVds,
    VndSar,
    VndSbmCid,
    VndSbmMid2,
    VndScribus,
    VndSealed3df,
    VndSealedCsf,
    VndSealedDoc,
    VndSealedEml,
    VndSealedMht,
    VndSealedMpeg1,
    VndSealedMpeg4,
    VndSealedNet,
    VndSealedPng,
    VndSealedPpt,
    VndSealedSwf,
    VndSealedTiff,
    VndSealedXls,
    VndSealedmediaSoftsealGif,
    VndSealedmediaSoftsealHtml,
    VndSealedmediaSoftsealJpg,
    VndSealedmediaSoftsealMov,
    VndSealedmediaSoftsealMpeg,
    VndSealedmediaSoftsealPdf,
    VndSeemail,
    VndSeis,
    VndSema,
    VndSemd,
    VndSemf,
    VndSenxWarpscript,
    VndShadeSaveFile,
    VndShanaInformedFormdata,
    VndShanaInformedFormtemplate,
    VndShanaInformedInterchange,
    VndShanaInformedPackage,
    VndShootproof,
    VndShopkick,
    VndShp,
    VndShx,
    VndSigrokSession,
    VndSimTechMindMapper,
    VndSiren,
    VndSmaf,
    VndSmartNotebook,
    VndSmartTeacher,
    VndSnesdevPageTable,
    VndSoftware602FillerForm,
    VndSoftware602FillerFormXmlZip,
    VndSolentSdkm,
    VndSosi,
    VndSpotfireDxp,
    VndSpotfireSfs,
    VndSqlite3,
    VndSssCod,
    VndSssDtf,
    VndSssNtf,
    VndStardivisionCalc,
    VndStardivisionChart,
    VndStardivisionDraw,
    VndStardivisionImpress,
    VndStardivisionMath,
    VndStardivisionWriter,
    VndStardivisionWriterGlobal,
    VndStepmaniaPackage,
    VndStepmaniaStepchart,
    VndStreetStream,
    VndSunJ2meAppDescriptor,
    VndSunWadl,
    VndSunXmlCalc,
    VndSunXmlCalcTemplate,
    VndSunXmlDraw,
    VndSunXmlDrawTemplate,
    VndSunXmlImpress,
    VndSunXmlImpressTemplate,
    VndSunXmlMath,
    VndSunXmlWriter,
    VndSunXmlWriterGlobal,
    VndSunXmlWriterTemplate,
    VndSusCalendar,
    VndSvd,
    VndSvf,
    VndSwiftviewIcs,
    VndSycle,
    VndSyft,
    VndSymbianInstall,
    VndSyncml,
    VndSyncmlDm,
    VndSyncmlDmNotification,
    VndSyncmlDmddf,
    VndSyncmlDmtnds,
    VndSyncmlDsNotification,
    VndTableschema,
    VndTaoIntentModuleArchive,
    VndTcpdumpPcap,
    VndTencentTap,
    VndTheqvd,
    VndThinkCellPpttc,
    VndTmdMediaflexApi,
    VndTml,
    VndTmobileLivetv,
    VndTriOnesource,
    VndTridTpt,
    VndTriscapeMxs,
    VndTrolltechLinguist,
    VndTrueapp,
    VndTruedoc,
    VndUbisoftWebplayer,
    VndUfdl,
    VndUiqTheme,
    VndUmajin,
    VndUnity,
    VndUoml,
    VndUplanetAlert,
    VndUplanetAlertWbxml,
    VndUplanetBearerChoice,
    VndUplanetBearerChoiceWbxml,
    VndUplanetCacheop,
    VndUplanetCacheopWbxml,
    VndUplanetChannel,
    VndUplanetChannelWbxml,
    VndUplanetList,
    VndUplanetListWbxml,
    VndUplanetListcmd,
    VndUplanetListcmdWbxml,
    VndUplanetSignal,
    VndUriMap,
    VndUsdz,
    VndUvvuMp4,
    VndValveSourceCompiledMap,
    VndValveSourceMaterial,
    VndValveSourceTexture,
    VndVcx,
    VndVdStudy,
    VndVectorworks,
    VndVel,
    VndVerimatrixVcas,
    VndVeritoneAion,
    VndVeryantThin,
    VndVesEncrypted,
    VndVidsoftVidconference,
    VndVisio,
    VndVisionary,
    VndVividenceScriptfile,
    VndVivo,
    VndVmxCvsd,
    VndVsf,
    VndVtu,
    VndWapSi,
    VndWapSic,
    VndWapSl,
    VndWapSlc,
    VndWapWbmp,
    VndWapWbxml,
    VndWapWml,
    VndWapWmlc,
    VndWapWmlscript,
    VndWapWmlscriptc,
    VndWebturbo,
    VndWfaDpp,
    VndWfaP2p,
    VndWfaWsc,
    VndWindowsDevicepairing,
    VndWmc,
    VndWmfBootstrap,
    VndWolframMathematica,
    VndWolframMathematicaPackage,
    VndWolframPlayer,
    VndWordperfect,
    VndWordperfect51,
    VndWqd,
    VndWrqHp3000Labelled,
    VndWtStf,
    VndWvCsp,
    VndWvSsp,
    VndXacml,
    VndXara,
    VndXfdl,
    VndXfdlWebform,
    VndXiff,
    VndXmi,
    VndXmpieCpkg,
    VndXmpieDpkg,
    VndXmpiePlan,
    VndXmpiePpkg,
    VndXmpieXlim,
    VndYamahaHvDic,
    VndYamahaHvScript,
    VndYamahaHvVoice,
    VndYamahaOpenscoreformat,
    VndYamahaOpenscoreformatOsfpvg,
    VndYamahaRemoteSetup,
    VndYamahaSmafAudio,
    VndYamahaSmafPhrase,
    VndYamahaThroughNgn,
    VndYamahaTunnelUdpencap,
    VndYaoweme,
    VndYellowriverCustomMenu,
    VndYoutubeYt,
    VndZbrushPcx,
    VndZul,
    VndZzazzDeck,
    VoiceMessage,
    Voicexml,
    Vorbis,
    VorbisConfig,
    VoucherCms,
    Vp8,
    Vp9,
    VqRtcpxr,
    Vrml,
    Vtt,
    Wasm,
    Watcherinfo,
    Webm,
    WebpushOptions,
    WhoisppQuery,
    WhoisppResponse,
    Widget,
    Wita,
    Wmf,
    Woff,
    Woff2,
    Wordperfect51,
    Wsdl,
    Wspolicy,
    X123,
    X3d,
    X3dVrml,
    X400Bp,
    X7zCompressed,
    XAbiword,
    XAiff,
    XAlchemy,
    XAppleDiskimage,
    XBcpio,
    XBibtex,
    XBittorrent,
    XBoo,
    XC,
    XCache,
    XCacheCsf,
    XCactvsBinary,
    XCanonCr2,
    XCanonCrw,
    XCdf,
    XCdlink,
    XCdx,
    XCerius,
    XChdr,
    XChem3d,
    XChemdraw,
    XCif,
    XCmdf,
    XCml,
    XCmuRaster,
    XCompass,
    XComponent,
    XComsol,
    XCoreldraw,
    XCoreldrawpattern,
    XCoreldrawtemplate,
    XCorelphotopaint,
    XCpio,
    XCrossfire,
    XCsh,
    XCsml,
    XCsrc,
    XCtx,
    XCxf,
    XDiff,
    XDirector,
    XDoom,
    XDsrc,
    XDvi,
    XEmblDlNucleotide,
    XEpsonErf,
    XFlv,
    XFont,
    XFontPcf,
    XFreemind,
    XGalacticSpc,
    XGamessInput,
    XGanttproject,
    XGaussianCheckpoint,
    XGaussianCube,
    XGaussianInput,
    XGaussianLog,
    XGcg8Sequence,
    XGenbank,
    XGnumeric,
    XGoSgf,
    XGraphingCalculator,
    XGsm,
    XGtar,
    XGtarCompressed,
    XHaskell,
    XHdf,
    XHin,
    XHwp,
    XIca,
    XInfo,
    XInternetSignup,
    XIphone,
    XIso9660Image,
    XIsostar,
    XJava,
    XJavaJnlpFile,
    XJcampDx,
    XJg,
    XJmol,
    XJng,
    XKillustrator,
    XKinemage,
    XLaAsf,
    XLatex,
    XLha,
    XLilypond,
    XLiterateHaskell,
    XLyx,
    XLzh,
    XLzx,
    XMacmolecule,
    XMacromodelInput,
    XMaker,
    XMatroska,
    XMdlMolfile,
    XMdlRdfile,
    XMdlRxnfile,
    XMdlSdfile,
    XMdlTgf,
    XMixedReplace,
    XMmcif,
    XMng,
    XMoc,
    XMol2,
    XMolconnZ,
    XMopacGraph,
    XMopacInput,
    XMopacOut,
    XMopacVib,
    XMsWax,
    XMsWm,
    XMsWma,
    XMsWmd,
    XMsWmv,
    XMsWmx,
    XMsWmz,
    XMsWvx,
    XMsdosProgram,
    XMsi,
    XMsvideo,
    XNcbiAsn1,
    XNcbiAsn1Ascii,
    XNcbiAsn1Binary,
    XNcbiAsn1Spec,
    XNetcdf,
    XNikonNef,
    XNsProxyAutoconfig,
    XNwc,
    XObject,
    XOlympusOrf,
    XOzApplication,
    XPascal,
    XPcsGcd,
    XPdb,
    XPerl,
    XPkcs7Certreqresp,
    XPnRealaudio,
    XPortableAnymap,
    XPortableBitmap,
    XPortableGraymap,
    XPortablePixmap,
    XPython,
    XPythonCode,
    XQgis,
    XQuicktimeplayer,
    XRdp,
    XRedhatPackageManager,
    XRgb,
    XRosdal,
    XRss,
    XRuby,
    XScala,
    XScilab,
    XScilabXcos,
    XScpls,
    XSd2,
    XSetext,
    XSfv,
    XSgiMovie,
    XSh,
    XShar,
    XSilverlight,
    XStuffit,
    XSv4cpio,
    XSv4crc,
    XSwissprot,
    XTar,
    XTcl,
    XTex,
    XTexGf,
    XTexPk,
    XTexinfo,
    XTrash,
    XTroffMan,
    XTroffMe,
    XTroffMs,
    XUstar,
    XVamasIso14976,
    XVcalendar,
    XVmd,
    XWaisSource,
    XWav,
    XWingz,
    XX509CaCert,
    XXbitmap,
    XXcf,
    XXfig,
    XXpinstall,
    XXpixmap,
    XXtel,
    XXwindowdump,
    XXyz,
    XXz,
    Xacml,
    XcapAtt,
    XcapCaps,
    XcapDiff,
    XcapEl,
    XcapError,
    XcapNs,
    XconConferenceInfo,
    XconConferenceInfoDiff,
    Xenc,
    Xhtml,
    Xliff,
    Xml,
    XmlDtd,
    XmlExternalParsedEntity,
    XmlPatch,
    Xmpp,
    Xop,
    Xslt,
    Xspf,
    Xv,
    Yang,
    YangData,
    YangPatch,
    Yin,
    Zip,
    Zlib,
    Zstd,
}

impl Subtype {
    pub(crate) fn as_str(self) -> &'static str {
        match self {
            Subtype::Star => "*",
            Subtype::A2l => "A2l",
            Subtype::Aac => "Aac",
            Subtype::Ac3 => "Ac3",
            Subtype::Ace => "Ace",
            Subtype::Aces => "Aces",
            Subtype::Activemessage => "Activemessage",
            Subtype::Activity => "Activity",
            Subtype::Alternative => "Alternative",
            Subtype::AltoCdni => "AltoCdni",
            Subtype::AltoCdnifilter => "AltoCdnifilter",
            Subtype::AltoCostmap => "AltoCostmap",
            Subtype::AltoCostmapfilter => "AltoCostmapfilter",
            Subtype::AltoDirectory => "AltoDirectory",
            Subtype::AltoEndpointcost => "AltoEndpointcost",
            Subtype::AltoEndpointcostparams => "AltoEndpointcostparams",
            Subtype::AltoEndpointprop => "AltoEndpointprop",
            Subtype::AltoEndpointpropparams => "AltoEndpointpropparams",
            Subtype::AltoError => "AltoError",
            Subtype::AltoNetworkmap => "AltoNetworkmap",
            Subtype::AltoNetworkmapfilter => "AltoNetworkmapfilter",
            Subtype::AltoPropmap => "AltoPropmap",
            Subtype::AltoPropmapparams => "AltoPropmapparams",
            Subtype::AltoUpdatestreamcontrol => "AltoUpdatestreamcontrol",
            Subtype::AltoUpdatestreamparams => "AltoUpdatestreamparams",
            Subtype::Aml => "Aml",
            Subtype::Amr => "Amr",
            Subtype::AmrWb => "AmrWb",
            Subtype::AndrewInset => "AndrewInset",
            Subtype::Annodex => "Annodex",
            Subtype::Appledouble => "Appledouble",
            Subtype::Applefile => "Applefile",
            Subtype::Aptx => "Aptx",
            Subtype::Asc => "Asc",
            Subtype::At => "At",
            Subtype::Atf => "Atf",
            Subtype::Atfx => "Atfx",
            Subtype::Atom => "Atom",
            Subtype::Atomcat => "Atomcat",
            Subtype::Atomdeleted => "Atomdeleted",
            Subtype::Atomicmail => "Atomicmail",
            Subtype::Atomserv => "Atomserv",
            Subtype::Atomsvc => "Atomsvc",
            Subtype::Atrac3 => "Atrac3",
            Subtype::AtracAdvancedLossless => "AtracAdvancedLossless",
            Subtype::AtracX => "AtracX",
            Subtype::AtscDwd => "AtscDwd",
            Subtype::AtscDynamicEventMessage => "AtscDynamicEventMessage",
            Subtype::AtscHeld => "AtscHeld",
            Subtype::AtscRdt => "AtscRdt",
            Subtype::AtscRsat => "AtscRsat",
            Subtype::Atxml => "Atxml",
            Subtype::AuthPolicy => "AuthPolicy",
            Subtype::Av1 => "Av1",
            Subtype::Avci => "Avci",
            Subtype::Avcs => "Avcs",
            Subtype::Avif => "Avif",
            Subtype::BacnetXdd => "BacnetXdd",
            Subtype::Basic => "Basic",
            Subtype::BatchSmtp => "BatchSmtp",
            Subtype::Bbolin => "Bbolin",
            Subtype::Beep => "Beep",
            Subtype::Blockdevice => "Blockdevice",
            Subtype::Bmp => "Bmp",
            Subtype::Bmpeg => "Bmpeg",
            Subtype::Bt656 => "Bt656",
            Subtype::Bv16 => "Bv16",
            Subtype::Bv32 => "Bv32",
            Subtype::Byteranges => "Byteranges",
            Subtype::CacheManifest => "CacheManifest",
            Subtype::Calendar => "Calendar",
            Subtype::CallCompletion => "CallCompletion",
            Subtype::Cals1840 => "Cals1840",
            Subtype::Captive => "Captive",
            Subtype::Cbor => "Cbor",
            Subtype::CborSeq => "CborSeq",
            Subtype::Cccex => "Cccex",
            Subtype::Ccmp => "Ccmp",
            Subtype::Ccxml => "Ccxml",
            Subtype::Cdfx => "Cdfx",
            Subtype::CdmiCapability => "CdmiCapability",
            Subtype::CdmiContainer => "CdmiContainer",
            Subtype::CdmiDomain => "CdmiDomain",
            Subtype::CdmiObject => "CdmiObject",
            Subtype::CdmiQueue => "CdmiQueue",
            Subtype::Cdni => "Cdni",
            Subtype::Cea => "Cea",
            Subtype::Cea2018 => "Cea2018",
            Subtype::CelB => "CelB",
            Subtype::Cellml => "Cellml",
            Subtype::Cfw => "Cfw",
            Subtype::Cgm => "Cgm",
            Subtype::Chardevice => "Chardevice",
            Subtype::City => "City",
            Subtype::Clearmode => "Clearmode",
            Subtype::Clr => "Clr",
            Subtype::Clue => "Clue",
            Subtype::ClueInfo => "ClueInfo",
            Subtype::Cms => "Cms",
            Subtype::Cn => "Cn",
            Subtype::Cnrp => "Cnrp",
            Subtype::CoapGroup => "CoapGroup",
            Subtype::CoapPayload => "CoapPayload",
            Subtype::Collection => "Collection",
            Subtype::Commonground => "Commonground",
            Subtype::ConferenceInfo => "ConferenceInfo",
            Subtype::Cose => "Cose",
            Subtype::CoseKey => "CoseKey",
            Subtype::CoseKeySet => "CoseKeySet",
            Subtype::Cpim => "Cpim",
            Subtype::Cpl => "Cpl",
            Subtype::Cql => "Cql",
            Subtype::CqlExtension => "CqlExtension",
            Subtype::CqlIdentifier => "CqlIdentifier",
            Subtype::Csound => "Csound",
            Subtype::Csrattrs => "Csrattrs",
            Subtype::Css => "Css",
            Subtype::CstAdata => "CstAdata",
            Subtype::Csta => "Csta",
            Subtype::Csv => "Csv",
            Subtype::CsvSchema => "CsvSchema",
            Subtype::Csvm => "Csvm",
            Subtype::CuSeeme => "CuSeeme",
            Subtype::Cwt => "Cwt",
            Subtype::Cybercash => "Cybercash",
            Subtype::Dash => "Dash",
            Subtype::DashPatch => "DashPatch",
            Subtype::Dashdelta => "Dashdelta",
            Subtype::Dat12 => "Dat12",
            Subtype::Davmount => "Davmount",
            Subtype::DcaRft => "DcaRft",
            Subtype::Dcd => "Dcd",
            Subtype::DecDx => "DecDx",
            Subtype::DeliveryStatus => "DeliveryStatus",
            Subtype::DialogInfo => "DialogInfo",
            Subtype::Dicom => "Dicom",
            Subtype::DicomRle => "DicomRle",
            Subtype::Digest => "Digest",
            Subtype::Dii => "Dii",
            Subtype::Directory => "Directory",
            Subtype::DirectoryLocked => "DirectoryLocked",
            Subtype::DispositionNotification => "DispositionNotification",
            Subtype::Dit => "Dit",
            Subtype::Dl => "Dl",
            Subtype::Dls => "Dls",
            Subtype::Dns => "Dns",
            Subtype::DnsMessage => "DnsMessage",
            Subtype::Dots => "Dots",
            Subtype::Dskpp => "Dskpp",
            Subtype::Dsptype => "Dsptype",
            Subtype::DsrEs201108 => "DsrEs201108",
            Subtype::DsrEs202050 => "DsrEs202050",
            Subtype::DsrEs202211 => "DsrEs202211",
            Subtype::DsrEs202212 => "DsrEs202212",
            Subtype::Dssc => "Dssc",
            Subtype::Dv => "Dv",
            Subtype::Dvcs => "Dvcs",
            Subtype::Dvi4 => "Dvi4",
            Subtype::E57 => "E57",
            Subtype::Eac3 => "Eac3",
            Subtype::EdiConsent => "EdiConsent",
            Subtype::EdiX12 => "EdiX12",
            Subtype::Edifact => "Edifact",
            Subtype::Efi => "Efi",
            Subtype::Elm => "Elm",
            Subtype::EmergencyCallDataCap => "EmergencyCallDataCap",
            Subtype::EmergencyCallDataComment => "EmergencyCallDataComment",
            Subtype::EmergencyCallDataControl => "EmergencyCallDataControl",
            Subtype::EmergencyCallDataDeviceInfo => "EmergencyCallDataDeviceInfo",
            Subtype::EmergencyCallDataECallMsd => "EmergencyCallDataECallMsd",
            Subtype::EmergencyCallDataProviderInfo => "EmergencyCallDataProviderInfo",
            Subtype::EmergencyCallDataServiceInfo => "EmergencyCallDataServiceInfo",
            Subtype::EmergencyCallDataSubscriberInfo => "EmergencyCallDataSubscriberInfo",
            Subtype::EmergencyCallDataVeds => "EmergencyCallDataVeds",
            Subtype::Emf => "Emf",
            Subtype::Emma => "Emma",
            Subtype::Emotionml => "Emotionml",
            Subtype::Encaprtp => "Encaprtp",
            Subtype::Encrypted => "Encrypted",
            Subtype::Enriched => "Enriched",
            Subtype::Epp => "Epp",
            Subtype::Epub => "Epub",
            Subtype::Eshop => "Eshop",
            Subtype::Evrc => "Evrc",
            Subtype::Evrc0 => "Evrc0",
            Subtype::Evrc1 => "Evrc1",
            Subtype::EvrcQcp => "EvrcQcp",
            Subtype::Evrcb => "Evrcb",
            Subtype::Evrcb0 => "Evrcb0",
            Subtype::Evrcb1 => "Evrcb1",
            Subtype::Evrcnw => "Evrcnw",
            Subtype::Evrcnw0 => "Evrcnw0",
            Subtype::Evrcnw1 => "Evrcnw1",
            Subtype::Evrcwb => "Evrcwb",
            Subtype::Evrcwb0 => "Evrcwb0",
            Subtype::Evrcwb1 => "Evrcwb1",
            Subtype::Evs => "Evs",
            Subtype::Example => "Example",
            Subtype::Exi => "Exi",
            Subtype::ExpectCtReport => "ExpectCtReport",
            Subtype::Express => "Express",
            Subtype::ExternalBody => "ExternalBody",
            Subtype::Fastinfoset => "Fastinfoset",
            Subtype::Fastsoap => "Fastsoap",
            Subtype::Fdt => "Fdt",
            Subtype::FeedbackReport => "FeedbackReport",
            Subtype::Ffv1 => "Ffv1",
            Subtype::Fhir => "Fhir",
            Subtype::Fhirpath => "Fhirpath",
            Subtype::Fifo => "Fifo",
            Subtype::Fits => "Fits",
            Subtype::Flac => "Flac",
            Subtype::Flexfec => "Flexfec",
            Subtype::Fli => "Fli",
            Subtype::FontTdpfr => "FontTdpfr",
            Subtype::FormData => "FormData",
            Subtype::FrameworkAttributes => "FrameworkAttributes",
            Subtype::Futuresplash => "Futuresplash",
            Subtype::Fwdred => "Fwdred",
            Subtype::G3fax => "G3fax",
            Subtype::G7110 => "G7110",
            Subtype::G719 => "G719",
            Subtype::G722 => "G722",
            Subtype::G7221 => "G7221",
            Subtype::G723 => "G723",
            Subtype::G72616 => "G72616",
            Subtype::G72624 => "G72624",
            Subtype::G72632 => "G72632",
            Subtype::G72640 => "G72640",
            Subtype::G728 => "G728",
            Subtype::G729 => "G729",
            Subtype::G7291 => "G7291",
            Subtype::G729d => "G729d",
            Subtype::G729e => "G729e",
            Subtype::Geo => "Geo",
            Subtype::Geopackage => "Geopackage",
            Subtype::Geoxacml => "Geoxacml",
            Subtype::Gff3 => "Gff3",
            Subtype::Gif => "Gif",
            Subtype::Gl => "Gl",
            Subtype::Global => "Global",
            Subtype::GlobalDeliveryStatus => "GlobalDeliveryStatus",
            Subtype::GlobalDispositionNotification => "GlobalDispositionNotification",
            Subtype::GlobalHeaders => "GlobalHeaders",
            Subtype::Gltf => "Gltf",
            Subtype::GltfBinary => "GltfBinary",
            Subtype::GltfBuffer => "GltfBuffer",
            Subtype::Gml => "Gml",
            Subtype::GrammarRefList => "GrammarRefList",
            Subtype::Gsm => "Gsm",
            Subtype::GsmEfr => "GsmEfr",
            Subtype::GsmHr08 => "GsmHr08",
            Subtype::Gzip => "Gzip",
            Subtype::H224 => "H224",
            Subtype::H261 => "H261",
            Subtype::H263 => "H263",
            Subtype::H2631998 => "H2631998",
            Subtype::H2632000 => "H2632000",
            Subtype::H264 => "H264",
            Subtype::H264Rcdo => "H264Rcdo",
            Subtype::H264Svc => "H264Svc",
            Subtype::H265 => "H265",
            Subtype::HeaderSet => "HeaderSet",
            Subtype::Heic => "Heic",
            Subtype::HeicSequence => "HeicSequence",
            Subtype::Heif => "Heif",
            Subtype::HeifSequence => "HeifSequence",
            Subtype::Hej2k => "Hej2k",
            Subtype::Held => "Held",
            Subtype::Hsj2 => "Hsj2",
            Subtype::Hta => "Hta",
            Subtype::Html => "Html",
            Subtype::Http => "Http",
            Subtype::Hyperstudio => "Hyperstudio",
            Subtype::ILbc => "ILbc",
            Subtype::IbeKeyRequest => "IbeKeyRequest",
            Subtype::IbePkgReply => "IbePkgReply",
            Subtype::IbePpData => "IbePpData",
            Subtype::Ief => "Ief",
            Subtype::Iges => "Iges",
            Subtype::ImIscomposing => "ImIscomposing",
            Subtype::Imdn => "Imdn",
            Subtype::Index => "Index",
            Subtype::IndexCmd => "IndexCmd",
            Subtype::IndexObj => "IndexObj",
            Subtype::IndexResponse => "IndexResponse",
            Subtype::IndexVnd => "IndexVnd",
            Subtype::Inkml => "Inkml",
            Subtype::Iotp => "Iotp",
            Subtype::IpMrV25 => "IpMrV25",
            Subtype::Ipfix => "Ipfix",
            Subtype::Ipp => "Ipp",
            Subtype::IsoSegment => "IsoSegment",
            Subtype::Isup => "Isup",
            Subtype::Its => "Its",
            Subtype::JavaArchive => "JavaArchive",
            Subtype::JavaSerializedObject => "JavaSerializedObject",
            Subtype::JavaVm => "JavaVm",
            Subtype::Javascript => "Javascript",
            Subtype::JcrCnd => "JcrCnd",
            Subtype::Jf2feed => "Jf2feed",
            Subtype::Jls => "Jls",
            Subtype::Jose => "Jose",
            Subtype::Jp2 => "Jp2",
            Subtype::Jpeg => "Jpeg",
            Subtype::Jpeg2000 => "Jpeg2000",
            Subtype::Jph => "Jph",
            Subtype::Jphc => "Jphc",
            Subtype::Jpm => "Jpm",
            Subtype::Jpx => "Jpx",
            Subtype::Jrd => "Jrd",
            Subtype::Jscalendar => "Jscalendar",
            Subtype::Json => "Json",
            Subtype::JsonPatch => "JsonPatch",
            Subtype::JsonSeq => "JsonSeq",
            Subtype::Jwk => "Jwk",
            Subtype::JwkSet => "JwkSet",
            Subtype::Jwt => "Jwt",
            Subtype::Jxl => "Jxl",
            Subtype::Jxr => "Jxr",
            Subtype::JxrA => "JxrA",
            Subtype::JxrS => "JxrS",
            Subtype::Jxs => "Jxs",
            Subtype::Jxsc => "Jxsc",
            Subtype::Jxsi => "Jxsi",
            Subtype::Jxss => "Jxss",
            Subtype::Jxsv => "Jxsv",
            Subtype::KpmlRequest => "KpmlRequest",
            Subtype::KpmlResponse => "KpmlResponse",
            Subtype::Ktx => "Ktx",
            Subtype::Ktx2 => "Ktx2",
            Subtype::L16 => "L16",
            Subtype::L20 => "L20",
            Subtype::L24 => "L24",
            Subtype::L8 => "L8",
            Subtype::Ld => "Ld",
            Subtype::Lgr => "Lgr",
            Subtype::LinkFormat => "LinkFormat",
            Subtype::LoadControl => "LoadControl",
            Subtype::Lost => "Lost",
            Subtype::Lostsync => "Lostsync",
            Subtype::Lpc => "Lpc",
            Subtype::Lpf => "Lpf",
            Subtype::Lxf => "Lxf",
            Subtype::M3g => "M3g",
            Subtype::MacBinhex40 => "MacBinhex40",
            Subtype::MacCompactpro => "MacCompactpro",
            Subtype::Macwriteii => "Macwriteii",
            Subtype::Mads => "Mads",
            Subtype::Manifest => "Manifest",
            Subtype::Marc => "Marc",
            Subtype::Marcxml => "Marcxml",
            Subtype::Markdown => "Markdown",
            Subtype::Mathematica => "Mathematica",
            Subtype::Mathml => "Mathml",
            Subtype::MathmlContent => "MathmlContent",
            Subtype::MathmlPresentation => "MathmlPresentation",
            Subtype::MbmsAssociatedProcedureDescription => "MbmsAssociatedProcedureDescription",
            Subtype::MbmsDeregister => "MbmsDeregister",
            Subtype::MbmsEnvelope => "MbmsEnvelope",
            Subtype::MbmsMsk => "MbmsMsk",
            Subtype::MbmsMskResponse => "MbmsMskResponse",
            Subtype::MbmsProtectionDescription => "MbmsProtectionDescription",
            Subtype::MbmsReceptionReport => "MbmsReceptionReport",
            Subtype::MbmsRegister => "MbmsRegister",
            Subtype::MbmsRegisterResponse => "MbmsRegisterResponse",
            Subtype::MbmsSchedule => "MbmsSchedule",
            Subtype::MbmsUserServiceDescription => "MbmsUserServiceDescription",
            Subtype::Mbox => "Mbox",
            Subtype::MediaControl => "MediaControl",
            Subtype::MediaPolicyDataset => "MediaPolicyDataset",
            Subtype::Mediaservercontrol => "Mediaservercontrol",
            Subtype::Melp => "Melp",
            Subtype::Melp1200 => "Melp1200",
            Subtype::Melp2400 => "Melp2400",
            Subtype::Melp600 => "Melp600",
            Subtype::MergePatch => "MergePatch",
            Subtype::Mesh => "Mesh",
            Subtype::Metalink4 => "Metalink4",
            Subtype::Mets => "Mets",
            Subtype::Mf4 => "Mf4",
            Subtype::Mhas => "Mhas",
            Subtype::Mikey => "Mikey",
            Subtype::Mipc => "Mipc",
            Subtype::MissingBlocks => "MissingBlocks",
            Subtype::Mixed => "Mixed",
            Subtype::Mizar => "Mizar",
            Subtype::Mj2 => "Mj2",
            Subtype::MmtAei => "MmtAei",
            Subtype::MmtUsd => "MmtUsd",
            Subtype::MobileXmf => "MobileXmf",
            Subtype::Mods => "Mods",
            Subtype::MossKeys => "MossKeys",
            Subtype::MossSignature => "MossSignature",
            Subtype::MosskeyData => "MosskeyData",
            Subtype::MosskeyRequest => "MosskeyRequest",
            Subtype::Mp1s => "Mp1s",
            Subtype::Mp21 => "Mp21",
            Subtype::Mp2p => "Mp2p",
            Subtype::Mp2t => "Mp2t",
            Subtype::Mp4 => "Mp4",
            Subtype::Mp4aLatm => "Mp4aLatm",
            Subtype::Mp4vEs => "Mp4vEs",
            Subtype::Mpa => "Mpa",
            Subtype::MpaRobust => "MpaRobust",
            Subtype::Mpeg => "Mpeg",
            Subtype::Mpeg4Generic => "Mpeg4Generic",
            Subtype::Mpeg4Iod => "Mpeg4Iod",
            Subtype::Mpeg4IodXmt => "Mpeg4IodXmt",
            Subtype::Mpegurl => "Mpegurl",
            Subtype::Mpv => "Mpv",
            Subtype::MrbConsumer => "MrbConsumer",
            Subtype::MrbPublish => "MrbPublish",
            Subtype::Msaccess => "Msaccess",
            Subtype::MscIvr => "MscIvr",
            Subtype::MscMixer => "MscMixer",
            Subtype::Msword => "Msword",
            Subtype::Mtl => "Mtl",
            Subtype::Mud => "Mud",
            Subtype::Multilingual => "Multilingual",
            Subtype::MultipartCore => "MultipartCore",
            Subtype::Mxf => "Mxf",
            Subtype::N3 => "N3",
            Subtype::NQuads => "NQuads",
            Subtype::NTriples => "NTriples",
            Subtype::Naplps => "Naplps",
            Subtype::Nasdata => "Nasdata",
            Subtype::NewsCheckgroups => "NewsCheckgroups",
            Subtype::NewsGroupinfo => "NewsGroupinfo",
            Subtype::NewsTransmission => "NewsTransmission",
            Subtype::Nlsml => "Nlsml",
            Subtype::Node => "Node",
            Subtype::Nss => "Nss",
            Subtype::Nv => "Nv",
            Subtype::OauthAuthzReq => "OauthAuthzReq",
            Subtype::Obj => "Obj",
            Subtype::ObliviousDnsMessage => "ObliviousDnsMessage",
            Subtype::OcspRequest => "OcspRequest",
            Subtype::OcspResponse => "OcspResponse",
            Subtype::OctetStream => "OctetStream",
            Subtype::Oda => "Oda",
            Subtype::Odm => "Odm",
            Subtype::Odx => "Odx",
            Subtype::OebpsPackage => "OebpsPackage",
            Subtype::Ogg => "Ogg",
            Subtype::Onenote => "Onenote",
            Subtype::OpcNodeset => "OpcNodeset",
            Subtype::Opus => "Opus",
            Subtype::Oscore => "Oscore",
            Subtype::Otf => "Otf",
            Subtype::Oxps => "Oxps",
            Subtype::P21 => "P21",
            Subtype::P2pOverlay => "P2pOverlay",
            Subtype::Parallel => "Parallel",
            Subtype::Parameters => "Parameters",
            Subtype::Parityfec => "Parityfec",
            Subtype::Partial => "Partial",
            Subtype::Passport => "Passport",
            Subtype::PatchOpsError => "PatchOpsError",
            Subtype::Pcma => "Pcma",
            Subtype::PcmaWb => "PcmaWb",
            Subtype::Pcmu => "Pcmu",
            Subtype::PcmuWb => "PcmuWb",
            Subtype::Pdf => "Pdf",
            Subtype::Pdx => "Pdx",
            Subtype::PemCertificateChain => "PemCertificateChain",
            Subtype::PgpEncrypted => "PgpEncrypted",
            Subtype::PgpKeys => "PgpKeys",
            Subtype::PgpSignature => "PgpSignature",
            Subtype::PicsRules => "PicsRules",
            Subtype::Pidf => "Pidf",
            Subtype::PidfDiff => "PidfDiff",
            Subtype::Pkcs10 => "Pkcs10",
            Subtype::Pkcs12 => "Pkcs12",
            Subtype::Pkcs7Mime => "Pkcs7Mime",
            Subtype::Pkcs7Signature => "Pkcs7Signature",
            Subtype::Pkcs8 => "Pkcs8",
            Subtype::Pkcs8Encrypted => "Pkcs8Encrypted",
            Subtype::PkixAttrCert => "PkixAttrCert",
            Subtype::PkixCert => "PkixCert",
            Subtype::PkixCrl => "PkixCrl",
            Subtype::PkixPkipath => "PkixPkipath",
            Subtype::Pkixcmp => "Pkixcmp",
            Subtype::Plain => "Plain",
            Subtype::Pls => "Pls",
            Subtype::Png => "Png",
            Subtype::PocSettings => "PocSettings",
            Subtype::Pointer => "Pointer",
            Subtype::Postscript => "Postscript",
            Subtype::PpspTracker => "PpspTracker",
            Subtype::Prc => "Prc",
            Subtype::Problem => "Problem",
            Subtype::Provenance => "Provenance",
            Subtype::ProvenanceNotation => "ProvenanceNotation",
            Subtype::PrsAlvestrandTitraxSheet => "PrsAlvestrandTitraxSheet",
            Subtype::PrsBtif => "PrsBtif",
            Subtype::PrsCww => "PrsCww",
            Subtype::PrsCyn => "PrsCyn",
            Subtype::PrsFallensteinRst => "PrsFallensteinRst",
            Subtype::PrsHpub => "PrsHpub",
            Subtype::PrsLinesTag => "PrsLinesTag",
            Subtype::PrsNprend => "PrsNprend",
            Subtype::PrsPlucker => "PrsPlucker",
            Subtype::PrsPropLogic => "PrsPropLogic",
            Subtype::PrsPti => "PrsPti",
            Subtype::PrsRdfXmlCrypt => "PrsRdfXmlCrypt",
            Subtype::PrsSid => "PrsSid",
            Subtype::PrsXsf => "PrsXsf",
            Subtype::Pskc => "Pskc",
            Subtype::Pvd => "Pvd",
            Subtype::PwgRaster => "PwgRaster",
            Subtype::Qcelp => "Qcelp",
            Subtype::Qsig => "Qsig",
            Subtype::Quicktime => "Quicktime",
            Subtype::Raptorfec => "Raptorfec",
            Subtype::Raw => "Raw",
            Subtype::Rdap => "Rdap",
            Subtype::Rdf => "Rdf",
            Subtype::Red => "Red",
            Subtype::Reginfo => "Reginfo",
            Subtype::Related => "Related",
            Subtype::RelaxNgCompactSyntax => "RelaxNgCompactSyntax",
            Subtype::RemotePrinting => "RemotePrinting",
            Subtype::Report => "Report",
            Subtype::Reputon => "Reputon",
            Subtype::ResourceLists => "ResourceLists",
            Subtype::ResourceListsDiff => "ResourceListsDiff",
            Subtype::Rfc => "Rfc",
            Subtype::Rfc822 => "Rfc822",
            Subtype::Rfc822Headers => "Rfc822Headers",
            Subtype::Riscos => "Riscos",
            Subtype::Rlmi => "Rlmi",
            Subtype::RlsServices => "RlsServices",
            Subtype::RouteApd => "RouteApd",
            Subtype::RouteSTsid => "RouteSTsid",
            Subtype::RouteUsd => "RouteUsd",
            Subtype::RpkiGhostbusters => "RpkiGhostbusters",
            Subtype::RpkiManifest => "RpkiManifest",
            Subtype::RpkiPublication => "RpkiPublication",
            Subtype::RpkiRoa => "RpkiRoa",
            Subtype::RpkiUpdown => "RpkiUpdown",
            Subtype::Rtf => "Rtf",
            Subtype::RtpEncAescm128 => "RtpEncAescm128",
            Subtype::RtpMidi => "RtpMidi",
            Subtype::Rtploopback => "Rtploopback",
            Subtype::Rtx => "Rtx",
            Subtype::SHttp => "SHttp",
            Subtype::Samlassertion => "Samlassertion",
            Subtype::Samlmetadata => "Samlmetadata",
            Subtype::Sarif => "Sarif",
            Subtype::SarifExternalProperties => "SarifExternalProperties",
            Subtype::Sbe => "Sbe",
            Subtype::Sbml => "Sbml",
            Subtype::Scaip => "Scaip",
            Subtype::Scim => "Scim",
            Subtype::Scip => "Scip",
            Subtype::ScvpCvRequest => "ScvpCvRequest",
            Subtype::ScvpCvResponse => "ScvpCvResponse",
            Subtype::ScvpVpRequest => "ScvpVpRequest",
            Subtype::ScvpVpResponse => "ScvpVpResponse",
            Subtype::Sdp => "Sdp",
            Subtype::Secevent => "Secevent",
            Subtype::Senml => "Senml",
            Subtype::SenmlEtch => "SenmlEtch",
            Subtype::SenmlExi => "SenmlExi",
            Subtype::Sensml => "Sensml",
            Subtype::SensmlExi => "SensmlExi",
            Subtype::Sep => "Sep",
            Subtype::SepExi => "SepExi",
            Subtype::SessionInfo => "SessionInfo",
            Subtype::SetPayment => "SetPayment",
            Subtype::SetPaymentInitiation => "SetPaymentInitiation",
            Subtype::SetRegistration => "SetRegistration",
            Subtype::SetRegistrationInitiation => "SetRegistrationInitiation",
            Subtype::Sfnt => "Sfnt",
            Subtype::Sgml => "Sgml",
            Subtype::SgmlOpenCatalog => "SgmlOpenCatalog",
            Subtype::Shaclc => "Shaclc",
            Subtype::Shex => "Shex",
            Subtype::Shf => "Shf",
            Subtype::Sieve => "Sieve",
            Subtype::Signed => "Signed",
            Subtype::SimpleFilter => "SimpleFilter",
            Subtype::SimpleMessageSummary => "SimpleMessageSummary",
            Subtype::SimpleSymbolContainer => "SimpleSymbolContainer",
            Subtype::Sip => "Sip",
            Subtype::Sipc => "Sipc",
            Subtype::Sipfrag => "Sipfrag",
            Subtype::Slate => "Slate",
            Subtype::Smil => "Smil",
            Subtype::Smpte291 => "Smpte291",
            Subtype::Smpte292m => "Smpte292m",
            Subtype::Smpte336m => "Smpte336m",
            Subtype::Smv => "Smv",
            Subtype::Smv0 => "Smv0",
            Subtype::SmvQcp => "SmvQcp",
            Subtype::Soap => "Soap",
            Subtype::Socket => "Socket",
            Subtype::Sofa => "Sofa",
            Subtype::SpMidi => "SpMidi",
            Subtype::SparqlQuery => "SparqlQuery",
            Subtype::SparqlResults => "SparqlResults",
            Subtype::Spdx => "Spdx",
            Subtype::Speex => "Speex",
            Subtype::SpiritsEvent => "SpiritsEvent",
            Subtype::Sql => "Sql",
            Subtype::Srgs => "Srgs",
            Subtype::Sru => "Sru",
            Subtype::Ssml => "Ssml",
            Subtype::Step => "Step",
            Subtype::StepXml => "StepXml",
            Subtype::Stix => "Stix",
            Subtype::Stl => "Stl",
            Subtype::Strings => "Strings",
            Subtype::Svg => "Svg",
            Subtype::Swid => "Swid",
            Subtype::T140 => "T140",
            Subtype::T140c => "T140c",
            Subtype::T38 => "T38",
            Subtype::TabSeparatedValues => "TabSeparatedValues",
            Subtype::TampApexUpdate => "TampApexUpdate",
            Subtype::TampApexUpdateConfirm => "TampApexUpdateConfirm",
            Subtype::TampCommunityUpdate => "TampCommunityUpdate",
            Subtype::TampCommunityUpdateConfirm => "TampCommunityUpdateConfirm",
            Subtype::TampError => "TampError",
            Subtype::TampSequenceAdjust => "TampSequenceAdjust",
            Subtype::TampSequenceAdjustConfirm => "TampSequenceAdjustConfirm",
            Subtype::TampStatusQuery => "TampStatusQuery",
            Subtype::TampStatusResponse => "TampStatusResponse",
            Subtype::TampUpdate => "TampUpdate",
            Subtype::TampUpdateConfirm => "TampUpdateConfirm",
            Subtype::Taxii => "Taxii",
            Subtype::Td => "Td",
            Subtype::Tei => "Tei",
            Subtype::TelephoneEvent => "TelephoneEvent",
            Subtype::TetraAcelp => "TetraAcelp",
            Subtype::TetraAcelpBb => "TetraAcelpBb",
            Subtype::TetraIsi => "TetraIsi",
            Subtype::Texmacs => "Texmacs",
            Subtype::Thraud => "Thraud",
            Subtype::Tiff => "Tiff",
            Subtype::TiffFx => "TiffFx",
            Subtype::TimestampQuery => "TimestampQuery",
            Subtype::TimestampReply => "TimestampReply",
            Subtype::TimestampedData => "TimestampedData",
            Subtype::Tlsrpt => "Tlsrpt",
            Subtype::Tnauthlist => "Tnauthlist",
            Subtype::TokenIntrospection => "TokenIntrospection",
            Subtype::Tone => "Tone",
            Subtype::TrackingStatus => "TrackingStatus",
            Subtype::TrickleIceSdpfrag => "TrickleIceSdpfrag",
            Subtype::Trig => "Trig",
            Subtype::Troff => "Troff",
            Subtype::Tsvcis => "Tsvcis",
            Subtype::Ttf => "Ttf",
            Subtype::Ttml => "Ttml",
            Subtype::Turtle => "Turtle",
            Subtype::TveTrigger => "TveTrigger",
            Subtype::Tzif => "Tzif",
            Subtype::TzifLeap => "TzifLeap",
            Subtype::U3d => "U3d",
            Subtype::Uemclip => "Uemclip",
            Subtype::Ulpfec => "Ulpfec",
            Subtype::UrcGrpsheet => "UrcGrpsheet",
            Subtype::UrcRessheet => "UrcRessheet",
            Subtype::UrcTargetdesc => "UrcTargetdesc",
            Subtype::UrcUisocketdesc => "UrcUisocketdesc",
            Subtype::UriList => "UriList",
            Subtype::Usac => "Usac",
            Subtype::Vc1 => "Vc1",
            Subtype::Vc2 => "Vc2",
            Subtype::Vcard => "Vcard",
            Subtype::Vdvi => "Vdvi",
            Subtype::Vemmi => "Vemmi",
            Subtype::VmrWb => "VmrWb",
            Subtype::Vnd1000mindsDecisionModel => "Vnd1000mindsDecisionModel",
            Subtype::Vnd3gpp2Bcmcsinfo => "Vnd3gpp2Bcmcsinfo",
            Subtype::Vnd3gpp2Sms => "Vnd3gpp2Sms",
            Subtype::Vnd3gpp2Tcap => "Vnd3gpp2Tcap",
            Subtype::Vnd3gpp5gnas => "Vnd3gpp5gnas",
            Subtype::Vnd3gppAccessTransferEvents => "Vnd3gppAccessTransferEvents",
            Subtype::Vnd3gppBsf => "Vnd3gppBsf",
            Subtype::Vnd3gppGmop => "Vnd3gppGmop",
            Subtype::Vnd3gppGtpc => "Vnd3gppGtpc",
            Subtype::Vnd3gppInterworkingData => "Vnd3gppInterworkingData",
            Subtype::Vnd3gppIufp => "Vnd3gppIufp",
            Subtype::Vnd3gppLpp => "Vnd3gppLpp",
            Subtype::Vnd3gppMcSignallingEar => "Vnd3gppMcSignallingEar",
            Subtype::Vnd3gppMcdataAffiliationCommand => "Vnd3gppMcdataAffiliationCommand",
            Subtype::Vnd3gppMcdataInfo => "Vnd3gppMcdataInfo",
            Subtype::Vnd3gppMcdataPayload => "Vnd3gppMcdataPayload",
            Subtype::Vnd3gppMcdataServiceConfig => "Vnd3gppMcdataServiceConfig",
            Subtype::Vnd3gppMcdataSignalling => "Vnd3gppMcdataSignalling",
            Subtype::Vnd3gppMcdataUeConfig => "Vnd3gppMcdataUeConfig",
            Subtype::Vnd3gppMcdataUserProfile => "Vnd3gppMcdataUserProfile",
            Subtype::Vnd3gppMcpttAffiliationCommand => "Vnd3gppMcpttAffiliationCommand",
            Subtype::Vnd3gppMcpttFloorRequest => "Vnd3gppMcpttFloorRequest",
            Subtype::Vnd3gppMcpttInfo => "Vnd3gppMcpttInfo",
            Subtype::Vnd3gppMcpttLocationInfo => "Vnd3gppMcpttLocationInfo",
            Subtype::Vnd3gppMcpttMbmsUsageInfo => "Vnd3gppMcpttMbmsUsageInfo",
            Subtype::Vnd3gppMcpttServiceConfig => "Vnd3gppMcpttServiceConfig",
            Subtype::Vnd3gppMcpttSigned => "Vnd3gppMcpttSigned",
            Subtype::Vnd3gppMcpttUeConfig => "Vnd3gppMcpttUeConfig",
            Subtype::Vnd3gppMcpttUeInitConfig => "Vnd3gppMcpttUeInitConfig",
            Subtype::Vnd3gppMcpttUserProfile => "Vnd3gppMcpttUserProfile",
            Subtype::Vnd3gppMcvideoAffiliationCommand => "Vnd3gppMcvideoAffiliationCommand",
            Subtype::Vnd3gppMcvideoInfo => "Vnd3gppMcvideoInfo",
            Subtype::Vnd3gppMcvideoLocationInfo => "Vnd3gppMcvideoLocationInfo",
            Subtype::Vnd3gppMcvideoMbmsUsageInfo => "Vnd3gppMcvideoMbmsUsageInfo",
            Subtype::Vnd3gppMcvideoServiceConfig => "Vnd3gppMcvideoServiceConfig",
            Subtype::Vnd3gppMcvideoTransmissionRequest => "Vnd3gppMcvideoTransmissionRequest",
            Subtype::Vnd3gppMcvideoUeConfig => "Vnd3gppMcvideoUeConfig",
            Subtype::Vnd3gppMcvideoUserProfile => "Vnd3gppMcvideoUserProfile",
            Subtype::Vnd3gppMidCall => "Vnd3gppMidCall",
            Subtype::Vnd3gppNgap => "Vnd3gppNgap",
            Subtype::Vnd3gppPfcp => "Vnd3gppPfcp",
            Subtype::Vnd3gppPicBwLarge => "Vnd3gppPicBwLarge",
            Subtype::Vnd3gppPicBwSmall => "Vnd3gppPicBwSmall",
            Subtype::Vnd3gppPicBwVar => "Vnd3gppPicBwVar",
            Subtype::Vnd3gppProse => "Vnd3gppProse",
            Subtype::Vnd3gppProsePc3ch => "Vnd3gppProsePc3ch",
            Subtype::Vnd3gppS1ap => "Vnd3gppS1ap",
            Subtype::Vnd3gppSms => "Vnd3gppSms",
            Subtype::Vnd3gppSrvccExt => "Vnd3gppSrvccExt",
            Subtype::Vnd3gppSrvccInfo => "Vnd3gppSrvccInfo",
            Subtype::Vnd3gppStateAndEventInfo => "Vnd3gppStateAndEventInfo",
            Subtype::Vnd3gppUssd => "Vnd3gppUssd",
            Subtype::Vnd3gppV2xLocalServiceInformation => "Vnd3gppV2xLocalServiceInformation",
            Subtype::Vnd3lightssoftwareImagescal => "Vnd3lightssoftwareImagescal",
            Subtype::Vnd3mPostItNotes => "Vnd3mPostItNotes",
            Subtype::Vnd4sb => "Vnd4sb",
            Subtype::VndA => "VndA",
            Subtype::VndAbc => "VndAbc",
            Subtype::VndAccpacSimplyAso => "VndAccpacSimplyAso",
            Subtype::VndAccpacSimplyImp => "VndAccpacSimplyImp",
            Subtype::VndAcucobol => "VndAcucobol",
            Subtype::VndAcucorp => "VndAcucorp",
            Subtype::VndAdobeFlashMovie => "VndAdobeFlashMovie",
            Subtype::VndAdobeFormscentralFcdt => "VndAdobeFormscentralFcdt",
            Subtype::VndAdobeFxp => "VndAdobeFxp",
            Subtype::VndAdobePartialUpload => "VndAdobePartialUpload",
            Subtype::VndAdobePhotoshop => "VndAdobePhotoshop",
            Subtype::VndAdobeXdp => "VndAdobeXdp",
            Subtype::VndAdobeXfdf => "VndAdobeXfdf",
            Subtype::VndAetherImp => "VndAetherImp",
            Subtype::VndAfpcAfplinedata => "VndAfpcAfplinedata",
            Subtype::VndAfpcAfplinedataPagedef => "VndAfpcAfplinedataPagedef",
            Subtype::VndAfpcCmocaCmresource => "VndAfpcCmocaCmresource",
            Subtype::VndAfpcFocaCharset => "VndAfpcFocaCharset",
            Subtype::VndAfpcFocaCodedfont => "VndAfpcFocaCodedfont",
            Subtype::VndAfpcFocaCodepage => "VndAfpcFocaCodepage",
            Subtype::VndAfpcModca => "VndAfpcModca",
            Subtype::VndAfpcModcaFormdef => "VndAfpcModcaFormdef",
            Subtype::VndAfpcModcaMediummap => "VndAfpcModcaMediummap",
            Subtype::VndAfpcModcaObjectcontainer => "VndAfpcModcaObjectcontainer",
            Subtype::VndAfpcModcaOverlay => "VndAfpcModcaOverlay",
            Subtype::VndAfpcModcaPagesegment => "VndAfpcModcaPagesegment",
            Subtype::VndAge => "VndAge",
            Subtype::VndAhBarcode => "VndAhBarcode",
            Subtype::VndAheadSpace => "VndAheadSpace",
            Subtype::VndAirzipAcceleratorAzv => "VndAirzipAcceleratorAzv",
            Subtype::VndAirzipFilesecureAzf => "VndAirzipFilesecureAzf",
            Subtype::VndAirzipFilesecureAzs => "VndAirzipFilesecureAzs",
            Subtype::VndAmadeus => "VndAmadeus",
            Subtype::VndAmazonMobi8Ebook => "VndAmazonMobi8Ebook",
            Subtype::VndAmericandynamicsAcc => "VndAmericandynamicsAcc",
            Subtype::VndAmigaAmi => "VndAmigaAmi",
            Subtype::VndAmundsenMaze => "VndAmundsenMaze",
            Subtype::VndAndroidOta => "VndAndroidOta",
            Subtype::VndAndroidPackageArchive => "VndAndroidPackageArchive",
            Subtype::VndAnki => "VndAnki",
            Subtype::VndAnserWebCertificateIssueInitiation => {
                "VndAnserWebCertificateIssueInitiation"
            }
            Subtype::VndAnserWebFundsTransferInitiation => "VndAnserWebFundsTransferInitiation",
            Subtype::VndAntixGameComponent => "VndAntixGameComponent",
            Subtype::VndApacheArrowFile => "VndApacheArrowFile",
            Subtype::VndApacheArrowStream => "VndApacheArrowStream",
            Subtype::VndApacheThriftBinary => "VndApacheThriftBinary",
            Subtype::VndApacheThriftCompact => "VndApacheThriftCompact",
            Subtype::VndApacheThriftJson => "VndApacheThriftJson",
            Subtype::VndApi => "VndApi",
            Subtype::VndAplextorWarrp => "VndAplextorWarrp",
            Subtype::VndApothekendeReservation => "VndApothekendeReservation",
            Subtype::VndAppleInstaller => "VndAppleInstaller",
            Subtype::VndAppleKeynote => "VndAppleKeynote",
            Subtype::VndAppleMpegurl => "VndAppleMpegurl",
            Subtype::VndAppleNumbers => "VndAppleNumbers",
            Subtype::VndApplePages => "VndApplePages",
            Subtype::VndAristanetworksSwi => "VndAristanetworksSwi",
            Subtype::VndArtisan => "VndArtisan",
            Subtype::VndArtsquare => "VndArtsquare",
            Subtype::VndAsciiArt => "VndAsciiArt",
            Subtype::VndAstraeaSoftwareIota => "VndAstraeaSoftwareIota",
            Subtype::VndAudiograph => "VndAudiograph",
            Subtype::VndAudiokoz => "VndAudiokoz",
            Subtype::VndAutopackage => "VndAutopackage",
            Subtype::VndAvalon => "VndAvalon",
            Subtype::VndAvistar => "VndAvistar",
            Subtype::VndBalsamiqBmml => "VndBalsamiqBmml",
            Subtype::VndBalsamiqBmpr => "VndBalsamiqBmpr",
            Subtype::VndBananaAccounting => "VndBananaAccounting",
            Subtype::VndBbfUspError => "VndBbfUspError",
            Subtype::VndBbfUspMsg => "VndBbfUspMsg",
            Subtype::VndBekitzurStech => "VndBekitzurStech",
            Subtype::VndBintMedContent => "VndBintMedContent",
            Subtype::VndBintMedPlus => "VndBintMedPlus",
            Subtype::VndBiopaxRdf => "VndBiopaxRdf",
            Subtype::VndBlinkIdbValueWrapper => "VndBlinkIdbValueWrapper",
            Subtype::VndBlueiceMultipass => "VndBlueiceMultipass",
            Subtype::VndBluetoothEpOob => "VndBluetoothEpOob",
            Subtype::VndBluetoothLeOob => "VndBluetoothLeOob",
            Subtype::VndBmi => "VndBmi",
            Subtype::VndBpf => "VndBpf",
            Subtype::VndBpf3 => "VndBpf3",
            Subtype::VndBusinessobjects => "VndBusinessobjects",
            Subtype::VndByuUapi => "VndByuUapi",
            Subtype::VndCabJscript => "VndCabJscript",
            Subtype::VndCanonCpdl => "VndCanonCpdl",
            Subtype::VndCanonLips => "VndCanonLips",
            Subtype::VndCapasystemsPg => "VndCapasystemsPg",
            Subtype::VndCctv => "VndCctv",
            Subtype::VndCelp => "VndCelp",
            Subtype::VndCendioThinlincClientconf => "VndCendioThinlincClientconf",
            Subtype::VndCenturySystemsTcpStream => "VndCenturySystemsTcpStream",
            Subtype::VndChemdraw => "VndChemdraw",
            Subtype::VndChessPgn => "VndChessPgn",
            Subtype::VndChipnutsKaraokeMmd => "VndChipnutsKaraokeMmd",
            Subtype::VndCiedi => "VndCiedi",
            Subtype::VndCinderella => "VndCinderella",
            Subtype::VndCirpackIsdnExt => "VndCirpackIsdnExt",
            Subtype::VndCiscoNse => "VndCiscoNse",
            Subtype::VndCitationstylesStyle => "VndCitationstylesStyle",
            Subtype::VndClaymore => "VndClaymore",
            Subtype::VndCloantoRp9 => "VndCloantoRp9",
            Subtype::VndClonkC4group => "VndClonkC4group",
            Subtype::VndCluetrustCartomobileConfig => "VndCluetrustCartomobileConfig",
            Subtype::VndCluetrustCartomobileConfigPkg => "VndCluetrustCartomobileConfigPkg",
            Subtype::VndCmlesRadioEvents => "VndCmlesRadioEvents",
            Subtype::VndCnsAnp1 => "VndCnsAnp1",
            Subtype::VndCnsInf1 => "VndCnsInf1",
            Subtype::VndCnsInf2 => "VndCnsInf2",
            Subtype::VndCoffeescript => "VndCoffeescript",
            Subtype::VndCollabioXodocumentsDocument => "VndCollabioXodocumentsDocument",
            Subtype::VndCollabioXodocumentsDocumentTemplate => {
                "VndCollabioXodocumentsDocumentTemplate"
            }
            Subtype::VndCollabioXodocumentsPresentation => "VndCollabioXodocumentsPresentation",
            Subtype::VndCollabioXodocumentsPresentationTemplate => {
                "VndCollabioXodocumentsPresentationTemplate"
            }
            Subtype::VndCollabioXodocumentsSpreadsheet => "VndCollabioXodocumentsSpreadsheet",
            Subtype::VndCollabioXodocumentsSpreadsheetTemplate => {
                "VndCollabioXodocumentsSpreadsheetTemplate"
            }
            Subtype::VndCollada => "VndCollada",
            Subtype::VndCollection => "VndCollection",
            Subtype::VndCollectionDoc => "VndCollectionDoc",
            Subtype::VndCollectionNext => "VndCollectionNext",
            Subtype::VndComicbook => "VndComicbook",
            Subtype::VndComicbookRar => "VndComicbookRar",
            Subtype::VndCommerceBattelle => "VndCommerceBattelle",
            Subtype::VndCommonspace => "VndCommonspace",
            Subtype::VndContactCmsg => "VndContactCmsg",
            Subtype::VndCoreosIgnition => "VndCoreosIgnition",
            Subtype::VndCosmocaller => "VndCosmocaller",
            Subtype::VndCrickClicker => "VndCrickClicker",
            Subtype::VndCrickClickerKeyboard => "VndCrickClickerKeyboard",
            Subtype::VndCrickClickerPalette => "VndCrickClickerPalette",
            Subtype::VndCrickClickerTemplate => "VndCrickClickerTemplate",
            Subtype::VndCrickClickerWordbank => "VndCrickClickerWordbank",
            Subtype::VndCriticaltoolsWbs => "VndCriticaltoolsWbs",
            Subtype::VndCryptiiPipe => "VndCryptiiPipe",
            Subtype::VndCryptoShadeFile => "VndCryptoShadeFile",
            Subtype::VndCryptomatorEncrypted => "VndCryptomatorEncrypted",
            Subtype::VndCryptomatorVault => "VndCryptomatorVault",
            Subtype::VndCtcPosml => "VndCtcPosml",
            Subtype::VndCtctWs => "VndCtctWs",
            Subtype::VndCupsPdf => "VndCupsPdf",
            Subtype::VndCupsPostscript => "VndCupsPostscript",
            Subtype::VndCupsPpd => "VndCupsPpd",
            Subtype::VndCupsRaster => "VndCupsRaster",
            Subtype::VndCupsRaw => "VndCupsRaw",
            Subtype::VndCurl => "VndCurl",
            Subtype::VndCyanDeanRoot => "VndCyanDeanRoot",
            Subtype::VndCybank => "VndCybank",
            Subtype::VndCyclonedx => "VndCyclonedx",
            Subtype::VndD2lCoursepackage1p0 => "VndD2lCoursepackage1p0",
            Subtype::VndD3mDataset => "VndD3mDataset",
            Subtype::VndD3mProblem => "VndD3mProblem",
            Subtype::VndDart => "VndDart",
            Subtype::VndDataVisionRdz => "VndDataVisionRdz",
            Subtype::VndDatapackage => "VndDatapackage",
            Subtype::VndDataresource => "VndDataresource",
            Subtype::VndDbf => "VndDbf",
            Subtype::VndDebianBinaryPackage => "VndDebianBinaryPackage",
            Subtype::VndDebianCopyright => "VndDebianCopyright",
            Subtype::VndDeceAudio => "VndDeceAudio",
            Subtype::VndDeceData => "VndDeceData",
            Subtype::VndDeceGraphic => "VndDeceGraphic",
            Subtype::VndDeceHd => "VndDeceHd",
            Subtype::VndDeceMobile => "VndDeceMobile",
            Subtype::VndDeceMp4 => "VndDeceMp4",
            Subtype::VndDecePd => "VndDecePd",
            Subtype::VndDeceSd => "VndDeceSd",
            Subtype::VndDeceTtml => "VndDeceTtml",
            Subtype::VndDeceUnspecified => "VndDeceUnspecified",
            Subtype::VndDeceVideo => "VndDeceVideo",
            Subtype::VndDeceZip => "VndDeceZip",
            Subtype::VndDenovoFcselayoutLink => "VndDenovoFcselayoutLink",
            Subtype::VndDesmumeMovie => "VndDesmumeMovie",
            Subtype::VndDigitalWinds => "VndDigitalWinds",
            Subtype::VndDirBiPlateDlNosuffix => "VndDirBiPlateDlNosuffix",
            Subtype::VndDirectvMpeg => "VndDirectvMpeg",
            Subtype::VndDirectvMpegTts => "VndDirectvMpegTts",
            Subtype::VndDjvu => "VndDjvu",
            Subtype::VndDlnaAdts => "VndDlnaAdts",
            Subtype::VndDlnaMpegTts => "VndDlnaMpegTts",
            Subtype::VndDmClientScript => "VndDmClientScript",
            Subtype::VndDmDelegation => "VndDmDelegation",
            Subtype::VndDna => "VndDna",
            Subtype::VndDocument => "VndDocument",
            Subtype::VndDolbyHeaac1 => "VndDolbyHeaac1",
            Subtype::VndDolbyHeaac2 => "VndDolbyHeaac2",
            Subtype::VndDolbyMlp => "VndDolbyMlp",
            Subtype::VndDolbyMobile1 => "VndDolbyMobile1",
            Subtype::VndDolbyMobile2 => "VndDolbyMobile2",
            Subtype::VndDolbyMps => "VndDolbyMps",
            Subtype::VndDolbyPl2 => "VndDolbyPl2",
            Subtype::VndDolbyPl2x => "VndDolbyPl2x",
            Subtype::VndDolbyPl2z => "VndDolbyPl2z",
            Subtype::VndDolbyPulse1 => "VndDolbyPulse1",
            Subtype::VndDoremirScorecloudBinaryDocument => "VndDoremirScorecloudBinaryDocument",
            Subtype::VndDpgraph => "VndDpgraph",
            Subtype::VndDra => "VndDra",
            Subtype::VndDreamfactory => "VndDreamfactory",
            Subtype::VndDrive => "VndDrive",
            Subtype::VndDtgLocal => "VndDtgLocal",
            Subtype::VndDtgLocalFlash => "VndDtgLocalFlash",
            Subtype::VndDtgLocalHtml => "VndDtgLocalHtml",
            Subtype::VndDts => "VndDts",
            Subtype::VndDtsHd => "VndDtsHd",
            Subtype::VndDtsUhd => "VndDtsUhd",
            Subtype::VndDvbAit => "VndDvbAit",
            Subtype::VndDvbDvbisl => "VndDvbDvbisl",
            Subtype::VndDvbDvbj => "VndDvbDvbj",
            Subtype::VndDvbEsgcontainer => "VndDvbEsgcontainer",
            Subtype::VndDvbFile => "VndDvbFile",
            Subtype::VndDvbIpdcdftnotifaccess => "VndDvbIpdcdftnotifaccess",
            Subtype::VndDvbIpdcesgaccess => "VndDvbIpdcesgaccess",
            Subtype::VndDvbIpdcesgaccess2 => "VndDvbIpdcesgaccess2",
            Subtype::VndDvbIpdcesgpdd => "VndDvbIpdcesgpdd",
            Subtype::VndDvbIpdcroaming => "VndDvbIpdcroaming",
            Subtype::VndDvbIptvAlfecBase => "VndDvbIptvAlfecBase",
            Subtype::VndDvbIptvAlfecEnhancement => "VndDvbIptvAlfecEnhancement",
            Subtype::VndDvbNotifAggregateRoot => "VndDvbNotifAggregateRoot",
            Subtype::VndDvbNotifContainer => "VndDvbNotifContainer",
            Subtype::VndDvbNotifGeneric => "VndDvbNotifGeneric",
            Subtype::VndDvbNotifIaMsglist => "VndDvbNotifIaMsglist",
            Subtype::VndDvbNotifIaRegistrationRequest => "VndDvbNotifIaRegistrationRequest",
            Subtype::VndDvbNotifIaRegistrationResponse => "VndDvbNotifIaRegistrationResponse",
            Subtype::VndDvbNotifInit => "VndDvbNotifInit",
            Subtype::VndDvbPfr => "VndDvbPfr",
            Subtype::VndDvbService => "VndDvbService",
            Subtype::VndDvbSubtitle => "VndDvbSubtitle",
            Subtype::VndDwf => "VndDwf",
            Subtype::VndDwg => "VndDwg",
            Subtype::VndDxf => "VndDxf",
            Subtype::VndDxr => "VndDxr",
            Subtype::VndDynageo => "VndDynageo",
            Subtype::VndDzr => "VndDzr",
            Subtype::VndEasykaraokeCdgdownload => "VndEasykaraokeCdgdownload",
            Subtype::VndEcdisUpdate => "VndEcdisUpdate",
            Subtype::VndEcipRlp => "VndEcipRlp",
            Subtype::VndEclipseDitto => "VndEclipseDitto",
            Subtype::VndEcowinChart => "VndEcowinChart",
            Subtype::VndEcowinFilerequest => "VndEcowinFilerequest",
            Subtype::VndEcowinFileupdate => "VndEcowinFileupdate",
            Subtype::VndEcowinSeries => "VndEcowinSeries",
            Subtype::VndEcowinSeriesrequest => "VndEcowinSeriesrequest",
            Subtype::VndEcowinSeriesupdate => "VndEcowinSeriesupdate",
            Subtype::VndEfiImg => "VndEfiImg",
            Subtype::VndEfiIso => "VndEfiIso",
            Subtype::VndEmclientAccessrequest => "VndEmclientAccessrequest",
            Subtype::VndEnliven => "VndEnliven",
            Subtype::VndEnphaseEnvoy => "VndEnphaseEnvoy",
            Subtype::VndEprintsData => "VndEprintsData",
            Subtype::VndEpsonEsf => "VndEpsonEsf",
            Subtype::VndEpsonMsf => "VndEpsonMsf",
            Subtype::VndEpsonQuickanime => "VndEpsonQuickanime",
            Subtype::VndEpsonSalt => "VndEpsonSalt",
            Subtype::VndEpsonSsf => "VndEpsonSsf",
            Subtype::VndEricssonQuickcall => "VndEricssonQuickcall",
            Subtype::VndEsmertecThemeDescriptor => "VndEsmertecThemeDescriptor",
            Subtype::VndEspassEspass => "VndEspassEspass",
            Subtype::VndEszigno3 => "VndEszigno3",
            Subtype::VndEtsiAoc => "VndEtsiAoc",
            Subtype::VndEtsiAsicE => "VndEtsiAsicE",
            Subtype::VndEtsiAsicS => "VndEtsiAsicS",
            Subtype::VndEtsiCug => "VndEtsiCug",
            Subtype::VndEtsiIptvcommand => "VndEtsiIptvcommand",
            Subtype::VndEtsiIptvdiscovery => "VndEtsiIptvdiscovery",
            Subtype::VndEtsiIptvprofile => "VndEtsiIptvprofile",
            Subtype::VndEtsiIptvsadBc => "VndEtsiIptvsadBc",
            Subtype::VndEtsiIptvsadCod => "VndEtsiIptvsadCod",
            Subtype::VndEtsiIptvsadNpvr => "VndEtsiIptvsadNpvr",
            Subtype::VndEtsiIptvservice => "VndEtsiIptvservice",
            Subtype::VndEtsiIptvsync => "VndEtsiIptvsync",
            Subtype::VndEtsiIptvueprofile => "VndEtsiIptvueprofile",
            Subtype::VndEtsiMcid => "VndEtsiMcid",
            Subtype::VndEtsiMheg5 => "VndEtsiMheg5",
            Subtype::VndEtsiOverloadControlPolicyDataset => "VndEtsiOverloadControlPolicyDataset",
            Subtype::VndEtsiPstn => "VndEtsiPstn",
            Subtype::VndEtsiSci => "VndEtsiSci",
            Subtype::VndEtsiSimservs => "VndEtsiSimservs",
            Subtype::VndEtsiTimestampToken => "VndEtsiTimestampToken",
            Subtype::VndEtsiTsl => "VndEtsiTsl",
            Subtype::VndEtsiTslDer => "VndEtsiTslDer",
            Subtype::VndEuKasparianCar => "VndEuKasparianCar",
            Subtype::VndEudoraData => "VndEudoraData",
            Subtype::VndEveradPlj => "VndEveradPlj",
            Subtype::VndEvolvEcigProfile => "VndEvolvEcigProfile",
            Subtype::VndEvolvEcigSettings => "VndEvolvEcigSettings",
            Subtype::VndEvolvEcigTheme => "VndEvolvEcigTheme",
            Subtype::VndExstreamEmpower => "VndExstreamEmpower",
            Subtype::VndExstreamPackage => "VndExstreamPackage",
            Subtype::VndEzpixAlbum => "VndEzpixAlbum",
            Subtype::VndEzpixPackage => "VndEzpixPackage",
            Subtype::VndFSecureMobile => "VndFSecureMobile",
            Subtype::VndFamilysearchGedcom => "VndFamilysearchGedcom",
            Subtype::VndFastbidsheet => "VndFastbidsheet",
            Subtype::VndFastcopyDiskImage => "VndFastcopyDiskImage",
            Subtype::VndFdf => "VndFdf",
            Subtype::VndFdsnMseed => "VndFdsnMseed",
            Subtype::VndFdsnSeed => "VndFdsnSeed",
            Subtype::VndFfsns => "VndFfsns",
            Subtype::VndFiclabFlb => "VndFiclabFlb",
            Subtype::VndFiclabFlt => "VndFiclabFlt",
            Subtype::VndFilmitZfc => "VndFilmitZfc",
            Subtype::VndFints => "VndFints",
            Subtype::VndFiremonkeysCloudcell => "VndFiremonkeysCloudcell",
            Subtype::VndFlatland3dml => "VndFlatland3dml",
            Subtype::VndFloGraphIt => "VndFloGraphIt",
            Subtype::VndFluxtimeClip => "VndFluxtimeClip",
            Subtype::VndFly => "VndFly",
            Subtype::VndFmiFlexstor => "VndFmiFlexstor",
            Subtype::VndFontFontforgeSfd => "VndFontFontforgeSfd",
            Subtype::VndFpx => "VndFpx",
            Subtype::VndFramemaker => "VndFramemaker",
            Subtype::VndFscWeblaunch => "VndFscWeblaunch",
            Subtype::VndFst => "VndFst",
            Subtype::VndFujifilmFbDocuworks => "VndFujifilmFbDocuworks",
            Subtype::VndFujifilmFbDocuworksBinder => "VndFujifilmFbDocuworksBinder",
            Subtype::VndFujifilmFbDocuworksContainer => "VndFujifilmFbDocuworksContainer",
            Subtype::VndFujifilmFbJfi => "VndFujifilmFbJfi",
            Subtype::VndFujitsuOasys => "VndFujitsuOasys",
            Subtype::VndFujitsuOasys2 => "VndFujitsuOasys2",
            Subtype::VndFujitsuOasys3 => "VndFujitsuOasys3",
            Subtype::VndFujitsuOasysgp => "VndFujitsuOasysgp",
            Subtype::VndFujitsuOasysprs => "VndFujitsuOasysprs",
            Subtype::VndFujixeroxArt4 => "VndFujixeroxArt4",
            Subtype::VndFujixeroxArtEx => "VndFujixeroxArtEx",
            Subtype::VndFujixeroxDdd => "VndFujixeroxDdd",
            Subtype::VndFujixeroxDocuworks => "VndFujixeroxDocuworks",
            Subtype::VndFujixeroxDocuworksBinder => "VndFujixeroxDocuworksBinder",
            Subtype::VndFujixeroxDocuworksContainer => "VndFujixeroxDocuworksContainer",
            Subtype::VndFujixeroxEdmicsMmr => "VndFujixeroxEdmicsMmr",
            Subtype::VndFujixeroxEdmicsRlc => "VndFujixeroxEdmicsRlc",
            Subtype::VndFujixeroxHbpl => "VndFujixeroxHbpl",
            Subtype::VndFutMisnet => "VndFutMisnet",
            Subtype::VndFutoin => "VndFutoin",
            Subtype::VndFuzzysheet => "VndFuzzysheet",
            Subtype::VndFvt => "VndFvt",
            Subtype::VndGdl => "VndGdl",
            Subtype::VndGenomatixTuxedo => "VndGenomatixTuxedo",
            Subtype::VndGenticsGrd => "VndGenticsGrd",
            Subtype::VndGeogebraFile => "VndGeogebraFile",
            Subtype::VndGeogebraSlides => "VndGeogebraSlides",
            Subtype::VndGeogebraTool => "VndGeogebraTool",
            Subtype::VndGeometryExplorer => "VndGeometryExplorer",
            Subtype::VndGeonext => "VndGeonext",
            Subtype::VndGeoplan => "VndGeoplan",
            Subtype::VndGeospace => "VndGeospace",
            Subtype::VndGerber => "VndGerber",
            Subtype::VndGlobalgraphicsPgb => "VndGlobalgraphicsPgb",
            Subtype::VndGlobalplatformCardContentMgt => "VndGlobalplatformCardContentMgt",
            Subtype::VndGlobalplatformCardContentMgtResponse => {
                "VndGlobalplatformCardContentMgtResponse"
            }
            Subtype::VndGml => "VndGml",
            Subtype::VndGnuTalerExchange => "VndGnuTalerExchange",
            Subtype::VndGnuTalerMerchant => "VndGnuTalerMerchant",
            Subtype::VndGoogleEarthKml => "VndGoogleEarthKml",
            Subtype::VndGoogleEarthKmz => "VndGoogleEarthKmz",
            Subtype::VndGovSkEForm => "VndGovSkEForm",
            Subtype::VndGovSkXmldatacontainer => "VndGovSkXmldatacontainer",
            Subtype::VndGrafeq => "VndGrafeq",
            Subtype::VndGraphviz => "VndGraphviz",
            Subtype::VndGridmp => "VndGridmp",
            Subtype::VndGrooveAccount => "VndGrooveAccount",
            Subtype::VndGrooveHelp => "VndGrooveHelp",
            Subtype::VndGrooveIdentityMessage => "VndGrooveIdentityMessage",
            Subtype::VndGrooveInjector => "VndGrooveInjector",
            Subtype::VndGrooveToolMessage => "VndGrooveToolMessage",
            Subtype::VndGrooveToolTemplate => "VndGrooveToolTemplate",
            Subtype::VndGrooveVcard => "VndGrooveVcard",
            Subtype::VndGsGdl => "VndGsGdl",
            Subtype::VndGtw => "VndGtw",
            Subtype::VndHal => "VndHal",
            Subtype::VndHandHeldEntertainment => "VndHandHeldEntertainment",
            Subtype::VndHans => "VndHans",
            Subtype::VndHbci => "VndHbci",
            Subtype::VndHc => "VndHc",
            Subtype::VndHclBireports => "VndHclBireports",
            Subtype::VndHdt => "VndHdt",
            Subtype::VndHeroku => "VndHeroku",
            Subtype::VndHgl => "VndHgl",
            Subtype::VndHheLessonPlayer => "VndHheLessonPlayer",
            Subtype::VndHl7cda => "VndHl7cda",
            Subtype::VndHl7v2 => "VndHl7v2",
            Subtype::VndHnsAudio => "VndHnsAudio",
            Subtype::VndHnsVideo => "VndHnsVideo",
            Subtype::VndHpHpgl => "VndHpHpgl",
            Subtype::VndHpHpid => "VndHpHpid",
            Subtype::VndHpHps => "VndHpHps",
            Subtype::VndHpJlyt => "VndHpJlyt",
            Subtype::VndHpPcl => "VndHpPcl",
            Subtype::VndHpPclxl => "VndHpPclxl",
            Subtype::VndHttphone => "VndHttphone",
            Subtype::VndHydrostatixSofData => "VndHydrostatixSofData",
            Subtype::VndHyper => "VndHyper",
            Subtype::VndHyperItem => "VndHyperItem",
            Subtype::VndHyperdrive => "VndHyperdrive",
            Subtype::VndHzn3dCrossword => "VndHzn3dCrossword",
            Subtype::VndIbmElectronicMedia => "VndIbmElectronicMedia",
            Subtype::VndIbmMiniPay => "VndIbmMiniPay",
            Subtype::VndIbmRightsManagement => "VndIbmRightsManagement",
            Subtype::VndIbmSecureContainer => "VndIbmSecureContainer",
            Subtype::VndIccprofile => "VndIccprofile",
            Subtype::VndIeee1905 => "VndIeee1905",
            Subtype::VndIgloader => "VndIgloader",
            Subtype::VndImagemeterFolder => "VndImagemeterFolder",
            Subtype::VndImagemeterImage => "VndImagemeterImage",
            Subtype::VndImmervisionIvp => "VndImmervisionIvp",
            Subtype::VndImmervisionIvu => "VndImmervisionIvu",
            Subtype::VndImsImsccv1p1 => "VndImsImsccv1p1",
            Subtype::VndImsImsccv1p2 => "VndImsImsccv1p2",
            Subtype::VndImsImsccv1p3 => "VndImsImsccv1p3",
            Subtype::VndImsLisV2Result => "VndImsLisV2Result",
            Subtype::VndImsLtiV2Toolconsumerprofile => "VndImsLtiV2Toolconsumerprofile",
            Subtype::VndImsLtiV2Toolproxy => "VndImsLtiV2Toolproxy",
            Subtype::VndImsLtiV2ToolproxyId => "VndImsLtiV2ToolproxyId",
            Subtype::VndImsLtiV2Toolsettings => "VndImsLtiV2Toolsettings",
            Subtype::VndImsLtiV2ToolsettingsSimple => "VndImsLtiV2ToolsettingsSimple",
            Subtype::VndIn3d3dml => "VndIn3d3dml",
            Subtype::VndIn3dSpot => "VndIn3dSpot",
            Subtype::VndInformedcontrolRms => "VndInformedcontrolRms",
            Subtype::VndInfotechProject => "VndInfotechProject",
            Subtype::VndInnopathWampNotification => "VndInnopathWampNotification",
            Subtype::VndInsorsIgm => "VndInsorsIgm",
            Subtype::VndInterconFormnet => "VndInterconFormnet",
            Subtype::VndIntergeo => "VndIntergeo",
            Subtype::VndIntertrustDigibox => "VndIntertrustDigibox",
            Subtype::VndIntertrustNncp => "VndIntertrustNncp",
            Subtype::VndIntuQbo => "VndIntuQbo",
            Subtype::VndIntuQfx => "VndIntuQfx",
            Subtype::VndIptcG2Catalogitem => "VndIptcG2Catalogitem",
            Subtype::VndIptcG2Conceptitem => "VndIptcG2Conceptitem",
            Subtype::VndIptcG2Knowledgeitem => "VndIptcG2Knowledgeitem",
            Subtype::VndIptcG2Newsitem => "VndIptcG2Newsitem",
            Subtype::VndIptcG2Newsmessage => "VndIptcG2Newsmessage",
            Subtype::VndIptcG2Packageitem => "VndIptcG2Packageitem",
            Subtype::VndIptcG2Planningitem => "VndIptcG2Planningitem",
            Subtype::VndIptcNewsMl => "VndIptcNewsMl",
            Subtype::VndIptcNitf => "VndIptcNitf",
            Subtype::VndIptvforum1dparityfec1010 => "VndIptvforum1dparityfec1010",
            Subtype::VndIptvforum1dparityfec2005 => "VndIptvforum1dparityfec2005",
            Subtype::VndIptvforum2dparityfec1010 => "VndIptvforum2dparityfec1010",
            Subtype::VndIptvforum2dparityfec2005 => "VndIptvforum2dparityfec2005",
            Subtype::VndIptvforumTtsavc => "VndIptvforumTtsavc",
            Subtype::VndIptvforumTtsmpeg2 => "VndIptvforumTtsmpeg2",
            Subtype::VndIpunpluggedRcprofile => "VndIpunpluggedRcprofile",
            Subtype::VndIrepositoryPackage => "VndIrepositoryPackage",
            Subtype::VndIsXpr => "VndIsXpr",
            Subtype::VndIsacFcs => "VndIsacFcs",
            Subtype::VndIso1178310 => "VndIso1178310",
            Subtype::VndJam => "VndJam",
            Subtype::VndJapannetDirectoryService => "VndJapannetDirectoryService",
            Subtype::VndJapannetJpnstoreWakeup => "VndJapannetJpnstoreWakeup",
            Subtype::VndJapannetPaymentWakeup => "VndJapannetPaymentWakeup",
            Subtype::VndJapannetRegistration => "VndJapannetRegistration",
            Subtype::VndJapannetRegistrationWakeup => "VndJapannetRegistrationWakeup",
            Subtype::VndJapannetSetstoreWakeup => "VndJapannetSetstoreWakeup",
            Subtype::VndJapannetVerification => "VndJapannetVerification",
            Subtype::VndJapannetVerificationWakeup => "VndJapannetVerificationWakeup",
            Subtype::VndJcpJavameMidletRms => "VndJcpJavameMidletRms",
            Subtype::VndJisp => "VndJisp",
            Subtype::VndJoostJodaArchive => "VndJoostJodaArchive",
            Subtype::VndJskIsdnNgn => "VndJskIsdnNgn",
            Subtype::VndKahootz => "VndKahootz",
            Subtype::VndKdeKarbon => "VndKdeKarbon",
            Subtype::VndKdeKchart => "VndKdeKchart",
            Subtype::VndKdeKformula => "VndKdeKformula",
            Subtype::VndKdeKivio => "VndKdeKivio",
            Subtype::VndKdeKontour => "VndKdeKontour",
            Subtype::VndKdeKpresenter => "VndKdeKpresenter",
            Subtype::VndKdeKspread => "VndKdeKspread",
            Subtype::VndKdeKword => "VndKdeKword",
            Subtype::VndKenameaapp => "VndKenameaapp",
            Subtype::VndKidspiration => "VndKidspiration",
            Subtype::VndKinar => "VndKinar",
            Subtype::VndKoan => "VndKoan",
            Subtype::VndKodakDescriptor => "VndKodakDescriptor",
            Subtype::VndLas => "VndLas",
            Subtype::VndLasLas => "VndLasLas",
            Subtype::VndLaszip => "VndLaszip",
            Subtype::VndLatexZ => "VndLatexZ",
            Subtype::VndLeap => "VndLeap",
            Subtype::VndLibertyRequest => "VndLibertyRequest",
            Subtype::VndLlamagraphicsLifeBalanceDesktop => "VndLlamagraphicsLifeBalanceDesktop",
            Subtype::VndLlamagraphicsLifeBalanceExchange => "VndLlamagraphicsLifeBalanceExchange",
            Subtype::VndLogipipeCircuit => "VndLogipipeCircuit",
            Subtype::VndLoom => "VndLoom",
            Subtype::VndLotus123 => "VndLotus123",
            Subtype::VndLotusApproach => "VndLotusApproach",
            Subtype::VndLotusFreelance => "VndLotusFreelance",
            Subtype::VndLotusNotes => "VndLotusNotes",
            Subtype::VndLotusOrganizer => "VndLotusOrganizer",
            Subtype::VndLotusScreencam => "VndLotusScreencam",
            Subtype::VndLotusWordpro => "VndLotusWordpro",
            Subtype::VndLucentVoice => "VndLucentVoice",
            Subtype::VndMacportsPortpkg => "VndMacportsPortpkg",
            Subtype::VndMapboxVectorTile => "VndMapboxVectorTile",
            Subtype::VndMarlinDrmActiontoken => "VndMarlinDrmActiontoken",
            Subtype::VndMarlinDrmConftoken => "VndMarlinDrmConftoken",
            Subtype::VndMarlinDrmLicense => "VndMarlinDrmLicense",
            Subtype::VndMarlinDrmMdcf => "VndMarlinDrmMdcf",
            Subtype::VndMason => "VndMason",
            Subtype::VndMaxarArchive3tz => "VndMaxarArchive3tz",
            Subtype::VndMaxmindMaxmindDb => "VndMaxmindMaxmindDb",
            Subtype::VndMcd => "VndMcd",
            Subtype::VndMedcalcdata => "VndMedcalcdata",
            Subtype::VndMediastationCdkey => "VndMediastationCdkey",
            Subtype::VndMeridianSlingshot => "VndMeridianSlingshot",
            Subtype::VndMfer => "VndMfer",
            Subtype::VndMfmp => "VndMfmp",
            Subtype::VndMicro => "VndMicro",
            Subtype::VndMicrografxFlo => "VndMicrografxFlo",
            Subtype::VndMicrografxIgx => "VndMicrografxIgx",
            Subtype::VndMicrosoftIcon => "VndMicrosoftIcon",
            Subtype::VndMicrosoftPortableExecutable => "VndMicrosoftPortableExecutable",
            Subtype::VndMicrosoftWindowsThumbnailCache => "VndMicrosoftWindowsThumbnailCache",
            Subtype::VndMiele => "VndMiele",
            Subtype::VndMif => "VndMif",
            Subtype::VndMinisoftHp3000Save => "VndMinisoftHp3000Save",
            Subtype::VndMitsubishiMistyGuardTrustweb => "VndMitsubishiMistyGuardTrustweb",
            Subtype::VndMix => "VndMix",
            Subtype::VndMobiusDaf => "VndMobiusDaf",
            Subtype::VndMobiusDis => "VndMobiusDis",
            Subtype::VndMobiusMbk => "VndMobiusMbk",
            Subtype::VndMobiusMqy => "VndMobiusMqy",
            Subtype::VndMobiusMsl => "VndMobiusMsl",
            Subtype::VndMobiusPlc => "VndMobiusPlc",
            Subtype::VndMobiusTxf => "VndMobiusTxf",
            Subtype::VndMoml => "VndMoml",
            Subtype::VndMophunApplication => "VndMophunApplication",
            Subtype::VndMophunCertificate => "VndMophunCertificate",
            Subtype::VndMotorolaFlexsuite => "VndMotorolaFlexsuite",
            Subtype::VndMotorolaFlexsuiteAdsi => "VndMotorolaFlexsuiteAdsi",
            Subtype::VndMotorolaFlexsuiteFis => "VndMotorolaFlexsuiteFis",
            Subtype::VndMotorolaFlexsuiteGotap => "VndMotorolaFlexsuiteGotap",
            Subtype::VndMotorolaFlexsuiteKmr => "VndMotorolaFlexsuiteKmr",
            Subtype::VndMotorolaFlexsuiteTtc => "VndMotorolaFlexsuiteTtc",
            Subtype::VndMotorolaFlexsuiteWem => "VndMotorolaFlexsuiteWem",
            Subtype::VndMotorolaIprm => "VndMotorolaIprm",
            Subtype::VndMotorolaReflex => "VndMotorolaReflex",
            Subtype::VndMotorolaVideo => "VndMotorolaVideo",
            Subtype::VndMotorolaVideop => "VndMotorolaVideop",
            Subtype::VndMozillaApng => "VndMozillaApng",
            Subtype::VndMozillaXul => "VndMozillaXul",
            Subtype::VndMpegurl => "VndMpegurl",
            Subtype::VndMs3mfdocument => "VndMs3mfdocument",
            Subtype::VndMsArtgalry => "VndMsArtgalry",
            Subtype::VndMsAsf => "VndMsAsf",
            Subtype::VndMsCabCompressed => "VndMsCabCompressed",
            Subtype::VndMsExcel => "VndMsExcel",
            Subtype::VndMsExcelAddinMacroEnabled12 => "VndMsExcelAddinMacroEnabled12",
            Subtype::VndMsExcelSheetBinaryMacroEnabled12 => "VndMsExcelSheetBinaryMacroEnabled12",
            Subtype::VndMsExcelSheetMacroEnabled12 => "VndMsExcelSheetMacroEnabled12",
            Subtype::VndMsExcelTemplateMacroEnabled12 => "VndMsExcelTemplateMacroEnabled12",
            Subtype::VndMsFontobject => "VndMsFontobject",
            Subtype::VndMsHtmlhelp => "VndMsHtmlhelp",
            Subtype::VndMsIms => "VndMsIms",
            Subtype::VndMsLrm => "VndMsLrm",
            Subtype::VndMsMediapackage => "VndMsMediapackage",
            Subtype::VndMsModi => "VndMsModi",
            Subtype::VndMsOfficeActiveX => "VndMsOfficeActiveX",
            Subtype::VndMsOfficetheme => "VndMsOfficetheme",
            Subtype::VndMsPkiSeccat => "VndMsPkiSeccat",
            Subtype::VndMsPlayreadyInitiator => "VndMsPlayreadyInitiator",
            Subtype::VndMsPlayreadyMediaPya => "VndMsPlayreadyMediaPya",
            Subtype::VndMsPlayreadyMediaPyv => "VndMsPlayreadyMediaPyv",
            Subtype::VndMsPowerpoint => "VndMsPowerpoint",
            Subtype::VndMsPowerpointAddinMacroEnabled12 => "VndMsPowerpointAddinMacroEnabled12",
            Subtype::VndMsPowerpointPresentationMacroEnabled12 => {
                "VndMsPowerpointPresentationMacroEnabled12"
            }
            Subtype::VndMsPowerpointSlideMacroEnabled12 => "VndMsPowerpointSlideMacroEnabled12",
            Subtype::VndMsPowerpointSlideshowMacroEnabled12 => {
                "VndMsPowerpointSlideshowMacroEnabled12"
            }
            Subtype::VndMsPowerpointTemplateMacroEnabled12 => {
                "VndMsPowerpointTemplateMacroEnabled12"
            }
            Subtype::VndMsPrintDeviceCapabilities => "VndMsPrintDeviceCapabilities",
            Subtype::VndMsPrintSchemaTicket => "VndMsPrintSchemaTicket",
            Subtype::VndMsProject => "VndMsProject",
            Subtype::VndMsTnef => "VndMsTnef",
            Subtype::VndMsWindowsDevicepairing => "VndMsWindowsDevicepairing",
            Subtype::VndMsWindowsNwprintingOob => "VndMsWindowsNwprintingOob",
            Subtype::VndMsWindowsPrinterpairing => "VndMsWindowsPrinterpairing",
            Subtype::VndMsWindowsWsdOob => "VndMsWindowsWsdOob",
            Subtype::VndMsWmdrmLicChlgReq => "VndMsWmdrmLicChlgReq",
            Subtype::VndMsWmdrmLicResp => "VndMsWmdrmLicResp",
            Subtype::VndMsWmdrmMeterChlgReq => "VndMsWmdrmMeterChlgReq",
            Subtype::VndMsWmdrmMeterResp => "VndMsWmdrmMeterResp",
            Subtype::VndMsWordDocumentMacroEnabled12 => "VndMsWordDocumentMacroEnabled12",
            Subtype::VndMsWordTemplateMacroEnabled12 => "VndMsWordTemplateMacroEnabled12",
            Subtype::VndMsWorks => "VndMsWorks",
            Subtype::VndMsWpl => "VndMsWpl",
            Subtype::VndMsXpsdocument => "VndMsXpsdocument",
            Subtype::VndMsaDiskImage => "VndMsaDiskImage",
            Subtype::VndMseq => "VndMseq",
            Subtype::VndMsign => "VndMsign",
            Subtype::VndMts => "VndMts",
            Subtype::VndMultiadCreator => "VndMultiadCreator",
            Subtype::VndMultiadCreatorCif => "VndMultiadCreatorCif",
            Subtype::VndMusicNiff => "VndMusicNiff",
            Subtype::VndMusician => "VndMusician",
            Subtype::VndMuveeStyle => "VndMuveeStyle",
            Subtype::VndMynfc => "VndMynfc",
            Subtype::VndNacamarYbrid => "VndNacamarYbrid",
            Subtype::VndNcdControl => "VndNcdControl",
            Subtype::VndNcdReference => "VndNcdReference",
            Subtype::VndNearstInv => "VndNearstInv",
            Subtype::VndNebumindLine => "VndNebumindLine",
            Subtype::VndNervana => "VndNervana",
            Subtype::VndNet2phoneCommcenterCommand => "VndNet2phoneCommcenterCommand",
            Subtype::VndNetFpx => "VndNetFpx",
            Subtype::VndNetfpx => "VndNetfpx",
            Subtype::VndNeurolanguageNlu => "VndNeurolanguageNlu",
            Subtype::VndNimn => "VndNimn",
            Subtype::VndNintendoNitroRom => "VndNintendoNitroRom",
            Subtype::VndNintendoSnesRom => "VndNintendoSnesRom",
            Subtype::VndNitf => "VndNitf",
            Subtype::VndNoblenetDirectory => "VndNoblenetDirectory",
            Subtype::VndNoblenetSealer => "VndNoblenetSealer",
            Subtype::VndNoblenetWeb => "VndNoblenetWeb",
            Subtype::VndNokiaCatalogs => "VndNokiaCatalogs",
            Subtype::VndNokiaConml => "VndNokiaConml",
            Subtype::VndNokiaISdsRadioPresets => "VndNokiaISdsRadioPresets",
            Subtype::VndNokiaInterleavedMultimedia => "VndNokiaInterleavedMultimedia",
            Subtype::VndNokiaIptvConfig => "VndNokiaIptvConfig",
            Subtype::VndNokiaLandmark => "VndNokiaLandmark",
            Subtype::VndNokiaLandmarkcollection => "VndNokiaLandmarkcollection",
            Subtype::VndNokiaMobileXmf => "VndNokiaMobileXmf",
            Subtype::VndNokiaMp4vr => "VndNokiaMp4vr",
            Subtype::VndNokiaNGageAc => "VndNokiaNGageAc",
            Subtype::VndNokiaNGageData => "VndNokiaNGageData",
            Subtype::VndNokiaNcd => "VndNokiaNcd",
            Subtype::VndNokiaPcd => "VndNokiaPcd",
            Subtype::VndNokiaRadioPreset => "VndNokiaRadioPreset",
            Subtype::VndNokiaRadioPresets => "VndNokiaRadioPresets",
            Subtype::VndNokiaVideovoip => "VndNokiaVideovoip",
            Subtype::VndNortelVbk => "VndNortelVbk",
            Subtype::VndNovadigmEdm => "VndNovadigmEdm",
            Subtype::VndNovadigmEdx => "VndNovadigmEdx",
            Subtype::VndNovadigmExt => "VndNovadigmExt",
            Subtype::VndNttLocalContentShare => "VndNttLocalContentShare",
            Subtype::VndNttLocalFileTransfer => "VndNttLocalFileTransfer",
            Subtype::VndNttLocalOgwRemoteAccess => "VndNttLocalOgwRemoteAccess",
            Subtype::VndNttLocalSipTaRemote => "VndNttLocalSipTaRemote",
            Subtype::VndNttLocalSipTaTcpStream => "VndNttLocalSipTaTcpStream",
            Subtype::VndNueraEcelp4800 => "VndNueraEcelp4800",
            Subtype::VndNueraEcelp7470 => "VndNueraEcelp7470",
            Subtype::VndNueraEcelp9600 => "VndNueraEcelp9600",
            Subtype::VndOasisOpendocumentChart => "VndOasisOpendocumentChart",
            Subtype::VndOasisOpendocumentChartTemplate => "VndOasisOpendocumentChartTemplate",
            Subtype::VndOasisOpendocumentDatabase => "VndOasisOpendocumentDatabase",
            Subtype::VndOasisOpendocumentFormula => "VndOasisOpendocumentFormula",
            Subtype::VndOasisOpendocumentFormulaTemplate => "VndOasisOpendocumentFormulaTemplate",
            Subtype::VndOasisOpendocumentGraphics => "VndOasisOpendocumentGraphics",
            Subtype::VndOasisOpendocumentGraphicsTemplate => "VndOasisOpendocumentGraphicsTemplate",
            Subtype::VndOasisOpendocumentImage => "VndOasisOpendocumentImage",
            Subtype::VndOasisOpendocumentImageTemplate => "VndOasisOpendocumentImageTemplate",
            Subtype::VndOasisOpendocumentPresentation => "VndOasisOpendocumentPresentation",
            Subtype::VndOasisOpendocumentPresentationTemplate => {
                "VndOasisOpendocumentPresentationTemplate"
            }
            Subtype::VndOasisOpendocumentSpreadsheet => "VndOasisOpendocumentSpreadsheet",
            Subtype::VndOasisOpendocumentSpreadsheetTemplate => {
                "VndOasisOpendocumentSpreadsheetTemplate"
            }
            Subtype::VndOasisOpendocumentText => "VndOasisOpendocumentText",
            Subtype::VndOasisOpendocumentTextMaster => "VndOasisOpendocumentTextMaster",
            Subtype::VndOasisOpendocumentTextTemplate => "VndOasisOpendocumentTextTemplate",
            Subtype::VndOasisOpendocumentTextWeb => "VndOasisOpendocumentTextWeb",
            Subtype::VndObjectvideo => "VndObjectvideo",
            Subtype::VndObn => "VndObn",
            Subtype::VndOcf => "VndOcf",
            Subtype::VndOciImageManifestV1 => "VndOciImageManifestV1",
            Subtype::VndOctelSbc => "VndOctelSbc",
            Subtype::VndOftnL10n => "VndOftnL10n",
            Subtype::VndOipfContentaccessdownload => "VndOipfContentaccessdownload",
            Subtype::VndOipfContentaccessstreaming => "VndOipfContentaccessstreaming",
            Subtype::VndOipfCspgHexbinary => "VndOipfCspgHexbinary",
            Subtype::VndOipfDaeSvg => "VndOipfDaeSvg",
            Subtype::VndOipfDaeXhtml => "VndOipfDaeXhtml",
            Subtype::VndOipfMippvcontrolmessage => "VndOipfMippvcontrolmessage",
            Subtype::VndOipfPaeGem => "VndOipfPaeGem",
            Subtype::VndOipfSpdiscovery => "VndOipfSpdiscovery",
            Subtype::VndOipfSpdlist => "VndOipfSpdlist",
            Subtype::VndOipfUeprofile => "VndOipfUeprofile",
            Subtype::VndOipfUserprofile => "VndOipfUserprofile",
            Subtype::VndOlpcSugar => "VndOlpcSugar",
            Subtype::VndOmaBcastAssociatedProcedureParameter => {
                "VndOmaBcastAssociatedProcedureParameter"
            }
            Subtype::VndOmaBcastDrmTrigger => "VndOmaBcastDrmTrigger",
            Subtype::VndOmaBcastImd => "VndOmaBcastImd",
            Subtype::VndOmaBcastLtkm => "VndOmaBcastLtkm",
            Subtype::VndOmaBcastNotification => "VndOmaBcastNotification",
            Subtype::VndOmaBcastProvisioningtrigger => "VndOmaBcastProvisioningtrigger",
            Subtype::VndOmaBcastSgboot => "VndOmaBcastSgboot",
            Subtype::VndOmaBcastSgdd => "VndOmaBcastSgdd",
            Subtype::VndOmaBcastSgdu => "VndOmaBcastSgdu",
            Subtype::VndOmaBcastSimpleSymbolContainer => "VndOmaBcastSimpleSymbolContainer",
            Subtype::VndOmaBcastSmartcardTrigger => "VndOmaBcastSmartcardTrigger",
            Subtype::VndOmaBcastSprov => "VndOmaBcastSprov",
            Subtype::VndOmaBcastStkm => "VndOmaBcastStkm",
            Subtype::VndOmaCabAddressBook => "VndOmaCabAddressBook",
            Subtype::VndOmaCabFeatureHandler => "VndOmaCabFeatureHandler",
            Subtype::VndOmaCabPcc => "VndOmaCabPcc",
            Subtype::VndOmaCabSubsInvite => "VndOmaCabSubsInvite",
            Subtype::VndOmaCabUserPrefs => "VndOmaCabUserPrefs",
            Subtype::VndOmaDcd => "VndOmaDcd",
            Subtype::VndOmaDcdc => "VndOmaDcdc",
            Subtype::VndOmaDd2 => "VndOmaDd2",
            Subtype::VndOmaDrmRisd => "VndOmaDrmRisd",
            Subtype::VndOmaGroupUsageList => "VndOmaGroupUsageList",
            Subtype::VndOmaLwm2m => "VndOmaLwm2m",
            Subtype::VndOmaPal => "VndOmaPal",
            Subtype::VndOmaPocDetailedProgressReport => "VndOmaPocDetailedProgressReport",
            Subtype::VndOmaPocFinalReport => "VndOmaPocFinalReport",
            Subtype::VndOmaPocGroups => "VndOmaPocGroups",
            Subtype::VndOmaPocInvocationDescriptor => "VndOmaPocInvocationDescriptor",
            Subtype::VndOmaPocOptimizedProgressReport => "VndOmaPocOptimizedProgressReport",
            Subtype::VndOmaPush => "VndOmaPush",
            Subtype::VndOmaScidmMessages => "VndOmaScidmMessages",
            Subtype::VndOmaScwsConfig => "VndOmaScwsConfig",
            Subtype::VndOmaScwsHttpRequest => "VndOmaScwsHttpRequest",
            Subtype::VndOmaScwsHttpResponse => "VndOmaScwsHttpResponse",
            Subtype::VndOmaXcapDirectory => "VndOmaXcapDirectory",
            Subtype::VndOmadsEmail => "VndOmadsEmail",
            Subtype::VndOmadsFile => "VndOmadsFile",
            Subtype::VndOmadsFolder => "VndOmadsFolder",
            Subtype::VndOmalocSuplInit => "VndOmalocSuplInit",
            Subtype::VndOnepager => "VndOnepager",
            Subtype::VndOnepagertamp => "VndOnepagertamp",
            Subtype::VndOnepagertamx => "VndOnepagertamx",
            Subtype::VndOnepagertat => "VndOnepagertat",
            Subtype::VndOnepagertatp => "VndOnepagertatp",
            Subtype::VndOnepagertatx => "VndOnepagertatx",
            Subtype::VndOpenbloxGame => "VndOpenbloxGame",
            Subtype::VndOpenbloxGameBinary => "VndOpenbloxGameBinary",
            Subtype::VndOpeneyeOeb => "VndOpeneyeOeb",
            Subtype::VndOpengex => "VndOpengex",
            Subtype::VndOpenofficeorgExtension => "VndOpenofficeorgExtension",
            Subtype::VndOpenstreetmapData => "VndOpenstreetmapData",
            Subtype::VndOpentimestampsOts => "VndOpentimestampsOts",
            Subtype::VndOpenxmlformatsOfficedocumentCustomProperties => {
                "VndOpenxmlformatsOfficedocumentCustomProperties"
            }
            Subtype::VndOpenxmlformatsOfficedocumentCustomXmlProperties => {
                "VndOpenxmlformatsOfficedocumentCustomXmlProperties"
            }
            Subtype::VndOpenxmlformatsOfficedocumentDrawing => {
                "VndOpenxmlformatsOfficedocumentDrawing"
            }
            Subtype::VndOpenxmlformatsOfficedocumentDrawingmlChart => {
                "VndOpenxmlformatsOfficedocumentDrawingmlChart"
            }
            Subtype::VndOpenxmlformatsOfficedocumentDrawingmlChartshapes => {
                "VndOpenxmlformatsOfficedocumentDrawingmlChartshapes"
            }
            Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramColors => {
                "VndOpenxmlformatsOfficedocumentDrawingmlDiagramColors"
            }
            Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramData => {
                "VndOpenxmlformatsOfficedocumentDrawingmlDiagramData"
            }
            Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramLayout => {
                "VndOpenxmlformatsOfficedocumentDrawingmlDiagramLayout"
            }
            Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramStyle => {
                "VndOpenxmlformatsOfficedocumentDrawingmlDiagramStyle"
            }
            Subtype::VndOpenxmlformatsOfficedocumentExtendedProperties => {
                "VndOpenxmlformatsOfficedocumentExtendedProperties"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlCommentAuthors => {
                "VndOpenxmlformatsOfficedocumentPresentationmlCommentAuthors"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlComments => {
                "VndOpenxmlformatsOfficedocumentPresentationmlComments"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlHandoutMaster => {
                "VndOpenxmlformatsOfficedocumentPresentationmlHandoutMaster"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlNotesMaster => {
                "VndOpenxmlformatsOfficedocumentPresentationmlNotesMaster"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlNotesSlide => {
                "VndOpenxmlformatsOfficedocumentPresentationmlNotesSlide"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlPresProps => {
                "VndOpenxmlformatsOfficedocumentPresentationmlPresProps"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlPresentation => {
                "VndOpenxmlformatsOfficedocumentPresentationmlPresentation"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlPresentationMain => {
                "VndOpenxmlformatsOfficedocumentPresentationmlPresentationMain"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlide => {
                "VndOpenxmlformatsOfficedocumentPresentationmlSlide"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideLayout => {
                "VndOpenxmlformatsOfficedocumentPresentationmlSlideLayout"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideMaster => {
                "VndOpenxmlformatsOfficedocumentPresentationmlSlideMaster"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideUpdateInfo => {
                "VndOpenxmlformatsOfficedocumentPresentationmlSlideUpdateInfo"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideshow => {
                "VndOpenxmlformatsOfficedocumentPresentationmlSlideshow"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideshowMain => {
                "VndOpenxmlformatsOfficedocumentPresentationmlSlideshowMain"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTableStyles => {
                "VndOpenxmlformatsOfficedocumentPresentationmlTableStyles"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTags => {
                "VndOpenxmlformatsOfficedocumentPresentationmlTags"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTemplate => {
                "VndOpenxmlformatsOfficedocumentPresentationmlTemplate"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTemplateMain => {
                "VndOpenxmlformatsOfficedocumentPresentationmlTemplateMain"
            }
            Subtype::VndOpenxmlformatsOfficedocumentPresentationmlViewProps => {
                "VndOpenxmlformatsOfficedocumentPresentationmlViewProps"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlCalcChain => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlCalcChain"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlChartsheet => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlChartsheet"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlComments => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlComments"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlConnections => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlConnections"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlDialogsheet => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlDialogsheet"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlExternalLink => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlExternalLink"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheDefinition => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheDefinition"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheRecords => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheRecords"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotTable => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotTable"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlQueryTable => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlQueryTable"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionHeaders => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionHeaders"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionLog => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionLog"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSharedStrings => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlSharedStrings"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSheet => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlSheet"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMain => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMain"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMetadata => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMetadata"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlStyles => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlStyles"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTable => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlTable"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTableSingleCells => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlTableSingleCells"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplate => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplate"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplateMain => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplateMain"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlUserNames => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlUserNames"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlVolatileDependencies => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlVolatileDependencies"
            }
            Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlWorksheet => {
                "VndOpenxmlformatsOfficedocumentSpreadsheetmlWorksheet"
            }
            Subtype::VndOpenxmlformatsOfficedocumentTheme => "VndOpenxmlformatsOfficedocumentTheme",
            Subtype::VndOpenxmlformatsOfficedocumentThemeOverride => {
                "VndOpenxmlformatsOfficedocumentThemeOverride"
            }
            Subtype::VndOpenxmlformatsOfficedocumentVmlDrawing => {
                "VndOpenxmlformatsOfficedocumentVmlDrawing"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlComments => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlComments"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlDocument => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlDocument"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentGlossary => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentGlossary"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentMain => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentMain"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlEndnotes => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlEndnotes"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlFontTable => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlFontTable"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlFooter => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlFooter"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlFootnotes => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlFootnotes"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlNumbering => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlNumbering"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlSettings => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlSettings"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlStyles => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlStyles"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlTemplate => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlTemplate"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlTemplateMain => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlTemplateMain"
            }
            Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlWebSettings => {
                "VndOpenxmlformatsOfficedocumentWordprocessingmlWebSettings"
            }
            Subtype::VndOpenxmlformatsPackageCoreProperties => {
                "VndOpenxmlformatsPackageCoreProperties"
            }
            Subtype::VndOpenxmlformatsPackageDigitalSignatureXmlsignature => {
                "VndOpenxmlformatsPackageDigitalSignatureXmlsignature"
            }
            Subtype::VndOpenxmlformatsPackageRelationships => {
                "VndOpenxmlformatsPackageRelationships"
            }
            Subtype::VndOracleResource => "VndOracleResource",
            Subtype::VndOrangeIndata => "VndOrangeIndata",
            Subtype::VndOsaNetdeploy => "VndOsaNetdeploy",
            Subtype::VndOsgeoMapguidePackage => "VndOsgeoMapguidePackage",
            Subtype::VndOsgiBundle => "VndOsgiBundle",
            Subtype::VndOsgiDp => "VndOsgiDp",
            Subtype::VndOsgiSubsystem => "VndOsgiSubsystem",
            Subtype::VndOtpsCtKip => "VndOtpsCtKip",
            Subtype::VndOxliCountgraph => "VndOxliCountgraph",
            Subtype::VndPagerduty => "VndPagerduty",
            Subtype::VndPalm => "VndPalm",
            Subtype::VndPanoply => "VndPanoply",
            Subtype::VndPaosXml => "VndPaosXml",
            Subtype::VndParasolidTransmitBinary => "VndParasolidTransmitBinary",
            Subtype::VndParasolidTransmitText => "VndParasolidTransmitText",
            Subtype::VndPatentdive => "VndPatentdive",
            Subtype::VndPatientecommsdoc => "VndPatientecommsdoc",
            Subtype::VndPawaafile => "VndPawaafile",
            Subtype::VndPcoB16 => "VndPcoB16",
            Subtype::VndPcos => "VndPcos",
            Subtype::VndPgFormat => "VndPgFormat",
            Subtype::VndPgOsasli => "VndPgOsasli",
            Subtype::VndPiaccessApplicationLicence => "VndPiaccessApplicationLicence",
            Subtype::VndPicsel => "VndPicsel",
            Subtype::VndPmiWidget => "VndPmiWidget",
            Subtype::VndPocGroupAdvertisement => "VndPocGroupAdvertisement",
            Subtype::VndPocketlearn => "VndPocketlearn",
            Subtype::VndPowerbuilder6 => "VndPowerbuilder6",
            Subtype::VndPowerbuilder6S => "VndPowerbuilder6S",
            Subtype::VndPowerbuilder7 => "VndPowerbuilder7",
            Subtype::VndPowerbuilder75 => "VndPowerbuilder75",
            Subtype::VndPowerbuilder75S => "VndPowerbuilder75S",
            Subtype::VndPowerbuilder7S => "VndPowerbuilder7S",
            Subtype::VndPreminet => "VndPreminet",
            Subtype::VndPresonusMultitrack => "VndPresonusMultitrack",
            Subtype::VndPreviewsystemsBox => "VndPreviewsystemsBox",
            Subtype::VndProteusMagazine => "VndProteusMagazine",
            Subtype::VndPsfs => "VndPsfs",
            Subtype::VndPublishareDeltaTree => "VndPublishareDeltaTree",
            Subtype::VndPviPtid1 => "VndPviPtid1",
            Subtype::VndPwgMultiplexed => "VndPwgMultiplexed",
            Subtype::VndPwgXhtmlPrint => "VndPwgXhtmlPrint",
            Subtype::VndPythaPyox => "VndPythaPyox",
            Subtype::VndQualcommBrewAppRes => "VndQualcommBrewAppRes",
            Subtype::VndQuarantainenet => "VndQuarantainenet",
            Subtype::VndQuarkQuarkXPress => "VndQuarkQuarkXPress",
            Subtype::VndQuobjectQuoxdocument => "VndQuobjectQuoxdocument",
            Subtype::VndRadgamettoolsBink => "VndRadgamettoolsBink",
            Subtype::VndRadgamettoolsSmacker => "VndRadgamettoolsSmacker",
            Subtype::VndRadiance => "VndRadiance",
            Subtype::VndRadisysMoml => "VndRadisysMoml",
            Subtype::VndRadisysMsml => "VndRadisysMsml",
            Subtype::VndRadisysMsmlAudit => "VndRadisysMsmlAudit",
            Subtype::VndRadisysMsmlAuditConf => "VndRadisysMsmlAuditConf",
            Subtype::VndRadisysMsmlAuditConn => "VndRadisysMsmlAuditConn",
            Subtype::VndRadisysMsmlAuditDialog => "VndRadisysMsmlAuditDialog",
            Subtype::VndRadisysMsmlAuditStream => "VndRadisysMsmlAuditStream",
            Subtype::VndRadisysMsmlBasicLayout => "VndRadisysMsmlBasicLayout",
            Subtype::VndRadisysMsmlConf => "VndRadisysMsmlConf",
            Subtype::VndRadisysMsmlDialog => "VndRadisysMsmlDialog",
            Subtype::VndRadisysMsmlDialogBase => "VndRadisysMsmlDialogBase",
            Subtype::VndRadisysMsmlDialogFaxDetect => "VndRadisysMsmlDialogFaxDetect",
            Subtype::VndRadisysMsmlDialogFaxSendrecv => "VndRadisysMsmlDialogFaxSendrecv",
            Subtype::VndRadisysMsmlDialogGroup => "VndRadisysMsmlDialogGroup",
            Subtype::VndRadisysMsmlDialogSpeech => "VndRadisysMsmlDialogSpeech",
            Subtype::VndRadisysMsmlDialogTransform => "VndRadisysMsmlDialogTransform",
            Subtype::VndRainstorData => "VndRainstorData",
            Subtype::VndRapid => "VndRapid",
            Subtype::VndRar => "VndRar",
            Subtype::VndRealvncBed => "VndRealvncBed",
            Subtype::VndRecordareMusicxml => "VndRecordareMusicxml",
            Subtype::VndRenLearnRlprint => "VndRenLearnRlprint",
            Subtype::VndResilientLogic => "VndResilientLogic",
            Subtype::VndRestful => "VndRestful",
            Subtype::VndRhetorex32kadpcm => "VndRhetorex32kadpcm",
            Subtype::VndRigCryptonote => "VndRigCryptonote",
            Subtype::VndRimCod => "VndRimCod",
            Subtype::VndRip => "VndRip",
            Subtype::VndRosetteAnnotatedDataModel => "VndRosetteAnnotatedDataModel",
            Subtype::VndRoute66Link66 => "VndRoute66Link66",
            Subtype::VndRs274x => "VndRs274x",
            Subtype::VndRuckusDownload => "VndRuckusDownload",
            Subtype::VndS3sms => "VndS3sms",
            Subtype::VndSailingtrackerTrack => "VndSailingtrackerTrack",
            Subtype::VndSapVds => "VndSapVds",
            Subtype::VndSar => "VndSar",
            Subtype::VndSbmCid => "VndSbmCid",
            Subtype::VndSbmMid2 => "VndSbmMid2",
            Subtype::VndScribus => "VndScribus",
            Subtype::VndSealed3df => "VndSealed3df",
            Subtype::VndSealedCsf => "VndSealedCsf",
            Subtype::VndSealedDoc => "VndSealedDoc",
            Subtype::VndSealedEml => "VndSealedEml",
            Subtype::VndSealedMht => "VndSealedMht",
            Subtype::VndSealedMpeg1 => "VndSealedMpeg1",
            Subtype::VndSealedMpeg4 => "VndSealedMpeg4",
            Subtype::VndSealedNet => "VndSealedNet",
            Subtype::VndSealedPng => "VndSealedPng",
            Subtype::VndSealedPpt => "VndSealedPpt",
            Subtype::VndSealedSwf => "VndSealedSwf",
            Subtype::VndSealedTiff => "VndSealedTiff",
            Subtype::VndSealedXls => "VndSealedXls",
            Subtype::VndSealedmediaSoftsealGif => "VndSealedmediaSoftsealGif",
            Subtype::VndSealedmediaSoftsealHtml => "VndSealedmediaSoftsealHtml",
            Subtype::VndSealedmediaSoftsealJpg => "VndSealedmediaSoftsealJpg",
            Subtype::VndSealedmediaSoftsealMov => "VndSealedmediaSoftsealMov",
            Subtype::VndSealedmediaSoftsealMpeg => "VndSealedmediaSoftsealMpeg",
            Subtype::VndSealedmediaSoftsealPdf => "VndSealedmediaSoftsealPdf",
            Subtype::VndSeemail => "VndSeemail",
            Subtype::VndSeis => "VndSeis",
            Subtype::VndSema => "VndSema",
            Subtype::VndSemd => "VndSemd",
            Subtype::VndSemf => "VndSemf",
            Subtype::VndSenxWarpscript => "VndSenxWarpscript",
            Subtype::VndShadeSaveFile => "VndShadeSaveFile",
            Subtype::VndShanaInformedFormdata => "VndShanaInformedFormdata",
            Subtype::VndShanaInformedFormtemplate => "VndShanaInformedFormtemplate",
            Subtype::VndShanaInformedInterchange => "VndShanaInformedInterchange",
            Subtype::VndShanaInformedPackage => "VndShanaInformedPackage",
            Subtype::VndShootproof => "VndShootproof",
            Subtype::VndShopkick => "VndShopkick",
            Subtype::VndShp => "VndShp",
            Subtype::VndShx => "VndShx",
            Subtype::VndSigrokSession => "VndSigrokSession",
            Subtype::VndSimTechMindMapper => "VndSimTechMindMapper",
            Subtype::VndSiren => "VndSiren",
            Subtype::VndSmaf => "VndSmaf",
            Subtype::VndSmartNotebook => "VndSmartNotebook",
            Subtype::VndSmartTeacher => "VndSmartTeacher",
            Subtype::VndSnesdevPageTable => "VndSnesdevPageTable",
            Subtype::VndSoftware602FillerForm => "VndSoftware602FillerForm",
            Subtype::VndSoftware602FillerFormXmlZip => "VndSoftware602FillerFormXmlZip",
            Subtype::VndSolentSdkm => "VndSolentSdkm",
            Subtype::VndSosi => "VndSosi",
            Subtype::VndSpotfireDxp => "VndSpotfireDxp",
            Subtype::VndSpotfireSfs => "VndSpotfireSfs",
            Subtype::VndSqlite3 => "VndSqlite3",
            Subtype::VndSssCod => "VndSssCod",
            Subtype::VndSssDtf => "VndSssDtf",
            Subtype::VndSssNtf => "VndSssNtf",
            Subtype::VndStardivisionCalc => "VndStardivisionCalc",
            Subtype::VndStardivisionChart => "VndStardivisionChart",
            Subtype::VndStardivisionDraw => "VndStardivisionDraw",
            Subtype::VndStardivisionImpress => "VndStardivisionImpress",
            Subtype::VndStardivisionMath => "VndStardivisionMath",
            Subtype::VndStardivisionWriter => "VndStardivisionWriter",
            Subtype::VndStardivisionWriterGlobal => "VndStardivisionWriterGlobal",
            Subtype::VndStepmaniaPackage => "VndStepmaniaPackage",
            Subtype::VndStepmaniaStepchart => "VndStepmaniaStepchart",
            Subtype::VndStreetStream => "VndStreetStream",
            Subtype::VndSunJ2meAppDescriptor => "VndSunJ2meAppDescriptor",
            Subtype::VndSunWadl => "VndSunWadl",
            Subtype::VndSunXmlCalc => "VndSunXmlCalc",
            Subtype::VndSunXmlCalcTemplate => "VndSunXmlCalcTemplate",
            Subtype::VndSunXmlDraw => "VndSunXmlDraw",
            Subtype::VndSunXmlDrawTemplate => "VndSunXmlDrawTemplate",
            Subtype::VndSunXmlImpress => "VndSunXmlImpress",
            Subtype::VndSunXmlImpressTemplate => "VndSunXmlImpressTemplate",
            Subtype::VndSunXmlMath => "VndSunXmlMath",
            Subtype::VndSunXmlWriter => "VndSunXmlWriter",
            Subtype::VndSunXmlWriterGlobal => "VndSunXmlWriterGlobal",
            Subtype::VndSunXmlWriterTemplate => "VndSunXmlWriterTemplate",
            Subtype::VndSusCalendar => "VndSusCalendar",
            Subtype::VndSvd => "VndSvd",
            Subtype::VndSvf => "VndSvf",
            Subtype::VndSwiftviewIcs => "VndSwiftviewIcs",
            Subtype::VndSycle => "VndSycle",
            Subtype::VndSyft => "VndSyft",
            Subtype::VndSymbianInstall => "VndSymbianInstall",
            Subtype::VndSyncml => "VndSyncml",
            Subtype::VndSyncmlDm => "VndSyncmlDm",
            Subtype::VndSyncmlDmNotification => "VndSyncmlDmNotification",
            Subtype::VndSyncmlDmddf => "VndSyncmlDmddf",
            Subtype::VndSyncmlDmtnds => "VndSyncmlDmtnds",
            Subtype::VndSyncmlDsNotification => "VndSyncmlDsNotification",
            Subtype::VndTableschema => "VndTableschema",
            Subtype::VndTaoIntentModuleArchive => "VndTaoIntentModuleArchive",
            Subtype::VndTcpdumpPcap => "VndTcpdumpPcap",
            Subtype::VndTencentTap => "VndTencentTap",
            Subtype::VndTheqvd => "VndTheqvd",
            Subtype::VndThinkCellPpttc => "VndThinkCellPpttc",
            Subtype::VndTmdMediaflexApi => "VndTmdMediaflexApi",
            Subtype::VndTml => "VndTml",
            Subtype::VndTmobileLivetv => "VndTmobileLivetv",
            Subtype::VndTriOnesource => "VndTriOnesource",
            Subtype::VndTridTpt => "VndTridTpt",
            Subtype::VndTriscapeMxs => "VndTriscapeMxs",
            Subtype::VndTrolltechLinguist => "VndTrolltechLinguist",
            Subtype::VndTrueapp => "VndTrueapp",
            Subtype::VndTruedoc => "VndTruedoc",
            Subtype::VndUbisoftWebplayer => "VndUbisoftWebplayer",
            Subtype::VndUfdl => "VndUfdl",
            Subtype::VndUiqTheme => "VndUiqTheme",
            Subtype::VndUmajin => "VndUmajin",
            Subtype::VndUnity => "VndUnity",
            Subtype::VndUoml => "VndUoml",
            Subtype::VndUplanetAlert => "VndUplanetAlert",
            Subtype::VndUplanetAlertWbxml => "VndUplanetAlertWbxml",
            Subtype::VndUplanetBearerChoice => "VndUplanetBearerChoice",
            Subtype::VndUplanetBearerChoiceWbxml => "VndUplanetBearerChoiceWbxml",
            Subtype::VndUplanetCacheop => "VndUplanetCacheop",
            Subtype::VndUplanetCacheopWbxml => "VndUplanetCacheopWbxml",
            Subtype::VndUplanetChannel => "VndUplanetChannel",
            Subtype::VndUplanetChannelWbxml => "VndUplanetChannelWbxml",
            Subtype::VndUplanetList => "VndUplanetList",
            Subtype::VndUplanetListWbxml => "VndUplanetListWbxml",
            Subtype::VndUplanetListcmd => "VndUplanetListcmd",
            Subtype::VndUplanetListcmdWbxml => "VndUplanetListcmdWbxml",
            Subtype::VndUplanetSignal => "VndUplanetSignal",
            Subtype::VndUriMap => "VndUriMap",
            Subtype::VndUsdz => "VndUsdz",
            Subtype::VndUvvuMp4 => "VndUvvuMp4",
            Subtype::VndValveSourceCompiledMap => "VndValveSourceCompiledMap",
            Subtype::VndValveSourceMaterial => "VndValveSourceMaterial",
            Subtype::VndValveSourceTexture => "VndValveSourceTexture",
            Subtype::VndVcx => "VndVcx",
            Subtype::VndVdStudy => "VndVdStudy",
            Subtype::VndVectorworks => "VndVectorworks",
            Subtype::VndVel => "VndVel",
            Subtype::VndVerimatrixVcas => "VndVerimatrixVcas",
            Subtype::VndVeritoneAion => "VndVeritoneAion",
            Subtype::VndVeryantThin => "VndVeryantThin",
            Subtype::VndVesEncrypted => "VndVesEncrypted",
            Subtype::VndVidsoftVidconference => "VndVidsoftVidconference",
            Subtype::VndVisio => "VndVisio",
            Subtype::VndVisionary => "VndVisionary",
            Subtype::VndVividenceScriptfile => "VndVividenceScriptfile",
            Subtype::VndVivo => "VndVivo",
            Subtype::VndVmxCvsd => "VndVmxCvsd",
            Subtype::VndVsf => "VndVsf",
            Subtype::VndVtu => "VndVtu",
            Subtype::VndWapSi => "VndWapSi",
            Subtype::VndWapSic => "VndWapSic",
            Subtype::VndWapSl => "VndWapSl",
            Subtype::VndWapSlc => "VndWapSlc",
            Subtype::VndWapWbmp => "VndWapWbmp",
            Subtype::VndWapWbxml => "VndWapWbxml",
            Subtype::VndWapWml => "VndWapWml",
            Subtype::VndWapWmlc => "VndWapWmlc",
            Subtype::VndWapWmlscript => "VndWapWmlscript",
            Subtype::VndWapWmlscriptc => "VndWapWmlscriptc",
            Subtype::VndWebturbo => "VndWebturbo",
            Subtype::VndWfaDpp => "VndWfaDpp",
            Subtype::VndWfaP2p => "VndWfaP2p",
            Subtype::VndWfaWsc => "VndWfaWsc",
            Subtype::VndWindowsDevicepairing => "VndWindowsDevicepairing",
            Subtype::VndWmc => "VndWmc",
            Subtype::VndWmfBootstrap => "VndWmfBootstrap",
            Subtype::VndWolframMathematica => "VndWolframMathematica",
            Subtype::VndWolframMathematicaPackage => "VndWolframMathematicaPackage",
            Subtype::VndWolframPlayer => "VndWolframPlayer",
            Subtype::VndWordperfect => "VndWordperfect",
            Subtype::VndWordperfect51 => "VndWordperfect51",
            Subtype::VndWqd => "VndWqd",
            Subtype::VndWrqHp3000Labelled => "VndWrqHp3000Labelled",
            Subtype::VndWtStf => "VndWtStf",
            Subtype::VndWvCsp => "VndWvCsp",
            Subtype::VndWvSsp => "VndWvSsp",
            Subtype::VndXacml => "VndXacml",
            Subtype::VndXara => "VndXara",
            Subtype::VndXfdl => "VndXfdl",
            Subtype::VndXfdlWebform => "VndXfdlWebform",
            Subtype::VndXiff => "VndXiff",
            Subtype::VndXmi => "VndXmi",
            Subtype::VndXmpieCpkg => "VndXmpieCpkg",
            Subtype::VndXmpieDpkg => "VndXmpieDpkg",
            Subtype::VndXmpiePlan => "VndXmpiePlan",
            Subtype::VndXmpiePpkg => "VndXmpiePpkg",
            Subtype::VndXmpieXlim => "VndXmpieXlim",
            Subtype::VndYamahaHvDic => "VndYamahaHvDic",
            Subtype::VndYamahaHvScript => "VndYamahaHvScript",
            Subtype::VndYamahaHvVoice => "VndYamahaHvVoice",
            Subtype::VndYamahaOpenscoreformat => "VndYamahaOpenscoreformat",
            Subtype::VndYamahaOpenscoreformatOsfpvg => "VndYamahaOpenscoreformatOsfpvg",
            Subtype::VndYamahaRemoteSetup => "VndYamahaRemoteSetup",
            Subtype::VndYamahaSmafAudio => "VndYamahaSmafAudio",
            Subtype::VndYamahaSmafPhrase => "VndYamahaSmafPhrase",
            Subtype::VndYamahaThroughNgn => "VndYamahaThroughNgn",
            Subtype::VndYamahaTunnelUdpencap => "VndYamahaTunnelUdpencap",
            Subtype::VndYaoweme => "VndYaoweme",
            Subtype::VndYellowriverCustomMenu => "VndYellowriverCustomMenu",
            Subtype::VndYoutubeYt => "VndYoutubeYt",
            Subtype::VndZbrushPcx => "VndZbrushPcx",
            Subtype::VndZul => "VndZul",
            Subtype::VndZzazzDeck => "VndZzazzDeck",
            Subtype::VoiceMessage => "VoiceMessage",
            Subtype::Voicexml => "Voicexml",
            Subtype::Vorbis => "Vorbis",
            Subtype::VorbisConfig => "VorbisConfig",
            Subtype::VoucherCms => "VoucherCms",
            Subtype::Vp8 => "Vp8",
            Subtype::Vp9 => "Vp9",
            Subtype::VqRtcpxr => "VqRtcpxr",
            Subtype::Vrml => "Vrml",
            Subtype::Vtt => "Vtt",
            Subtype::Wasm => "Wasm",
            Subtype::Watcherinfo => "Watcherinfo",
            Subtype::Webm => "Webm",
            Subtype::WebpushOptions => "WebpushOptions",
            Subtype::WhoisppQuery => "WhoisppQuery",
            Subtype::WhoisppResponse => "WhoisppResponse",
            Subtype::Widget => "Widget",
            Subtype::Wita => "Wita",
            Subtype::Wmf => "Wmf",
            Subtype::Woff => "Woff",
            Subtype::Woff2 => "Woff2",
            Subtype::Wordperfect51 => "Wordperfect51",
            Subtype::Wsdl => "Wsdl",
            Subtype::Wspolicy => "Wspolicy",
            Subtype::X123 => "X123",
            Subtype::X3d => "X3d",
            Subtype::X3dVrml => "X3dVrml",
            Subtype::X400Bp => "X400Bp",
            Subtype::X7zCompressed => "X7zCompressed",
            Subtype::XAbiword => "XAbiword",
            Subtype::XAiff => "XAiff",
            Subtype::XAlchemy => "XAlchemy",
            Subtype::XAppleDiskimage => "XAppleDiskimage",
            Subtype::XBcpio => "XBcpio",
            Subtype::XBibtex => "XBibtex",
            Subtype::XBittorrent => "XBittorrent",
            Subtype::XBoo => "XBoo",
            Subtype::XC => "XC",
            Subtype::XCache => "XCache",
            Subtype::XCacheCsf => "XCacheCsf",
            Subtype::XCactvsBinary => "XCactvsBinary",
            Subtype::XCanonCr2 => "XCanonCr2",
            Subtype::XCanonCrw => "XCanonCrw",
            Subtype::XCdf => "XCdf",
            Subtype::XCdlink => "XCdlink",
            Subtype::XCdx => "XCdx",
            Subtype::XCerius => "XCerius",
            Subtype::XChdr => "XChdr",
            Subtype::XChem3d => "XChem3d",
            Subtype::XChemdraw => "XChemdraw",
            Subtype::XCif => "XCif",
            Subtype::XCmdf => "XCmdf",
            Subtype::XCml => "XCml",
            Subtype::XCmuRaster => "XCmuRaster",
            Subtype::XCompass => "XCompass",
            Subtype::XComponent => "XComponent",
            Subtype::XComsol => "XComsol",
            Subtype::XCoreldraw => "XCoreldraw",
            Subtype::XCoreldrawpattern => "XCoreldrawpattern",
            Subtype::XCoreldrawtemplate => "XCoreldrawtemplate",
            Subtype::XCorelphotopaint => "XCorelphotopaint",
            Subtype::XCpio => "XCpio",
            Subtype::XCrossfire => "XCrossfire",
            Subtype::XCsh => "XCsh",
            Subtype::XCsml => "XCsml",
            Subtype::XCsrc => "XCsrc",
            Subtype::XCtx => "XCtx",
            Subtype::XCxf => "XCxf",
            Subtype::XDiff => "XDiff",
            Subtype::XDirector => "XDirector",
            Subtype::XDoom => "XDoom",
            Subtype::XDsrc => "XDsrc",
            Subtype::XDvi => "XDvi",
            Subtype::XEmblDlNucleotide => "XEmblDlNucleotide",
            Subtype::XEpsonErf => "XEpsonErf",
            Subtype::XFlv => "XFlv",
            Subtype::XFont => "XFont",
            Subtype::XFontPcf => "XFontPcf",
            Subtype::XFreemind => "XFreemind",
            Subtype::XGalacticSpc => "XGalacticSpc",
            Subtype::XGamessInput => "XGamessInput",
            Subtype::XGanttproject => "XGanttproject",
            Subtype::XGaussianCheckpoint => "XGaussianCheckpoint",
            Subtype::XGaussianCube => "XGaussianCube",
            Subtype::XGaussianInput => "XGaussianInput",
            Subtype::XGaussianLog => "XGaussianLog",
            Subtype::XGcg8Sequence => "XGcg8Sequence",
            Subtype::XGenbank => "XGenbank",
            Subtype::XGnumeric => "XGnumeric",
            Subtype::XGoSgf => "XGoSgf",
            Subtype::XGraphingCalculator => "XGraphingCalculator",
            Subtype::XGsm => "XGsm",
            Subtype::XGtar => "XGtar",
            Subtype::XGtarCompressed => "XGtarCompressed",
            Subtype::XHaskell => "XHaskell",
            Subtype::XHdf => "XHdf",
            Subtype::XHin => "XHin",
            Subtype::XHwp => "XHwp",
            Subtype::XIca => "XIca",
            Subtype::XInfo => "XInfo",
            Subtype::XInternetSignup => "XInternetSignup",
            Subtype::XIphone => "XIphone",
            Subtype::XIso9660Image => "XIso9660Image",
            Subtype::XIsostar => "XIsostar",
            Subtype::XJava => "XJava",
            Subtype::XJavaJnlpFile => "XJavaJnlpFile",
            Subtype::XJcampDx => "XJcampDx",
            Subtype::XJg => "XJg",
            Subtype::XJmol => "XJmol",
            Subtype::XJng => "XJng",
            Subtype::XKillustrator => "XKillustrator",
            Subtype::XKinemage => "XKinemage",
            Subtype::XLaAsf => "XLaAsf",
            Subtype::XLatex => "XLatex",
            Subtype::XLha => "XLha",
            Subtype::XLilypond => "XLilypond",
            Subtype::XLiterateHaskell => "XLiterateHaskell",
            Subtype::XLyx => "XLyx",
            Subtype::XLzh => "XLzh",
            Subtype::XLzx => "XLzx",
            Subtype::XMacmolecule => "XMacmolecule",
            Subtype::XMacromodelInput => "XMacromodelInput",
            Subtype::XMaker => "XMaker",
            Subtype::XMatroska => "XMatroska",
            Subtype::XMdlMolfile => "XMdlMolfile",
            Subtype::XMdlRdfile => "XMdlRdfile",
            Subtype::XMdlRxnfile => "XMdlRxnfile",
            Subtype::XMdlSdfile => "XMdlSdfile",
            Subtype::XMdlTgf => "XMdlTgf",
            Subtype::XMixedReplace => "XMixedReplace",
            Subtype::XMmcif => "XMmcif",
            Subtype::XMng => "XMng",
            Subtype::XMoc => "XMoc",
            Subtype::XMol2 => "XMol2",
            Subtype::XMolconnZ => "XMolconnZ",
            Subtype::XMopacGraph => "XMopacGraph",
            Subtype::XMopacInput => "XMopacInput",
            Subtype::XMopacOut => "XMopacOut",
            Subtype::XMopacVib => "XMopacVib",
            Subtype::XMsWax => "XMsWax",
            Subtype::XMsWm => "XMsWm",
            Subtype::XMsWma => "XMsWma",
            Subtype::XMsWmd => "XMsWmd",
            Subtype::XMsWmv => "XMsWmv",
            Subtype::XMsWmx => "XMsWmx",
            Subtype::XMsWmz => "XMsWmz",
            Subtype::XMsWvx => "XMsWvx",
            Subtype::XMsdosProgram => "XMsdosProgram",
            Subtype::XMsi => "XMsi",
            Subtype::XMsvideo => "XMsvideo",
            Subtype::XNcbiAsn1 => "XNcbiAsn1",
            Subtype::XNcbiAsn1Ascii => "XNcbiAsn1Ascii",
            Subtype::XNcbiAsn1Binary => "XNcbiAsn1Binary",
            Subtype::XNcbiAsn1Spec => "XNcbiAsn1Spec",
            Subtype::XNetcdf => "XNetcdf",
            Subtype::XNikonNef => "XNikonNef",
            Subtype::XNsProxyAutoconfig => "XNsProxyAutoconfig",
            Subtype::XNwc => "XNwc",
            Subtype::XObject => "XObject",
            Subtype::XOlympusOrf => "XOlympusOrf",
            Subtype::XOzApplication => "XOzApplication",
            Subtype::XPascal => "XPascal",
            Subtype::XPcsGcd => "XPcsGcd",
            Subtype::XPdb => "XPdb",
            Subtype::XPerl => "XPerl",
            Subtype::XPkcs7Certreqresp => "XPkcs7Certreqresp",
            Subtype::XPnRealaudio => "XPnRealaudio",
            Subtype::XPortableAnymap => "XPortableAnymap",
            Subtype::XPortableBitmap => "XPortableBitmap",
            Subtype::XPortableGraymap => "XPortableGraymap",
            Subtype::XPortablePixmap => "XPortablePixmap",
            Subtype::XPython => "XPython",
            Subtype::XPythonCode => "XPythonCode",
            Subtype::XQgis => "XQgis",
            Subtype::XQuicktimeplayer => "XQuicktimeplayer",
            Subtype::XRdp => "XRdp",
            Subtype::XRedhatPackageManager => "XRedhatPackageManager",
            Subtype::XRgb => "XRgb",
            Subtype::XRosdal => "XRosdal",
            Subtype::XRss => "XRss",
            Subtype::XRuby => "XRuby",
            Subtype::XScala => "XScala",
            Subtype::XScilab => "XScilab",
            Subtype::XScilabXcos => "XScilabXcos",
            Subtype::XScpls => "XScpls",
            Subtype::XSd2 => "XSd2",
            Subtype::XSetext => "XSetext",
            Subtype::XSfv => "XSfv",
            Subtype::XSgiMovie => "XSgiMovie",
            Subtype::XSh => "XSh",
            Subtype::XShar => "XShar",
            Subtype::XSilverlight => "XSilverlight",
            Subtype::XStuffit => "XStuffit",
            Subtype::XSv4cpio => "XSv4cpio",
            Subtype::XSv4crc => "XSv4crc",
            Subtype::XSwissprot => "XSwissprot",
            Subtype::XTar => "XTar",
            Subtype::XTcl => "XTcl",
            Subtype::XTex => "XTex",
            Subtype::XTexGf => "XTexGf",
            Subtype::XTexPk => "XTexPk",
            Subtype::XTexinfo => "XTexinfo",
            Subtype::XTrash => "XTrash",
            Subtype::XTroffMan => "XTroffMan",
            Subtype::XTroffMe => "XTroffMe",
            Subtype::XTroffMs => "XTroffMs",
            Subtype::XUstar => "XUstar",
            Subtype::XVamasIso14976 => "XVamasIso14976",
            Subtype::XVcalendar => "XVcalendar",
            Subtype::XVmd => "XVmd",
            Subtype::XWaisSource => "XWaisSource",
            Subtype::XWav => "XWav",
            Subtype::XWingz => "XWingz",
            Subtype::XX509CaCert => "XX509CaCert",
            Subtype::XXbitmap => "XXbitmap",
            Subtype::XXcf => "XXcf",
            Subtype::XXfig => "XXfig",
            Subtype::XXpinstall => "XXpinstall",
            Subtype::XXpixmap => "XXpixmap",
            Subtype::XXtel => "XXtel",
            Subtype::XXwindowdump => "XXwindowdump",
            Subtype::XXyz => "XXyz",
            Subtype::XXz => "XXz",
            Subtype::Xacml => "Xacml",
            Subtype::XcapAtt => "XcapAtt",
            Subtype::XcapCaps => "XcapCaps",
            Subtype::XcapDiff => "XcapDiff",
            Subtype::XcapEl => "XcapEl",
            Subtype::XcapError => "XcapError",
            Subtype::XcapNs => "XcapNs",
            Subtype::XconConferenceInfo => "XconConferenceInfo",
            Subtype::XconConferenceInfoDiff => "XconConferenceInfoDiff",
            Subtype::Xenc => "Xenc",
            Subtype::Xhtml => "Xhtml",
            Subtype::Xliff => "Xliff",
            Subtype::Xml => "Xml",
            Subtype::XmlDtd => "XmlDtd",
            Subtype::XmlExternalParsedEntity => "XmlExternalParsedEntity",
            Subtype::XmlPatch => "XmlPatch",
            Subtype::Xmpp => "Xmpp",
            Subtype::Xop => "Xop",
            Subtype::Xslt => "Xslt",
            Subtype::Xspf => "Xspf",
            Subtype::Xv => "Xv",
            Subtype::Yang => "Yang",
            Subtype::YangData => "YangData",
            Subtype::YangPatch => "YangPatch",
            Subtype::Yin => "Yin",
            Subtype::Zip => "Zip",
            Subtype::Zlib => "Zlib",
            Subtype::Zstd => "Zstd",
        }
    }
}
impl core::str::FromStr for Subtype {
    type Err = crate::InvalidName;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        const GRAPH: intern_str::Graph<
            'static,
            'static,
            intern_str::CaseInsensitive<&'static str>,
            Option<Subtype>,
        > = {
            const NODES: &[intern_str::Node<
                'static,
                intern_str::CaseInsensitive<&'static str>,
                Option<Subtype>,
            >] = &[
                intern_str::Node::new(&[], None, 0, 18446744073709551615),
                intern_str::Node::new(&[], Some(Subtype::Star), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::A2l), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 2)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Aac), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 4)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Ac3), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Aces), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("s"), 7)],
                    Some(Subtype::Ace),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Activemessage), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ssage"), 9)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Activity), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("eme"), 10),
                        (intern_str::CaseInsensitive("ity"), 11),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("iv"), 12)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 6),
                        (intern_str::CaseInsensitive("e"), 8),
                        (intern_str::CaseInsensitive("t"), 13),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Alternative), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rnative"), 15)], None, 0, 7),
                intern_str::Node::new(&[], Some(Subtype::AltoCdnifilter), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("filter"), 17)],
                    Some(Subtype::AltoCdni),
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::AltoCostmapfilter), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("filter"), 19)],
                    Some(Subtype::AltoCostmap),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("map"), 20)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dni"), 18),
                        (intern_str::CaseInsensitive("ost"), 21),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::AltoDirectory), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("irectory"), 23)], None, 0, 8),
                intern_str::Node::new(&[], Some(Subtype::AltoEndpointcostparams), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("params"), 25)],
                    Some(Subtype::AltoEndpointcost),
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::AltoEndpointpropparams), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("params"), 27)],
                    Some(Subtype::AltoEndpointprop),
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cost"), 26),
                        (intern_str::CaseInsensitive("prop"), 28),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("int"), 29)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::AltoError), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ndpo"), 30),
                        (intern_str::CaseInsensitive("rror"), 31),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::AltoNetworkmapfilter), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("filter"), 33)],
                    Some(Subtype::AltoNetworkmap),
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("etworkmap"), 34)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::AltoPropmapparams), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("params"), 36)],
                    Some(Subtype::AltoPropmap),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ropmap"), 37)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::AltoUpdatestreamcontrol), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 39)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::AltoUpdatestreamparams), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("contro"), 40),
                        (intern_str::CaseInsensitive("params"), 41),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pdatestream"), 42)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 22),
                        (intern_str::CaseInsensitive("d"), 24),
                        (intern_str::CaseInsensitive("e"), 32),
                        (intern_str::CaseInsensitive("n"), 35),
                        (intern_str::CaseInsensitive("p"), 38),
                        (intern_str::CaseInsensitive("u"), 43),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 16),
                        (intern_str::CaseInsensitive("o"), 44),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 45)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Aml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::AmrWb), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wb"), 48)],
                    Some(Subtype::Amr),
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("l"), 47),
                        (intern_str::CaseInsensitive("r"), 49),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::AndrewInset), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nset"), 51)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Annodex), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("drewi"), 52),
                        (intern_str::CaseInsensitive("nodex"), 53),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::Appledouble), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("le"), 55)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Applefile), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("doub"), 56),
                        (intern_str::CaseInsensitive("file"), 57),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 58)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Aptx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("pl"), 59),
                        (intern_str::CaseInsensitive("tx"), 60),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Asc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 62)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Atfx), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("x"), 64)],
                    Some(Subtype::Atf),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Atomcat), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("at"), 66)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Atomdeleted), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eleted"), 68)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Atomicmail), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cmail"), 70)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Atomserv), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("v"), 72)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Atomsvc), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("er"), 73),
                        (intern_str::CaseInsensitive("vc"), 74),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 67),
                        (intern_str::CaseInsensitive("d"), 69),
                        (intern_str::CaseInsensitive("i"), 71),
                        (intern_str::CaseInsensitive("s"), 75),
                    ],
                    Some(Subtype::Atom),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 76)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Atrac3), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::AtracAdvancedLossless), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("dvancedlossless"), 79)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(&[], Some(Subtype::AtracX), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 78),
                        (intern_str::CaseInsensitive("a"), 80),
                        (intern_str::CaseInsensitive("x"), 81),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ac"), 82)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::AtscDwd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::AtscDynamicEventMessage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("amiceventmessage"), 85)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("wd"), 84),
                        (intern_str::CaseInsensitive("yn"), 86),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::AtscHeld), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eld"), 88)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::AtscRdt), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::AtscRsat), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 91)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dt"), 90),
                        (intern_str::CaseInsensitive("sa"), 92),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 87),
                        (intern_str::CaseInsensitive("h"), 89),
                        (intern_str::CaseInsensitive("r"), 93),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 94)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Atxml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 96)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 65),
                        (intern_str::CaseInsensitive("o"), 77),
                        (intern_str::CaseInsensitive("r"), 83),
                        (intern_str::CaseInsensitive("s"), 95),
                        (intern_str::CaseInsensitive("x"), 97),
                    ],
                    Some(Subtype::At),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::AuthPolicy), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("thpolicy"), 99)], None, 0, 8),
                intern_str::Node::new(&[], Some(Subtype::Av1), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Avci), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Avcs), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 102),
                        (intern_str::CaseInsensitive("s"), 103),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Avif), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 105)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 101),
                        (intern_str::CaseInsensitive("c"), 104),
                        (intern_str::CaseInsensitive("i"), 106),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 3),
                        (intern_str::CaseInsensitive("a"), 5),
                        (intern_str::CaseInsensitive("c"), 14),
                        (intern_str::CaseInsensitive("l"), 46),
                        (intern_str::CaseInsensitive("m"), 50),
                        (intern_str::CaseInsensitive("n"), 54),
                        (intern_str::CaseInsensitive("p"), 61),
                        (intern_str::CaseInsensitive("s"), 63),
                        (intern_str::CaseInsensitive("t"), 98),
                        (intern_str::CaseInsensitive("u"), 100),
                        (intern_str::CaseInsensitive("v"), 107),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::BacnetXdd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("txdd"), 109)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Basic), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::BatchSmtp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("smtp"), 112)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cne"), 110),
                        (intern_str::CaseInsensitive("sic"), 111),
                        (intern_str::CaseInsensitive("tch"), 113),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Bbolin), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("olin"), 115)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Beep), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ep"), 117)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Blockdevice), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ockdevice"), 119)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::Bmpeg), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eg"), 121)],
                    Some(Subtype::Bmp),
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 122)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Bt656), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("656"), 124)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Bv16), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Bv32), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("16"), 126),
                        (intern_str::CaseInsensitive("32"), 127),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Byteranges), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("teranges"), 129)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 114),
                        (intern_str::CaseInsensitive("b"), 116),
                        (intern_str::CaseInsensitive("e"), 118),
                        (intern_str::CaseInsensitive("l"), 120),
                        (intern_str::CaseInsensitive("m"), 123),
                        (intern_str::CaseInsensitive("t"), 125),
                        (intern_str::CaseInsensitive("v"), 128),
                        (intern_str::CaseInsensitive("y"), 130),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::CacheManifest), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("hemanifest"), 132)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::Calendar), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::CallCompletion), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("letion"), 135)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Cals1840), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("endar"), 134),
                        (intern_str::CaseInsensitive("lcomp"), 136),
                        (intern_str::CaseInsensitive("s1840"), 137),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::Captive), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tive"), 139)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 133),
                        (intern_str::CaseInsensitive("l"), 138),
                        (intern_str::CaseInsensitive("p"), 140),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::CborSeq), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("seq"), 142)],
                    Some(Subtype::Cbor),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("or"), 143)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Cccex), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 145)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Ccmp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Ccxml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 148)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ce"), 146),
                        (intern_str::CaseInsensitive("mp"), 147),
                        (intern_str::CaseInsensitive("xm"), 149),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Cdfx), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::CdmiCapability), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("y"), 152)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::CdmiContainer), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("apabilit"), 153),
                        (intern_str::CaseInsensitive("ontainer"), 154),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::CdmiDomain), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("omain"), 156)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::CdmiObject), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("bject"), 158)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::CdmiQueue), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ueue"), 160)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 155),
                        (intern_str::CaseInsensitive("d"), 157),
                        (intern_str::CaseInsensitive("o"), 159),
                        (intern_str::CaseInsensitive("q"), 161),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Cdni), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("fx"), 151),
                        (intern_str::CaseInsensitive("mi"), 162),
                        (intern_str::CaseInsensitive("ni"), 163),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Cea2018), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("2018"), 165)],
                    Some(Subtype::Cea),
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::CelB), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Cellml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 168)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 167),
                        (intern_str::CaseInsensitive("l"), 169),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 166),
                        (intern_str::CaseInsensitive("l"), 170),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Cfw), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("w"), 172)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Cgm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 174)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Chardevice), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ardevice"), 176)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::City), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ty"), 178)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Clearmode), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("armode"), 180)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Clr), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::ClueInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("info"), 183)],
                    Some(Subtype::Clue),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 184)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 181),
                        (intern_str::CaseInsensitive("r"), 182),
                        (intern_str::CaseInsensitive("u"), 185),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Cms), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 187)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Cnrp), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rp"), 189)],
                    Some(Subtype::Cn),
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::CoapGroup), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::CoapPayload), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ad"), 192)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("group"), 191),
                        (intern_str::CaseInsensitive("paylo"), 193),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::Collection), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ection"), 195)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Commonground), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("onground"), 197)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::ConferenceInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("erenceinfo"), 199)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::CoseKeySet), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("set"), 201)],
                    Some(Subtype::CoseKey),
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("key"), 202)],
                    Some(Subtype::Cose),
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ap"), 194),
                        (intern_str::CaseInsensitive("ll"), 196),
                        (intern_str::CaseInsensitive("mm"), 198),
                        (intern_str::CaseInsensitive("nf"), 200),
                        (intern_str::CaseInsensitive("se"), 203),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Cpim), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 205)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Cpl), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 206),
                        (intern_str::CaseInsensitive("l"), 207),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::CqlExtension), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::CqlIdentifier), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 210)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("extension"), 209),
                        (intern_str::CaseInsensitive("identifie"), 211),
                    ],
                    Some(Subtype::Cql),
                    0,
                    9,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 212)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Csound), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("und"), 214)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Csrattrs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("attrs"), 216)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Css), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::CstAdata), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("data"), 219)],
                    Some(Subtype::Csta),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 220)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Csvm), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::CsvSchema), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("chema"), 223)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("m"), 222),
                        (intern_str::CaseInsensitive("s"), 224),
                    ],
                    Some(Subtype::Csv),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("o"), 215),
                        (intern_str::CaseInsensitive("r"), 217),
                        (intern_str::CaseInsensitive("s"), 218),
                        (intern_str::CaseInsensitive("t"), 221),
                        (intern_str::CaseInsensitive("v"), 225),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::CuSeeme), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("seeme"), 227)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Cwt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 229)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Cybercash), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("bercash"), 231)], None, 0, 7),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 141),
                        (intern_str::CaseInsensitive("b"), 144),
                        (intern_str::CaseInsensitive("c"), 150),
                        (intern_str::CaseInsensitive("d"), 164),
                        (intern_str::CaseInsensitive("e"), 171),
                        (intern_str::CaseInsensitive("f"), 173),
                        (intern_str::CaseInsensitive("g"), 175),
                        (intern_str::CaseInsensitive("h"), 177),
                        (intern_str::CaseInsensitive("i"), 179),
                        (intern_str::CaseInsensitive("l"), 186),
                        (intern_str::CaseInsensitive("m"), 188),
                        (intern_str::CaseInsensitive("n"), 190),
                        (intern_str::CaseInsensitive("o"), 204),
                        (intern_str::CaseInsensitive("p"), 208),
                        (intern_str::CaseInsensitive("q"), 213),
                        (intern_str::CaseInsensitive("s"), 226),
                        (intern_str::CaseInsensitive("u"), 228),
                        (intern_str::CaseInsensitive("w"), 230),
                        (intern_str::CaseInsensitive("y"), 232),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Dashdelta), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::DashPatch), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("delta"), 234),
                        (intern_str::CaseInsensitive("patch"), 235),
                    ],
                    Some(Subtype::Dash),
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::Dat12), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("2"), 237)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Davmount), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ount"), 239)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("sh"), 236),
                        (intern_str::CaseInsensitive("t1"), 238),
                        (intern_str::CaseInsensitive("vm"), 240),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::DcaRft), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rft"), 242)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Dcd), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 243),
                        (intern_str::CaseInsensitive("d"), 244),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::DecDx), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::DeliveryStatus), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("erystatus"), 247)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cdx"), 246),
                        (intern_str::CaseInsensitive("liv"), 248),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::DialogInfo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("loginfo"), 250)], None, 0, 7),
                intern_str::Node::new(&[], Some(Subtype::DicomRle), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rle"), 252)],
                    Some(Subtype::Dicom),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("om"), 253)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Digest), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("est"), 255)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Dii), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::DirectoryLocked), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("locked"), 258)],
                    Some(Subtype::Directory),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ectory"), 259)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::DispositionNotification), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("positionnotification"), 261)],
                    None,
                    0,
                    20,
                ),
                intern_str::Node::new(&[], Some(Subtype::Dit), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 251),
                        (intern_str::CaseInsensitive("c"), 254),
                        (intern_str::CaseInsensitive("g"), 256),
                        (intern_str::CaseInsensitive("i"), 257),
                        (intern_str::CaseInsensitive("r"), 260),
                        (intern_str::CaseInsensitive("s"), 262),
                        (intern_str::CaseInsensitive("t"), 263),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Dls), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("s"), 265)],
                    Some(Subtype::Dl),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::DnsMessage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("message"), 267)],
                    Some(Subtype::Dns),
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 268)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Dots), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ts"), 270)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Dskpp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 272)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Dsptype), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ype"), 274)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::DsrEs201108), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("108"), 276)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::DsrEs202050), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("0"), 278)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::DsrEs202211), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::DsrEs202212), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 280),
                        (intern_str::CaseInsensitive("2"), 281),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("05"), 279),
                        (intern_str::CaseInsensitive("21"), 282),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 277),
                        (intern_str::CaseInsensitive("2"), 283),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s20"), 284)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Dssc), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("kp"), 273),
                        (intern_str::CaseInsensitive("pt"), 275),
                        (intern_str::CaseInsensitive("re"), 285),
                        (intern_str::CaseInsensitive("sc"), 286),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Dvcs), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Dvi4), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cs"), 288),
                        (intern_str::CaseInsensitive("i4"), 289),
                    ],
                    Some(Subtype::Dv),
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 241),
                        (intern_str::CaseInsensitive("c"), 245),
                        (intern_str::CaseInsensitive("e"), 249),
                        (intern_str::CaseInsensitive("i"), 264),
                        (intern_str::CaseInsensitive("l"), 266),
                        (intern_str::CaseInsensitive("n"), 269),
                        (intern_str::CaseInsensitive("o"), 271),
                        (intern_str::CaseInsensitive("s"), 287),
                        (intern_str::CaseInsensitive("v"), 290),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::E57), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("7"), 292)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Eac3), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c3"), 294)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::EdiConsent), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sent"), 296)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Edifact), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 298)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::EdiX12), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("con"), 297),
                        (intern_str::CaseInsensitive("fac"), 299),
                        (intern_str::CaseInsensitive("x12"), 300),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 301)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Efi), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 303)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Elm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 305)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::EmergencyCallDataCap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 307)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::EmergencyCallDataComment), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::EmergencyCallDataControl), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mment"), 309),
                        (intern_str::CaseInsensitive("ntrol"), 310),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 308),
                        (intern_str::CaseInsensitive("o"), 311),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::EmergencyCallDataDeviceInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eviceinfo"), 313)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::EmergencyCallDataECallMsd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("callmsd"), 315)], None, 0, 7),
                intern_str::Node::new(&[], Some(Subtype::EmergencyCallDataProviderInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("roviderinfo"), 317)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::EmergencyCallDataServiceInfo), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::EmergencyCallDataSubscriberInfo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nfo"), 320)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("erviceinfo"), 319),
                        (intern_str::CaseInsensitive("ubscriberi"), 321),
                    ],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::EmergencyCallDataVeds), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eds"), 323)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 312),
                        (intern_str::CaseInsensitive("d"), 314),
                        (intern_str::CaseInsensitive("e"), 316),
                        (intern_str::CaseInsensitive("p"), 318),
                        (intern_str::CaseInsensitive("s"), 322),
                        (intern_str::CaseInsensitive("v"), 324),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rgencycalldata"), 325)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::Emf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Emma), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 328)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Emotionml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tionml"), 330)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 326),
                        (intern_str::CaseInsensitive("f"), 327),
                        (intern_str::CaseInsensitive("m"), 329),
                        (intern_str::CaseInsensitive("o"), 331),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Encaprtp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Encrypted), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 334)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("aprtp"), 333),
                        (intern_str::CaseInsensitive("rypte"), 335),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::Enriched), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("iched"), 337)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 336),
                        (intern_str::CaseInsensitive("r"), 338),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Epp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Epub), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("b"), 341)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("p"), 340),
                        (intern_str::CaseInsensitive("u"), 342),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Eshop), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("hop"), 344)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Evrc0), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Evrc1), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Evrcb0), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Evrcb1), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("0"), 348),
                        (intern_str::CaseInsensitive("1"), 349),
                    ],
                    Some(Subtype::Evrcb),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Evrcnw0), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Evrcnw1), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("0"), 351),
                        (intern_str::CaseInsensitive("1"), 352),
                    ],
                    Some(Subtype::Evrcnw),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("w"), 353)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::EvrcQcp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cp"), 355)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Evrcwb0), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Evrcwb1), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("0"), 357),
                        (intern_str::CaseInsensitive("1"), 358),
                    ],
                    Some(Subtype::Evrcwb),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("b"), 359)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("0"), 346),
                        (intern_str::CaseInsensitive("1"), 347),
                        (intern_str::CaseInsensitive("b"), 350),
                        (intern_str::CaseInsensitive("n"), 354),
                        (intern_str::CaseInsensitive("q"), 356),
                        (intern_str::CaseInsensitive("w"), 360),
                    ],
                    Some(Subtype::Evrc),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 361)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Evs), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("r"), 362),
                        (intern_str::CaseInsensitive("s"), 363),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Example), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mple"), 365)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Exi), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::ExpectCtReport), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("treport"), 368)], None, 0, 7),
                intern_str::Node::new(&[], Some(Subtype::Express), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ectc"), 369),
                        (intern_str::CaseInsensitive("ress"), 370),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::ExternalBody), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ernalbody"), 372)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 366),
                        (intern_str::CaseInsensitive("i"), 367),
                        (intern_str::CaseInsensitive("p"), 371),
                        (intern_str::CaseInsensitive("t"), 373),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("5"), 293),
                        (intern_str::CaseInsensitive("a"), 295),
                        (intern_str::CaseInsensitive("d"), 302),
                        (intern_str::CaseInsensitive("f"), 304),
                        (intern_str::CaseInsensitive("l"), 306),
                        (intern_str::CaseInsensitive("m"), 332),
                        (intern_str::CaseInsensitive("n"), 339),
                        (intern_str::CaseInsensitive("p"), 343),
                        (intern_str::CaseInsensitive("s"), 345),
                        (intern_str::CaseInsensitive("v"), 364),
                        (intern_str::CaseInsensitive("x"), 374),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Fastinfoset), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("set"), 376)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Fastsoap), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("info"), 377),
                        (intern_str::CaseInsensitive("soap"), 378),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("st"), 379)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Fdt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 381)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::FeedbackReport), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("edbackreport"), 383)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::Ffv1), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("v1"), 385)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Fhirpath), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("path"), 387)],
                    Some(Subtype::Fhir),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ir"), 388)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Fifo), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Fits), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("fo"), 390),
                        (intern_str::CaseInsensitive("ts"), 391),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Flac), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 393)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Flexfec), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("xfec"), 395)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Fli), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 394),
                        (intern_str::CaseInsensitive("e"), 396),
                        (intern_str::CaseInsensitive("i"), 397),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::FontTdpfr), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 399)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::FormData), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("nttdpf"), 400),
                        (intern_str::CaseInsensitive("rmdata"), 401),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::FrameworkAttributes), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ameworkattributes"), 403)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::Futuresplash), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("turesplash"), 405)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::Fwdred), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dred"), 407)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 380),
                        (intern_str::CaseInsensitive("d"), 382),
                        (intern_str::CaseInsensitive("e"), 384),
                        (intern_str::CaseInsensitive("f"), 386),
                        (intern_str::CaseInsensitive("h"), 389),
                        (intern_str::CaseInsensitive("i"), 392),
                        (intern_str::CaseInsensitive("l"), 398),
                        (intern_str::CaseInsensitive("o"), 402),
                        (intern_str::CaseInsensitive("r"), 404),
                        (intern_str::CaseInsensitive("u"), 406),
                        (intern_str::CaseInsensitive("w"), 408),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::G3fax), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("fax"), 410)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::G7110), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("0"), 412)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::G719), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 413),
                        (intern_str::CaseInsensitive("9"), 414),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::G7221), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("1"), 416)],
                    Some(Subtype::G722),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::G723), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::G72616), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::G72624), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::G72632), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::G72640), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("16"), 419),
                        (intern_str::CaseInsensitive("24"), 420),
                        (intern_str::CaseInsensitive("32"), 421),
                        (intern_str::CaseInsensitive("40"), 422),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::G728), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::G7291), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::G729d), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::G729e), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 425),
                        (intern_str::CaseInsensitive("d"), 426),
                        (intern_str::CaseInsensitive("e"), 427),
                    ],
                    Some(Subtype::G729),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 417),
                        (intern_str::CaseInsensitive("3"), 418),
                        (intern_str::CaseInsensitive("6"), 423),
                        (intern_str::CaseInsensitive("8"), 424),
                        (intern_str::CaseInsensitive("9"), 428),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 415),
                        (intern_str::CaseInsensitive("2"), 429),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Geopackage), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ge"), 431)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Geoxacml), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("packa"), 432),
                        (intern_str::CaseInsensitive("xacml"), 433),
                    ],
                    Some(Subtype::Geo),
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 434)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Gff3), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f3"), 436)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Gif), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 438)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::GlobalDeliveryStatus), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::GlobalDispositionNotification), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ification"), 441)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("eliverystatus"), 440),
                        (intern_str::CaseInsensitive("ispositionnot"), 442),
                    ],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::GlobalHeaders), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eaders"), 444)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 443),
                        (intern_str::CaseInsensitive("h"), 445),
                    ],
                    Some(Subtype::Global),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("al"), 446)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::GltfBinary), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::GltfBuffer), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("inary"), 448),
                        (intern_str::CaseInsensitive("uffer"), 449),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("b"), 450)],
                    Some(Subtype::Gltf),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ob"), 447),
                        (intern_str::CaseInsensitive("tf"), 451),
                    ],
                    Some(Subtype::Gl),
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Gml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 453)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::GrammarRefList), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ammarreflist"), 455)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::GsmEfr), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::GsmHr08), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("8"), 458)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("efr"), 457),
                        (intern_str::CaseInsensitive("hr0"), 459),
                    ],
                    Some(Subtype::Gsm),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 460)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Gzip), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ip"), 462)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 411),
                        (intern_str::CaseInsensitive("7"), 430),
                        (intern_str::CaseInsensitive("e"), 435),
                        (intern_str::CaseInsensitive("f"), 437),
                        (intern_str::CaseInsensitive("i"), 439),
                        (intern_str::CaseInsensitive("l"), 452),
                        (intern_str::CaseInsensitive("m"), 454),
                        (intern_str::CaseInsensitive("r"), 456),
                        (intern_str::CaseInsensitive("s"), 461),
                        (intern_str::CaseInsensitive("z"), 463),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::H224), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("4"), 465)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::H261), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::H2631998), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::H2632000), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1998"), 468),
                        (intern_str::CaseInsensitive("2000"), 469),
                    ],
                    Some(Subtype::H263),
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::H264Rcdo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 471)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::H264Svc), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("rcd"), 472),
                        (intern_str::CaseInsensitive("svc"), 473),
                    ],
                    Some(Subtype::H264),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::H265), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 467),
                        (intern_str::CaseInsensitive("3"), 470),
                        (intern_str::CaseInsensitive("4"), 474),
                        (intern_str::CaseInsensitive("5"), 475),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 466),
                        (intern_str::CaseInsensitive("6"), 476),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::HeaderSet), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("derset"), 478)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::HeicSequence), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sequence"), 480)],
                    Some(Subtype::Heic),
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::HeifSequence), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sequence"), 482)],
                    Some(Subtype::Heif),
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 481),
                        (intern_str::CaseInsensitive("f"), 483),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Hej2k), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("2k"), 485)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Held), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 487)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 479),
                        (intern_str::CaseInsensitive("i"), 484),
                        (intern_str::CaseInsensitive("j"), 486),
                        (intern_str::CaseInsensitive("l"), 488),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Hsj2), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("j2"), 490)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Hta), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Html), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 493)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Http), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 495)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 492),
                        (intern_str::CaseInsensitive("m"), 494),
                        (intern_str::CaseInsensitive("t"), 496),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Hyperstudio), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("perstudio"), 498)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 477),
                        (intern_str::CaseInsensitive("e"), 489),
                        (intern_str::CaseInsensitive("s"), 491),
                        (intern_str::CaseInsensitive("t"), 497),
                        (intern_str::CaseInsensitive("y"), 499),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::IbeKeyRequest), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eyrequest"), 501)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::IbePkgReply), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ly"), 503)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::IbePpData), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("kgrep"), 504),
                        (intern_str::CaseInsensitive("pdata"), 505),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("k"), 502),
                        (intern_str::CaseInsensitive("p"), 506),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 507)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Ief), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 509)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Iges), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("es"), 511)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::ILbc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("bc"), 513)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Imdn), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::ImIscomposing), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("composing"), 516)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dn"), 515),
                        (intern_str::CaseInsensitive("is"), 517),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::IndexCmd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::IndexObj), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::IndexResponse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ponse"), 521)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::IndexVnd), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cmd"), 519),
                        (intern_str::CaseInsensitive("obj"), 520),
                        (intern_str::CaseInsensitive("res"), 522),
                        (intern_str::CaseInsensitive("vnd"), 523),
                    ],
                    Some(Subtype::Index),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Inkml), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dex"), 524),
                        (intern_str::CaseInsensitive("kml"), 525),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Iotp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tp"), 527)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Ipfix), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ix"), 529)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::IpMrV25), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rv25"), 531)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Ipp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 530),
                        (intern_str::CaseInsensitive("m"), 532),
                        (intern_str::CaseInsensitive("p"), 533),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::IsoSegment), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("egment"), 535)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Isup), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("os"), 536),
                        (intern_str::CaseInsensitive("up"), 537),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Its), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 539)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 508),
                        (intern_str::CaseInsensitive("e"), 510),
                        (intern_str::CaseInsensitive("g"), 512),
                        (intern_str::CaseInsensitive("l"), 514),
                        (intern_str::CaseInsensitive("m"), 518),
                        (intern_str::CaseInsensitive("n"), 526),
                        (intern_str::CaseInsensitive("o"), 528),
                        (intern_str::CaseInsensitive("p"), 534),
                        (intern_str::CaseInsensitive("s"), 538),
                        (intern_str::CaseInsensitive("t"), 540),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::JavaArchive), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rchive"), 542)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Javascript), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::JavaSerializedObject), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("izedobject"), 545)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cript"), 544),
                        (intern_str::CaseInsensitive("erial"), 546),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::JavaVm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 548)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 543),
                        (intern_str::CaseInsensitive("s"), 547),
                        (intern_str::CaseInsensitive("v"), 549),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("va"), 550)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::JcrCnd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rcnd"), 552)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Jf2feed), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("2feed"), 554)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Jls), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 556)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Jose), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("se"), 558)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Jp2), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Jpeg2000), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("2000"), 561)],
                    Some(Subtype::Jpeg),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 562)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Jphc), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("c"), 564)],
                    Some(Subtype::Jph),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Jpm), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Jpx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 560),
                        (intern_str::CaseInsensitive("e"), 563),
                        (intern_str::CaseInsensitive("h"), 565),
                        (intern_str::CaseInsensitive("m"), 566),
                        (intern_str::CaseInsensitive("x"), 567),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Jrd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 569)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Jscalendar), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lendar"), 571)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::JsonPatch), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ch"), 573)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::JsonSeq), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("pat"), 574),
                        (intern_str::CaseInsensitive("seq"), 575),
                    ],
                    Some(Subtype::Json),
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ca"), 572),
                        (intern_str::CaseInsensitive("on"), 576),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::JwkSet), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("set"), 578)],
                    Some(Subtype::Jwk),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Jwt), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("k"), 579),
                        (intern_str::CaseInsensitive("t"), 580),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Jxl), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::JxrA), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::JxrS), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 583),
                        (intern_str::CaseInsensitive("s"), 584),
                    ],
                    Some(Subtype::Jxr),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Jxsc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Jxsi), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Jxss), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Jxsv), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 586),
                        (intern_str::CaseInsensitive("i"), 587),
                        (intern_str::CaseInsensitive("s"), 588),
                        (intern_str::CaseInsensitive("v"), 589),
                    ],
                    Some(Subtype::Jxs),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("l"), 582),
                        (intern_str::CaseInsensitive("r"), 585),
                        (intern_str::CaseInsensitive("s"), 590),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 551),
                        (intern_str::CaseInsensitive("c"), 553),
                        (intern_str::CaseInsensitive("f"), 555),
                        (intern_str::CaseInsensitive("l"), 557),
                        (intern_str::CaseInsensitive("o"), 559),
                        (intern_str::CaseInsensitive("p"), 568),
                        (intern_str::CaseInsensitive("r"), 570),
                        (intern_str::CaseInsensitive("s"), 577),
                        (intern_str::CaseInsensitive("w"), 581),
                        (intern_str::CaseInsensitive("x"), 591),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::KpmlRequest), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::KpmlResponse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 594)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("quest"), 593),
                        (intern_str::CaseInsensitive("spons"), 595),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lre"), 596)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Ktx2), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("2"), 598)],
                    Some(Subtype::Ktx),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("pm"), 597),
                        (intern_str::CaseInsensitive("tx"), 599),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::L16), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("6"), 601)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::L20), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::L24), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("0"), 603),
                        (intern_str::CaseInsensitive("4"), 604),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::L8), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Ld), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Lgr), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 608)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::LinkFormat), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("nkformat"), 610)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::LoadControl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("control"), 612)], None, 0, 7),
                intern_str::Node::new(&[], Some(Subtype::Lostsync), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sync"), 614)],
                    Some(Subtype::Lost),
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ad"), 613),
                        (intern_str::CaseInsensitive("st"), 615),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Lpc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Lpf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 617),
                        (intern_str::CaseInsensitive("f"), 618),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Lxf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 620)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 602),
                        (intern_str::CaseInsensitive("2"), 605),
                        (intern_str::CaseInsensitive("8"), 606),
                        (intern_str::CaseInsensitive("d"), 607),
                        (intern_str::CaseInsensitive("g"), 609),
                        (intern_str::CaseInsensitive("i"), 611),
                        (intern_str::CaseInsensitive("o"), 616),
                        (intern_str::CaseInsensitive("p"), 619),
                        (intern_str::CaseInsensitive("x"), 621),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::M3g), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 623)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MacBinhex40), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("0"), 625)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MacCompactpro), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pro"), 627)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Macwriteii), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("binhex4"), 626),
                        (intern_str::CaseInsensitive("compact"), 628),
                        (intern_str::CaseInsensitive("writeii"), 629),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mads), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 631)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Manifest), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ifest"), 633)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Marcxml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xml"), 635)],
                    Some(Subtype::Marc),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Markdown), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("down"), 637)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 636),
                        (intern_str::CaseInsensitive("k"), 638),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mathematica), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("atica"), 640)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::MathmlContent), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MathmlPresentation), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ation"), 643)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("content"), 642),
                        (intern_str::CaseInsensitive("present"), 644),
                    ],
                    Some(Subtype::Mathml),
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("em"), 641),
                        (intern_str::CaseInsensitive("ml"), 645),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("h"), 646)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 630),
                        (intern_str::CaseInsensitive("d"), 632),
                        (intern_str::CaseInsensitive("n"), 634),
                        (intern_str::CaseInsensitive("r"), 639),
                        (intern_str::CaseInsensitive("t"), 647),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::MbmsAssociatedProcedureDescription), 0, 1),
                intern_str::Node::new(
                    &[(
                        intern_str::CaseInsensitive("sociatedproceduredescription"),
                        649,
                    )],
                    None,
                    0,
                    28,
                ),
                intern_str::Node::new(&[], Some(Subtype::MbmsDeregister), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("register"), 651)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::MbmsEnvelope), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("velope"), 653)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::MbmsMskResponse), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("response"), 655)],
                    Some(Subtype::MbmsMsk),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("k"), 656)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MbmsProtectionDescription), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("otectiondescription"), 658)],
                    None,
                    0,
                    19,
                ),
                intern_str::Node::new(&[], Some(Subtype::MbmsReceptionReport), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nreport"), 660)], None, 0, 7),
                intern_str::Node::new(&[], Some(Subtype::MbmsRegisterResponse), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("response"), 662)],
                    Some(Subtype::MbmsRegister),
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ceptio"), 661),
                        (intern_str::CaseInsensitive("gister"), 663),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::MbmsSchedule), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("hedule"), 665)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::MbmsUserServiceDescription), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("erservicedescription"), 667)],
                    None,
                    0,
                    20,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("as"), 650),
                        (intern_str::CaseInsensitive("de"), 652),
                        (intern_str::CaseInsensitive("en"), 654),
                        (intern_str::CaseInsensitive("ms"), 657),
                        (intern_str::CaseInsensitive("pr"), 659),
                        (intern_str::CaseInsensitive("re"), 664),
                        (intern_str::CaseInsensitive("sc"), 666),
                        (intern_str::CaseInsensitive("us"), 668),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mbox), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ms"), 669),
                        (intern_str::CaseInsensitive("ox"), 670),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::MediaControl), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MediaPolicyDataset), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ataset"), 673)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Mediaservercontrol), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ontrol"), 675)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("control"), 672),
                        (intern_str::CaseInsensitive("policyd"), 674),
                        (intern_str::CaseInsensitive("serverc"), 676),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ia"), 677)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Melp1200), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("0"), 679)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Melp2400), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("0"), 681)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Melp600), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("120"), 680),
                        (intern_str::CaseInsensitive("240"), 682),
                        (intern_str::CaseInsensitive("600"), 683),
                    ],
                    Some(Subtype::Melp),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 684)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MergePatch), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("gepatch"), 686)], None, 0, 7),
                intern_str::Node::new(&[], Some(Subtype::Mesh), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("h"), 688)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Metalink4), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("link4"), 690)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Mets), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 691),
                        (intern_str::CaseInsensitive("s"), 692),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 678),
                        (intern_str::CaseInsensitive("l"), 685),
                        (intern_str::CaseInsensitive("r"), 687),
                        (intern_str::CaseInsensitive("s"), 689),
                        (intern_str::CaseInsensitive("t"), 693),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mf4), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("4"), 695)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Mhas), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("as"), 697)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Mikey), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("y"), 699)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Mipc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MissingBlocks), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ingblocks"), 702)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mixed), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 704)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Mizar), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 706)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ke"), 700),
                        (intern_str::CaseInsensitive("pc"), 701),
                        (intern_str::CaseInsensitive("ss"), 703),
                        (intern_str::CaseInsensitive("xe"), 705),
                        (intern_str::CaseInsensitive("za"), 707),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mj2), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("2"), 709)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MmtAei), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MmtUsd), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("aei"), 711),
                        (intern_str::CaseInsensitive("usd"), 712),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 713)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MobileXmf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lexmf"), 715)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Mods), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MosskeyData), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ata"), 718)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::MosskeyRequest), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("equest"), 720)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::MossKeys), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 719),
                        (intern_str::CaseInsensitive("r"), 721),
                        (intern_str::CaseInsensitive("s"), 722),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::MossSignature), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nature"), 724)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("key"), 723),
                        (intern_str::CaseInsensitive("sig"), 725),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bi"), 716),
                        (intern_str::CaseInsensitive("ds"), 717),
                        (intern_str::CaseInsensitive("ss"), 726),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mp1s), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 728)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Mp21), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Mp2p), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Mp2t), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 730),
                        (intern_str::CaseInsensitive("p"), 731),
                        (intern_str::CaseInsensitive("t"), 732),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mp4aLatm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tm"), 734)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Mp4vEs), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ala"), 735),
                        (intern_str::CaseInsensitive("ves"), 736),
                    ],
                    Some(Subtype::Mp4),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::MpaRobust), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("robust"), 738)],
                    Some(Subtype::Mpa),
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mpeg4Generic), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eric"), 740)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Mpeg4IodXmt), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xmt"), 742)],
                    Some(Subtype::Mpeg4Iod),
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gen"), 741),
                        (intern_str::CaseInsensitive("iod"), 743),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mpegurl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rl"), 745)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("4"), 744),
                        (intern_str::CaseInsensitive("u"), 746),
                    ],
                    Some(Subtype::Mpeg),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 747)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Mpv), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 729),
                        (intern_str::CaseInsensitive("2"), 733),
                        (intern_str::CaseInsensitive("4"), 737),
                        (intern_str::CaseInsensitive("a"), 739),
                        (intern_str::CaseInsensitive("e"), 748),
                        (intern_str::CaseInsensitive("v"), 749),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::MrbConsumer), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 751)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MrbPublish), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("consume"), 752),
                        (intern_str::CaseInsensitive("publish"), 753),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("b"), 754)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Msaccess), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ccess"), 756)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::MscIvr), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MscMixer), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("er"), 759)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ivr"), 758),
                        (intern_str::CaseInsensitive("mix"), 760),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Msword), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ord"), 762)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 757),
                        (intern_str::CaseInsensitive("c"), 761),
                        (intern_str::CaseInsensitive("w"), 763),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mtl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 765)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Mud), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Multilingual), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::MultipartCore), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 769)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lingual"), 768),
                        (intern_str::CaseInsensitive("partcor"), 770),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ti"), 771)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 767),
                        (intern_str::CaseInsensitive("l"), 772),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Mxf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 774)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 624),
                        (intern_str::CaseInsensitive("a"), 648),
                        (intern_str::CaseInsensitive("b"), 671),
                        (intern_str::CaseInsensitive("e"), 694),
                        (intern_str::CaseInsensitive("f"), 696),
                        (intern_str::CaseInsensitive("h"), 698),
                        (intern_str::CaseInsensitive("i"), 708),
                        (intern_str::CaseInsensitive("j"), 710),
                        (intern_str::CaseInsensitive("m"), 714),
                        (intern_str::CaseInsensitive("o"), 727),
                        (intern_str::CaseInsensitive("p"), 750),
                        (intern_str::CaseInsensitive("r"), 755),
                        (intern_str::CaseInsensitive("s"), 764),
                        (intern_str::CaseInsensitive("t"), 766),
                        (intern_str::CaseInsensitive("u"), 773),
                        (intern_str::CaseInsensitive("x"), 775),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::N3), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Naplps), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Nasdata), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 779)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("plps"), 778),
                        (intern_str::CaseInsensitive("sdat"), 780),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::NewsCheckgroups), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ps"), 782)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::NewsGroupinfo), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::NewsTransmission), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ion"), 785)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("checkgrou"), 783),
                        (intern_str::CaseInsensitive("groupinfo"), 784),
                        (intern_str::CaseInsensitive("transmiss"), 786),
                    ],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ws"), 787)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Nlsml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sml"), 789)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Node), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("de"), 791)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::NQuads), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("uads"), 793)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Nss), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 795)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::NTriples), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("riples"), 797)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Nv), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 777),
                        (intern_str::CaseInsensitive("a"), 781),
                        (intern_str::CaseInsensitive("e"), 788),
                        (intern_str::CaseInsensitive("l"), 790),
                        (intern_str::CaseInsensitive("o"), 792),
                        (intern_str::CaseInsensitive("q"), 794),
                        (intern_str::CaseInsensitive("s"), 796),
                        (intern_str::CaseInsensitive("t"), 798),
                        (intern_str::CaseInsensitive("v"), 799),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::OauthAuthzReq), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("uthauthzreq"), 801)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::Obj), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::ObliviousDnsMessage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iviousdnsmessage"), 804)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("j"), 803),
                        (intern_str::CaseInsensitive("l"), 805),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::OcspRequest), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::OcspResponse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 808)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("quest"), 807),
                        (intern_str::CaseInsensitive("spons"), 809),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::OctetStream), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tream"), 811)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("spre"), 810),
                        (intern_str::CaseInsensitive("tets"), 812),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::Oda), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Odm), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Odx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 814),
                        (intern_str::CaseInsensitive("m"), 815),
                        (intern_str::CaseInsensitive("x"), 816),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::OebpsPackage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("bpspackage"), 818)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::Ogg), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 820)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Onenote), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("enote"), 822)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::OpcNodeset), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("odeset"), 824)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Opus), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cn"), 825),
                        (intern_str::CaseInsensitive("us"), 826),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Oscore), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("core"), 828)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Otf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 830)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Oxps), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ps"), 832)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 802),
                        (intern_str::CaseInsensitive("b"), 806),
                        (intern_str::CaseInsensitive("c"), 813),
                        (intern_str::CaseInsensitive("d"), 817),
                        (intern_str::CaseInsensitive("e"), 819),
                        (intern_str::CaseInsensitive("g"), 821),
                        (intern_str::CaseInsensitive("n"), 823),
                        (intern_str::CaseInsensitive("p"), 827),
                        (intern_str::CaseInsensitive("s"), 829),
                        (intern_str::CaseInsensitive("t"), 831),
                        (intern_str::CaseInsensitive("x"), 833),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::P21), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::P2pOverlay), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("overlay"), 836)], None, 0, 7),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 835),
                        (intern_str::CaseInsensitive("p"), 837),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Parallel), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Parameters), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rs"), 840)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("llel"), 839),
                        (intern_str::CaseInsensitive("mete"), 841),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::Parityfec), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tyfec"), 843)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Partial), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ial"), 845)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 842),
                        (intern_str::CaseInsensitive("i"), 844),
                        (intern_str::CaseInsensitive("t"), 846),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Passport), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sport"), 848)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::PatchOpsError), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("chopserror"), 850)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("r"), 847),
                        (intern_str::CaseInsensitive("s"), 849),
                        (intern_str::CaseInsensitive("t"), 851),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::PcmaWb), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wb"), 853)],
                    Some(Subtype::Pcma),
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::PcmuWb), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wb"), 855)],
                    Some(Subtype::Pcmu),
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 854),
                        (intern_str::CaseInsensitive("u"), 856),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 857)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Pdf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Pdx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 859),
                        (intern_str::CaseInsensitive("x"), 860),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::PemCertificateChain), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("mcertificatechain"), 862)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::PgpEncrypted), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ypted"), 864)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::PgpKeys), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::PgpSignature), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ature"), 867)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("encr"), 865),
                        (intern_str::CaseInsensitive("keys"), 866),
                        (intern_str::CaseInsensitive("sign"), 868),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 869)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::PicsRules), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rules"), 871)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::PidfDiff), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("diff"), 873)],
                    Some(Subtype::Pidf),
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cs"), 872),
                        (intern_str::CaseInsensitive("df"), 874),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Pkcs10), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Pkcs12), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("0"), 876),
                        (intern_str::CaseInsensitive("2"), 877),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Pkcs7Mime), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Pkcs7Signature), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ature"), 880)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mime"), 879),
                        (intern_str::CaseInsensitive("sign"), 881),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::Pkcs8Encrypted), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("encrypted"), 883)],
                    Some(Subtype::Pkcs8),
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 878),
                        (intern_str::CaseInsensitive("7"), 882),
                        (intern_str::CaseInsensitive("8"), 884),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::PkixAttrCert), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ttrcert"), 886)], None, 0, 7),
                intern_str::Node::new(&[], Some(Subtype::PkixCert), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 888)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Pkixcmp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::PkixCrl), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("er"), 889),
                        (intern_str::CaseInsensitive("mp"), 890),
                        (intern_str::CaseInsensitive("rl"), 891),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::PkixPkipath), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("kipath"), 893)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 887),
                        (intern_str::CaseInsensitive("c"), 892),
                        (intern_str::CaseInsensitive("p"), 894),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cs"), 885),
                        (intern_str::CaseInsensitive("ix"), 895),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Plain), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("in"), 897)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Pls), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 898),
                        (intern_str::CaseInsensitive("s"), 899),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Png), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 901)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::PocSettings), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ings"), 903)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Pointer), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Postscript), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ipt"), 906)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("csett"), 904),
                        (intern_str::CaseInsensitive("inter"), 905),
                        (intern_str::CaseInsensitive("stscr"), 907),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::PpspTracker), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sptracker"), 909)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::Prc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Problem), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::ProvenanceNotation), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("notation"), 913)],
                    Some(Subtype::Provenance),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nce"), 914)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("blem"), 912),
                        (intern_str::CaseInsensitive("vena"), 915),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::PrsAlvestrandTitraxSheet), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lvestrandtitraxsheet"), 917)],
                    None,
                    0,
                    20,
                ),
                intern_str::Node::new(&[], Some(Subtype::PrsBtif), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tif"), 919)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::PrsCww), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::PrsCyn), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ww"), 921),
                        (intern_str::CaseInsensitive("yn"), 922),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::PrsFallensteinRst), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("allensteinrst"), 924)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::PrsHpub), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pub"), 926)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::PrsLinesTag), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("inestag"), 928)], None, 0, 7),
                intern_str::Node::new(&[], Some(Subtype::PrsNprend), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("prend"), 930)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::PrsPlucker), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cker"), 932)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::PrsPropLogic), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("plogic"), 934)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::PrsPti), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lu"), 933),
                        (intern_str::CaseInsensitive("ro"), 935),
                        (intern_str::CaseInsensitive("ti"), 936),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::PrsRdfXmlCrypt), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("dfxmlcrypt"), 938)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::PrsSid), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("id"), 940)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::PrsXsf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sf"), 942)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 918),
                        (intern_str::CaseInsensitive("b"), 920),
                        (intern_str::CaseInsensitive("c"), 923),
                        (intern_str::CaseInsensitive("f"), 925),
                        (intern_str::CaseInsensitive("h"), 927),
                        (intern_str::CaseInsensitive("l"), 929),
                        (intern_str::CaseInsensitive("n"), 931),
                        (intern_str::CaseInsensitive("p"), 937),
                        (intern_str::CaseInsensitive("r"), 939),
                        (intern_str::CaseInsensitive("s"), 941),
                        (intern_str::CaseInsensitive("x"), 943),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 911),
                        (intern_str::CaseInsensitive("o"), 916),
                        (intern_str::CaseInsensitive("s"), 944),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Pskc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("kc"), 946)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Pvd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 948)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::PwgRaster), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("graster"), 950)], None, 0, 7),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 838),
                        (intern_str::CaseInsensitive("a"), 852),
                        (intern_str::CaseInsensitive("c"), 858),
                        (intern_str::CaseInsensitive("d"), 861),
                        (intern_str::CaseInsensitive("e"), 863),
                        (intern_str::CaseInsensitive("g"), 870),
                        (intern_str::CaseInsensitive("i"), 875),
                        (intern_str::CaseInsensitive("k"), 896),
                        (intern_str::CaseInsensitive("l"), 900),
                        (intern_str::CaseInsensitive("n"), 902),
                        (intern_str::CaseInsensitive("o"), 908),
                        (intern_str::CaseInsensitive("p"), 910),
                        (intern_str::CaseInsensitive("r"), 945),
                        (intern_str::CaseInsensitive("s"), 947),
                        (intern_str::CaseInsensitive("v"), 949),
                        (intern_str::CaseInsensitive("w"), 951),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Qcelp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 953)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Qsig), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Quicktime), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ktime"), 956)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cel"), 954),
                        (intern_str::CaseInsensitive("sig"), 955),
                        (intern_str::CaseInsensitive("uic"), 957),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Raptorfec), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("torfec"), 959)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Raw), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("p"), 960),
                        (intern_str::CaseInsensitive("w"), 961),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Rdap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 963)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Rdf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 964),
                        (intern_str::CaseInsensitive("f"), 965),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Red), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Reginfo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("info"), 968)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Related), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::RelaxNgCompactSyntax), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("compactsyntax"), 971)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ted"), 970),
                        (intern_str::CaseInsensitive("xng"), 972),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 973)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::RemotePrinting), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("oteprinting"), 975)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::Report), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Reputon), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("n"), 978)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ort"), 977),
                        (intern_str::CaseInsensitive("uto"), 979),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::ResourceListsDiff), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("diff"), 981)],
                    Some(Subtype::ResourceLists),
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ourcelists"), 982)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 967),
                        (intern_str::CaseInsensitive("g"), 969),
                        (intern_str::CaseInsensitive("l"), 974),
                        (intern_str::CaseInsensitive("m"), 976),
                        (intern_str::CaseInsensitive("p"), 980),
                        (intern_str::CaseInsensitive("s"), 983),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Rfc822Headers), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("headers"), 985)],
                    Some(Subtype::Rfc822),
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("822"), 986)],
                    Some(Subtype::Rfc),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 987)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Riscos), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("scos"), 989)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Rlmi), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::RlsServices), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ervices"), 992)], None, 0, 7),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mi"), 991),
                        (intern_str::CaseInsensitive("ss"), 993),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::RouteApd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::RouteSTsid), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("id"), 996)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::RouteUsd), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("apd"), 995),
                        (intern_str::CaseInsensitive("sts"), 997),
                        (intern_str::CaseInsensitive("usd"), 998),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ute"), 999)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::RpkiGhostbusters), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("stbusters"), 1001)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::RpkiManifest), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ifest"), 1003)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::RpkiPublication), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lication"), 1005)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::RpkiRoa), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::RpkiUpdown), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("own"), 1008)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gho"), 1002),
                        (intern_str::CaseInsensitive("man"), 1004),
                        (intern_str::CaseInsensitive("pub"), 1006),
                        (intern_str::CaseInsensitive("roa"), 1007),
                        (intern_str::CaseInsensitive("upd"), 1009),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ki"), 1010)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Rtf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::RtpEncAescm128), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("escm128"), 1013)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::Rtploopback), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("back"), 1015)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::RtpMidi), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("enca"), 1014),
                        (intern_str::CaseInsensitive("loop"), 1016),
                        (intern_str::CaseInsensitive("midi"), 1017),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::Rtx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 1012),
                        (intern_str::CaseInsensitive("p"), 1018),
                        (intern_str::CaseInsensitive("x"), 1019),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 962),
                        (intern_str::CaseInsensitive("d"), 966),
                        (intern_str::CaseInsensitive("e"), 984),
                        (intern_str::CaseInsensitive("f"), 988),
                        (intern_str::CaseInsensitive("i"), 990),
                        (intern_str::CaseInsensitive("l"), 994),
                        (intern_str::CaseInsensitive("o"), 1000),
                        (intern_str::CaseInsensitive("p"), 1011),
                        (intern_str::CaseInsensitive("t"), 1020),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Samlassertion), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("n"), 1022)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Samlmetadata), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("assertio"), 1023),
                        (intern_str::CaseInsensitive("metadata"), 1024),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::SarifExternalProperties), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("externalproperties"), 1026)],
                    Some(Subtype::Sarif),
                    0,
                    18,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 1027)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ml"), 1025),
                        (intern_str::CaseInsensitive("ri"), 1028),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Sbe), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Sbml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 1031)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 1030),
                        (intern_str::CaseInsensitive("m"), 1032),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Scaip), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ip"), 1034)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Scim), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Scip), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("m"), 1036),
                        (intern_str::CaseInsensitive("p"), 1037),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::ScvpCvRequest), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::ScvpCvResponse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 1040)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("quest"), 1039),
                        (intern_str::CaseInsensitive("spons"), 1041),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::ScvpVpRequest), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::ScvpVpResponse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 1044)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("quest"), 1043),
                        (intern_str::CaseInsensitive("spons"), 1045),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cvre"), 1042),
                        (intern_str::CaseInsensitive("vpre"), 1046),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 1047)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1035),
                        (intern_str::CaseInsensitive("i"), 1038),
                        (intern_str::CaseInsensitive("v"), 1048),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Sdp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 1050)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Secevent), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("event"), 1052)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::SenmlEtch), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("h"), 1054)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::SenmlExi), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("tc"), 1055),
                        (intern_str::CaseInsensitive("xi"), 1056),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("e"), 1057)],
                    Some(Subtype::Senml),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::SensmlExi), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("exi"), 1059)],
                    Some(Subtype::Sensml),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 1060)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ml"), 1058),
                        (intern_str::CaseInsensitive("sm"), 1061),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::SepExi), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("exi"), 1063)],
                    Some(Subtype::Sep),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::SessionInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sioninfo"), 1065)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::SetPaymentInitiation), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("initiation"), 1067)],
                    Some(Subtype::SetPayment),
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::SetRegistrationInitiation), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("initiation"), 1069)],
                    Some(Subtype::SetRegistration),
                    0,
                    10,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ation"), 1070)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("payment"), 1068),
                        (intern_str::CaseInsensitive("registr"), 1071),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 1053),
                        (intern_str::CaseInsensitive("n"), 1062),
                        (intern_str::CaseInsensitive("p"), 1064),
                        (intern_str::CaseInsensitive("s"), 1066),
                        (intern_str::CaseInsensitive("t"), 1072),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Sfnt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nt"), 1074)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::SgmlOpenCatalog), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("opencatalog"), 1076)],
                    Some(Subtype::Sgml),
                    0,
                    11,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 1077)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Shaclc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("clc"), 1079)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Shex), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 1081)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Shf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::SHttp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tp"), 1084)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1080),
                        (intern_str::CaseInsensitive("e"), 1082),
                        (intern_str::CaseInsensitive("f"), 1083),
                        (intern_str::CaseInsensitive("t"), 1085),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Sieve), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ve"), 1087)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Signed), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ned"), 1089)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::SimpleFilter), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::SimpleMessageSummary), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("esummary"), 1092)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::SimpleSymbolContainer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("container"), 1094)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("filter"), 1091),
                        (intern_str::CaseInsensitive("messag"), 1093),
                        (intern_str::CaseInsensitive("symbol"), 1095),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ple"), 1096)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Sipc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Sipfrag), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rag"), 1099)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 1098),
                        (intern_str::CaseInsensitive("f"), 1100),
                    ],
                    Some(Subtype::Sip),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 1088),
                        (intern_str::CaseInsensitive("g"), 1090),
                        (intern_str::CaseInsensitive("m"), 1097),
                        (intern_str::CaseInsensitive("p"), 1101),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Slate), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ate"), 1103)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Smil), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 1105)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Smpte291), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Smpte292m), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 1108)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 1107),
                        (intern_str::CaseInsensitive("2"), 1109),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Smpte336m), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("6m"), 1111)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("29"), 1110),
                        (intern_str::CaseInsensitive("33"), 1112),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("te"), 1113)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Smv0), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::SmvQcp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cp"), 1116)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("0"), 1115),
                        (intern_str::CaseInsensitive("q"), 1117),
                    ],
                    Some(Subtype::Smv),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 1106),
                        (intern_str::CaseInsensitive("p"), 1114),
                        (intern_str::CaseInsensitive("v"), 1118),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Soap), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Socket), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("et"), 1121)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Sofa), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ap"), 1120),
                        (intern_str::CaseInsensitive("ck"), 1122),
                        (intern_str::CaseInsensitive("fa"), 1123),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::SparqlQuery), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::SparqlResults), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ts"), 1126)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("query"), 1125),
                        (intern_str::CaseInsensitive("resul"), 1127),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ql"), 1128)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Spdx), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Speex), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 1131)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::SpiritsEvent), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("itsevent"), 1133)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::SpMidi), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("di"), 1135)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ar"), 1129),
                        (intern_str::CaseInsensitive("dx"), 1130),
                        (intern_str::CaseInsensitive("ee"), 1132),
                        (intern_str::CaseInsensitive("ir"), 1134),
                        (intern_str::CaseInsensitive("mi"), 1136),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Sql), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 1138)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Srgs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 1140)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Sru), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 1141),
                        (intern_str::CaseInsensitive("u"), 1142),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Ssml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 1144)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::StepXml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xml"), 1146)],
                    Some(Subtype::Step),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 1147)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Stix), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 1149)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Stl), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Strings), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ings"), 1152)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 1148),
                        (intern_str::CaseInsensitive("i"), 1150),
                        (intern_str::CaseInsensitive("l"), 1151),
                        (intern_str::CaseInsensitive("r"), 1153),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Svg), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 1155)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Swid), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("id"), 1157)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1029),
                        (intern_str::CaseInsensitive("b"), 1033),
                        (intern_str::CaseInsensitive("c"), 1049),
                        (intern_str::CaseInsensitive("d"), 1051),
                        (intern_str::CaseInsensitive("e"), 1073),
                        (intern_str::CaseInsensitive("f"), 1075),
                        (intern_str::CaseInsensitive("g"), 1078),
                        (intern_str::CaseInsensitive("h"), 1086),
                        (intern_str::CaseInsensitive("i"), 1102),
                        (intern_str::CaseInsensitive("l"), 1104),
                        (intern_str::CaseInsensitive("m"), 1119),
                        (intern_str::CaseInsensitive("o"), 1124),
                        (intern_str::CaseInsensitive("p"), 1137),
                        (intern_str::CaseInsensitive("q"), 1139),
                        (intern_str::CaseInsensitive("r"), 1143),
                        (intern_str::CaseInsensitive("s"), 1145),
                        (intern_str::CaseInsensitive("t"), 1154),
                        (intern_str::CaseInsensitive("v"), 1156),
                        (intern_str::CaseInsensitive("w"), 1158),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::T140c), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("c"), 1160)],
                    Some(Subtype::T140),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("40"), 1161)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::T38), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("8"), 1163)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::TabSeparatedValues), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eparatedvalues"), 1165)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::TampApexUpdateConfirm), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("confirm"), 1167)],
                    Some(Subtype::TampApexUpdate),
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pexupdate"), 1168)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::TampCommunityUpdateConfirm), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("confirm"), 1170)],
                    Some(Subtype::TampCommunityUpdate),
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ommunityupdate"), 1171)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::TampError), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rror"), 1173)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::TampSequenceAdjustConfirm), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("confirm"), 1175)],
                    Some(Subtype::TampSequenceAdjust),
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ceadjust"), 1176)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::TampStatusQuery), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::TampStatusResponse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nse"), 1179)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("query"), 1178),
                        (intern_str::CaseInsensitive("respo"), 1180),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("equen"), 1177),
                        (intern_str::CaseInsensitive("tatus"), 1181),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::TampUpdateConfirm), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("confirm"), 1183)],
                    Some(Subtype::TampUpdate),
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pdate"), 1184)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1169),
                        (intern_str::CaseInsensitive("c"), 1172),
                        (intern_str::CaseInsensitive("e"), 1174),
                        (intern_str::CaseInsensitive("s"), 1182),
                        (intern_str::CaseInsensitive("u"), 1185),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Taxii), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 1187)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bs"), 1166),
                        (intern_str::CaseInsensitive("mp"), 1186),
                        (intern_str::CaseInsensitive("xi"), 1188),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Td), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Tei), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::TelephoneEvent), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ephoneevent"), 1192)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::TetraAcelpBb), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("bb"), 1194)],
                    Some(Subtype::TetraAcelp),
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lp"), 1195)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::TetraIsi), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ace"), 1196),
                        (intern_str::CaseInsensitive("isi"), 1197),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ra"), 1198)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Texmacs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("macs"), 1200)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 1191),
                        (intern_str::CaseInsensitive("l"), 1193),
                        (intern_str::CaseInsensitive("t"), 1199),
                        (intern_str::CaseInsensitive("x"), 1201),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Thraud), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("raud"), 1203)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::TiffFx), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("fx"), 1205)],
                    Some(Subtype::Tiff),
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::TimestampedData), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 1207)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::TimestampQuery), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::TimestampReply), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("eddat"), 1208),
                        (intern_str::CaseInsensitive("query"), 1209),
                        (intern_str::CaseInsensitive("reply"), 1210),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("stamp"), 1211)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ff"), 1206),
                        (intern_str::CaseInsensitive("me"), 1212),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Tlsrpt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("srpt"), 1214)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Tnauthlist), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("authlist"), 1216)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::TokenIntrospection), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("nintrospection"), 1218)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::Tone), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ke"), 1219),
                        (intern_str::CaseInsensitive("ne"), 1220),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::TrackingStatus), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ckingstatus"), 1222)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::TrickleIceSdpfrag), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("kleicesdpfrag"), 1224)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::Trig), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 1225),
                        (intern_str::CaseInsensitive("g"), 1226),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Troff), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ff"), 1228)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1223),
                        (intern_str::CaseInsensitive("i"), 1227),
                        (intern_str::CaseInsensitive("o"), 1229),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Tsvcis), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("vcis"), 1231)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Ttf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Ttml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 1234)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 1233),
                        (intern_str::CaseInsensitive("m"), 1235),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Turtle), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rtle"), 1237)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::TveTrigger), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("etrigger"), 1239)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::TzifLeap), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("leap"), 1241)],
                    Some(Subtype::Tzif),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("if"), 1242)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 1162),
                        (intern_str::CaseInsensitive("3"), 1164),
                        (intern_str::CaseInsensitive("a"), 1189),
                        (intern_str::CaseInsensitive("d"), 1190),
                        (intern_str::CaseInsensitive("e"), 1202),
                        (intern_str::CaseInsensitive("h"), 1204),
                        (intern_str::CaseInsensitive("i"), 1213),
                        (intern_str::CaseInsensitive("l"), 1215),
                        (intern_str::CaseInsensitive("n"), 1217),
                        (intern_str::CaseInsensitive("o"), 1221),
                        (intern_str::CaseInsensitive("r"), 1230),
                        (intern_str::CaseInsensitive("s"), 1232),
                        (intern_str::CaseInsensitive("t"), 1236),
                        (intern_str::CaseInsensitive("u"), 1238),
                        (intern_str::CaseInsensitive("v"), 1240),
                        (intern_str::CaseInsensitive("z"), 1243),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::U3d), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 1245)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Uemclip), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mclip"), 1247)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Ulpfec), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pfec"), 1249)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::UrcGrpsheet), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::UrcRessheet), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::UrcTargetdesc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sc"), 1253)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::UrcUisocketdesc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("desc"), 1255)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("grpsheet"), 1251),
                        (intern_str::CaseInsensitive("ressheet"), 1252),
                        (intern_str::CaseInsensitive("targetde"), 1254),
                        (intern_str::CaseInsensitive("uisocket"), 1256),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::UriList), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("list"), 1258)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 1257),
                        (intern_str::CaseInsensitive("i"), 1259),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Usac), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ac"), 1261)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 1246),
                        (intern_str::CaseInsensitive("e"), 1248),
                        (intern_str::CaseInsensitive("l"), 1250),
                        (intern_str::CaseInsensitive("r"), 1260),
                        (intern_str::CaseInsensitive("s"), 1262),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vc1), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vc2), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vcard), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rd"), 1266)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 1264),
                        (intern_str::CaseInsensitive("2"), 1265),
                        (intern_str::CaseInsensitive("a"), 1267),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vdvi), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("vi"), 1269)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Vemmi), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mmi"), 1271)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VmrWb), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rwb"), 1273)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Vnd1000mindsDecisionModel), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("000mindsdecisionmodel"), 1275)],
                    None,
                    0,
                    21,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gpp2Bcmcsinfo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("csinfo"), 1277)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gpp2Sms), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gpp2Tcap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 1280)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bcm"), 1278),
                        (intern_str::CaseInsensitive("sms"), 1279),
                        (intern_str::CaseInsensitive("tca"), 1281),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gpp5gnas), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("gnas"), 1283)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppAccessTransferEvents), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ccesstransferevents"), 1285)],
                    None,
                    0,
                    19,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppBsf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sf"), 1287)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppGmop), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppGtpc), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mop"), 1289),
                        (intern_str::CaseInsensitive("tpc"), 1290),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppInterworkingData), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rworkingdata"), 1292)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppIufp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("nte"), 1293),
                        (intern_str::CaseInsensitive("ufp"), 1294),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppLpp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pp"), 1296)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcdataAffiliationCommand), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ffiliationcommand"), 1298)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcdataInfo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nfo"), 1300)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcdataPayload), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ayload"), 1302)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcdataServiceConfig), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("fig"), 1304)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcdataSignalling), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ervicecon"), 1305),
                        (intern_str::CaseInsensitive("ignalling"), 1306),
                    ],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcdataUeConfig), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcdataUserProfile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ile"), 1309)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("econfig"), 1308),
                        (intern_str::CaseInsensitive("serprof"), 1310),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1299),
                        (intern_str::CaseInsensitive("i"), 1301),
                        (intern_str::CaseInsensitive("p"), 1303),
                        (intern_str::CaseInsensitive("s"), 1307),
                        (intern_str::CaseInsensitive("u"), 1311),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 1312)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttAffiliationCommand), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ffiliationcommand"), 1314)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttFloorRequest), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("loorrequest"), 1316)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttInfo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nfo"), 1318)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttLocationInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ocationinfo"), 1320)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttMbmsUsageInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("bmsusageinfo"), 1322)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttServiceConfig), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("econfig"), 1324)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttSigned), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ervic"), 1325),
                        (intern_str::CaseInsensitive("igned"), 1326),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttUeConfig), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttUeInitConfig), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nfig"), 1329)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("config"), 1328),
                        (intern_str::CaseInsensitive("initco"), 1330),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcpttUserProfile), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("erprofile"), 1332)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 1331),
                        (intern_str::CaseInsensitive("s"), 1333),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1315),
                        (intern_str::CaseInsensitive("f"), 1317),
                        (intern_str::CaseInsensitive("i"), 1319),
                        (intern_str::CaseInsensitive("l"), 1321),
                        (intern_str::CaseInsensitive("m"), 1323),
                        (intern_str::CaseInsensitive("s"), 1327),
                        (intern_str::CaseInsensitive("u"), 1334),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcSignallingEar), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("nallingear"), 1336)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcvideoAffiliationCommand), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ffiliationcommand"), 1338)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcvideoInfo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nfo"), 1340)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcvideoLocationInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ocationinfo"), 1342)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcvideoMbmsUsageInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("bmsusageinfo"), 1344)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcvideoServiceConfig), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("erviceconfig"), 1346)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcvideoTransmissionRequest), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ransmissionrequest"), 1348)],
                    None,
                    0,
                    18,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcvideoUeConfig), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMcvideoUserProfile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ile"), 1351)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("econfig"), 1350),
                        (intern_str::CaseInsensitive("serprof"), 1352),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1339),
                        (intern_str::CaseInsensitive("i"), 1341),
                        (intern_str::CaseInsensitive("l"), 1343),
                        (intern_str::CaseInsensitive("m"), 1345),
                        (intern_str::CaseInsensitive("s"), 1347),
                        (intern_str::CaseInsensitive("t"), 1349),
                        (intern_str::CaseInsensitive("u"), 1353),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eo"), 1354)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dat"), 1313),
                        (intern_str::CaseInsensitive("ptt"), 1335),
                        (intern_str::CaseInsensitive("sig"), 1337),
                        (intern_str::CaseInsensitive("vid"), 1355),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppMidCall), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dcall"), 1357)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 1356),
                        (intern_str::CaseInsensitive("i"), 1358),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppNgap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("gap"), 1360)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppPfcp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppPicBwLarge), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ge"), 1363)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppPicBwSmall), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ll"), 1365)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppPicBwVar), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lar"), 1364),
                        (intern_str::CaseInsensitive("sma"), 1366),
                        (intern_str::CaseInsensitive("var"), 1367),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("w"), 1368)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppProsePc3ch), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pc3ch"), 1370)],
                    Some(Subtype::Vnd3gppProse),
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 1371)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("fcp"), 1362),
                        (intern_str::CaseInsensitive("icb"), 1369),
                        (intern_str::CaseInsensitive("ros"), 1372),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppS1ap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 1374)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppSms), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppSrvccExt), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppSrvccInfo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 1378)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ext"), 1377),
                        (intern_str::CaseInsensitive("inf"), 1379),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cc"), 1380)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppStateAndEventInfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("teandeventinfo"), 1382)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1a"), 1375),
                        (intern_str::CaseInsensitive("ms"), 1376),
                        (intern_str::CaseInsensitive("rv"), 1381),
                        (intern_str::CaseInsensitive("ta"), 1383),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppUssd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ssd"), 1385)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Vnd3gppV2xLocalServiceInformation), 0, 1),
                intern_str::Node::new(
                    &[(
                        intern_str::CaseInsensitive("2xlocalserviceinformation"),
                        1387,
                    )],
                    None,
                    0,
                    25,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 1282),
                        (intern_str::CaseInsensitive("5"), 1284),
                        (intern_str::CaseInsensitive("a"), 1286),
                        (intern_str::CaseInsensitive("b"), 1288),
                        (intern_str::CaseInsensitive("g"), 1291),
                        (intern_str::CaseInsensitive("i"), 1295),
                        (intern_str::CaseInsensitive("l"), 1297),
                        (intern_str::CaseInsensitive("m"), 1359),
                        (intern_str::CaseInsensitive("n"), 1361),
                        (intern_str::CaseInsensitive("p"), 1373),
                        (intern_str::CaseInsensitive("s"), 1384),
                        (intern_str::CaseInsensitive("u"), 1386),
                        (intern_str::CaseInsensitive("v"), 1388),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3lightssoftwareImagescal), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("htssoftwareimagescal"), 1390)],
                    None,
                    0,
                    20,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd3mPostItNotes), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("stitnotes"), 1392)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gpp"), 1389),
                        (intern_str::CaseInsensitive("lig"), 1391),
                        (intern_str::CaseInsensitive("mpo"), 1393),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vnd4sb), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sb"), 1395)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndAbc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 1397)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAccpacSimplyAso), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAccpacSimplyImp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("aso"), 1399),
                        (intern_str::CaseInsensitive("imp"), 1400),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("csimply"), 1401)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAcucobol), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 1403)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAcucorp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bo"), 1404),
                        (intern_str::CaseInsensitive("rp"), 1405),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cpa"), 1402),
                        (intern_str::CaseInsensitive("uco"), 1406),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAdobeFlashMovie), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("shmovie"), 1408)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAdobeFormscentralFcdt), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("mscentralfcdt"), 1410)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAdobeFxp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("la"), 1409),
                        (intern_str::CaseInsensitive("or"), 1411),
                        (intern_str::CaseInsensitive("xp"), 1412),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAdobePartialUpload), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("load"), 1414)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndAdobePhotoshop), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("artialup"), 1415),
                        (intern_str::CaseInsensitive("hotoshop"), 1416),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAdobeXdp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAdobeXfdf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 1419)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dp"), 1418),
                        (intern_str::CaseInsensitive("fd"), 1420),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 1413),
                        (intern_str::CaseInsensitive("p"), 1417),
                        (intern_str::CaseInsensitive("x"), 1421),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("obe"), 1422)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndAetherImp), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("therimp"), 1424)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcAfplinedataPagedef), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pagedef"), 1426)],
                    Some(Subtype::VndAfpcAfplinedata),
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nedata"), 1427)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcCmocaCmresource), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("cmresource"), 1429)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcFocaCharset), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("set"), 1431)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcFocaCodedfont), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 1433)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcFocaCodepage), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dfon"), 1434),
                        (intern_str::CaseInsensitive("page"), 1435),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("har"), 1432),
                        (intern_str::CaseInsensitive("ode"), 1436),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcModcaFormdef), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ormdef"), 1438)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcModcaMediummap), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ediummap"), 1440)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcModcaObjectcontainer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ontainer"), 1442)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcModcaOverlay), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bjectc"), 1443),
                        (intern_str::CaseInsensitive("verlay"), 1444),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAfpcModcaPagesegment), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("agesegment"), 1446)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 1439),
                        (intern_str::CaseInsensitive("m"), 1441),
                        (intern_str::CaseInsensitive("o"), 1445),
                        (intern_str::CaseInsensitive("p"), 1447),
                    ],
                    Some(Subtype::VndAfpcModca),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("afpli"), 1428),
                        (intern_str::CaseInsensitive("cmoca"), 1430),
                        (intern_str::CaseInsensitive("focac"), 1437),
                        (intern_str::CaseInsensitive("modca"), 1448),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pc"), 1449)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndAge), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 1451)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAhBarcode), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAheadSpace), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 1454)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("barcode"), 1453),
                        (intern_str::CaseInsensitive("eadspac"), 1455),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAirzipAcceleratorAzv), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("zv"), 1457)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndAirzipFilesecureAzf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAirzipFilesecureAzs), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 1459),
                        (intern_str::CaseInsensitive("s"), 1460),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("acceleratora"), 1458),
                        (intern_str::CaseInsensitive("filesecureaz"), 1461),
                    ],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rzip"), 1462)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndAmadeus), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAmazonMobi8Ebook), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("obi8ebook"), 1465)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("deus"), 1464),
                        (intern_str::CaseInsensitive("zonm"), 1466),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAmericandynamicsAcc), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ricandynamicsacc"), 1468)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAmigaAmi), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("gaami"), 1470)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndAmundsenMaze), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ndsenmaze"), 1472)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1467),
                        (intern_str::CaseInsensitive("e"), 1469),
                        (intern_str::CaseInsensitive("i"), 1471),
                        (intern_str::CaseInsensitive("u"), 1473),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAndroidOta), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAndroidPackageArchive), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("kagearchive"), 1476)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ota"), 1475),
                        (intern_str::CaseInsensitive("pac"), 1477),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("oid"), 1478)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndAnki), 0, 1),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndAnserWebCertificateIssueInitiation),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ion"), 1481)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndAnserWebFundsTransferInitiation), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("certificateissueinitiat"), 1482),
                        (intern_str::CaseInsensitive("fundstransferinitiation"), 1483),
                    ],
                    None,
                    0,
                    23,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rweb"), 1484)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndAntixGameComponent), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xgamecomponent"), 1486)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dr"), 1479),
                        (intern_str::CaseInsensitive("ki"), 1480),
                        (intern_str::CaseInsensitive("se"), 1485),
                        (intern_str::CaseInsensitive("ti"), 1487),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndApacheArrowFile), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndApacheArrowStream), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("am"), 1490)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("file"), 1489),
                        (intern_str::CaseInsensitive("stre"), 1491),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndApacheThriftBinary), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ry"), 1493)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndApacheThriftCompact), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("act"), 1495)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndApacheThriftJson), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bina"), 1494),
                        (intern_str::CaseInsensitive("comp"), 1496),
                        (intern_str::CaseInsensitive("json"), 1497),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 1498)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("arrow"), 1492),
                        (intern_str::CaseInsensitive("thrif"), 1499),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("che"), 1500)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndApi), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAplextorWarrp), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("extorwarrp"), 1503)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndApothekendeReservation), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("thekendereservation"), 1505)],
                    None,
                    0,
                    19,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAppleInstaller), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ller"), 1507)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndAppleKeynote), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("te"), 1509)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndAppleMpegurl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rl"), 1511)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndAppleNumbers), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rs"), 1513)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndApplePages), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("insta"), 1508),
                        (intern_str::CaseInsensitive("keyno"), 1510),
                        (intern_str::CaseInsensitive("mpegu"), 1512),
                        (intern_str::CaseInsensitive("numbe"), 1514),
                        (intern_str::CaseInsensitive("pages"), 1515),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("le"), 1516)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1501),
                        (intern_str::CaseInsensitive("i"), 1502),
                        (intern_str::CaseInsensitive("l"), 1504),
                        (intern_str::CaseInsensitive("o"), 1506),
                        (intern_str::CaseInsensitive("p"), 1517),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAristanetworksSwi), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("stanetworksswi"), 1519)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndArtisan), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndArtsquare), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("re"), 1522)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("isan"), 1521),
                        (intern_str::CaseInsensitive("squa"), 1523),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 1520),
                        (intern_str::CaseInsensitive("t"), 1524),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAsciiArt), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAstraeaSoftwareIota), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("oftwareiota"), 1527)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ciiart"), 1526),
                        (intern_str::CaseInsensitive("traeas"), 1528),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAudiograph), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ph"), 1530)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndAudiokoz), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gra"), 1531),
                        (intern_str::CaseInsensitive("koz"), 1532),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAutopackage), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ackage"), 1534)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dio"), 1533),
                        (intern_str::CaseInsensitive("top"), 1535),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndAvalon), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndAvistar), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 1538)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("alon"), 1537),
                        (intern_str::CaseInsensitive("ista"), 1539),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 1398),
                        (intern_str::CaseInsensitive("c"), 1407),
                        (intern_str::CaseInsensitive("d"), 1423),
                        (intern_str::CaseInsensitive("e"), 1425),
                        (intern_str::CaseInsensitive("f"), 1450),
                        (intern_str::CaseInsensitive("g"), 1452),
                        (intern_str::CaseInsensitive("h"), 1456),
                        (intern_str::CaseInsensitive("i"), 1463),
                        (intern_str::CaseInsensitive("m"), 1474),
                        (intern_str::CaseInsensitive("n"), 1488),
                        (intern_str::CaseInsensitive("p"), 1518),
                        (intern_str::CaseInsensitive("r"), 1525),
                        (intern_str::CaseInsensitive("s"), 1529),
                        (intern_str::CaseInsensitive("u"), 1536),
                        (intern_str::CaseInsensitive("v"), 1540),
                    ],
                    Some(Subtype::VndA),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndBalsamiqBmml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndBalsamiqBmpr), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ml"), 1542),
                        (intern_str::CaseInsensitive("pr"), 1543),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndBananaAccounting), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("unting"), 1545)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lsamiqbm"), 1544),
                        (intern_str::CaseInsensitive("nanaacco"), 1546),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndBbfUspError), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("or"), 1548)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndBbfUspMsg), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("err"), 1549),
                        (intern_str::CaseInsensitive("msg"), 1550),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("fusp"), 1551)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndBekitzurStech), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("kitzurstech"), 1553)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndBintMedContent), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ent"), 1555)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndBintMedPlus), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cont"), 1556),
                        (intern_str::CaseInsensitive("plus"), 1557),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndBiopaxRdf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("df"), 1559)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ntmed"), 1558),
                        (intern_str::CaseInsensitive("opaxr"), 1560),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndBlinkIdbValueWrapper), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("kidbvaluewrapper"), 1562)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndBlueiceMultipass), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ltipass"), 1564)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndBluetoothEpOob), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndBluetoothLeOob), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("epoob"), 1566),
                        (intern_str::CaseInsensitive("leoob"), 1567),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("icemu"), 1565),
                        (intern_str::CaseInsensitive("tooth"), 1568),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("in"), 1563),
                        (intern_str::CaseInsensitive("ue"), 1569),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndBmi), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 1571)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndBpf3), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("3"), 1573)],
                    Some(Subtype::VndBpf),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 1574)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndBusinessobjects), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sinessobjects"), 1576)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndByuUapi), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("uuapi"), 1578)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1547),
                        (intern_str::CaseInsensitive("b"), 1552),
                        (intern_str::CaseInsensitive("e"), 1554),
                        (intern_str::CaseInsensitive("i"), 1561),
                        (intern_str::CaseInsensitive("l"), 1570),
                        (intern_str::CaseInsensitive("m"), 1572),
                        (intern_str::CaseInsensitive("p"), 1575),
                        (intern_str::CaseInsensitive("u"), 1577),
                        (intern_str::CaseInsensitive("y"), 1579),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCabJscript), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cript"), 1581)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndCanonCpdl), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCanonLips), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cpdl"), 1583),
                        (intern_str::CaseInsensitive("lips"), 1584),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCapasystemsPg), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ystemspg"), 1586)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bjs"), 1582),
                        (intern_str::CaseInsensitive("non"), 1585),
                        (intern_str::CaseInsensitive("pas"), 1587),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCctv), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tv"), 1589)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndCelp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 1591)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCendioThinlincClientconf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 1593)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCenturySystemsTcpStream), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("diothinlincclientcon"), 1594),
                        (intern_str::CaseInsensitive("turysystemstcpstream"), 1595),
                    ],
                    None,
                    0,
                    20,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("l"), 1592),
                        (intern_str::CaseInsensitive("n"), 1596),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndChemdraw), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndChessPgn), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mdraw"), 1598),
                        (intern_str::CaseInsensitive("sspgn"), 1599),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndChipnutsKaraokeMmd), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pnutskaraokemmd"), 1601)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 1600),
                        (intern_str::CaseInsensitive("i"), 1602),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCiedi), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCinderella), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rella"), 1605)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndCirpackIsdnExt), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ckisdnext"), 1607)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCiscoNse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nse"), 1609)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndCitationstylesStyle), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ionstylesstyle"), 1611)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("edi"), 1604),
                        (intern_str::CaseInsensitive("nde"), 1606),
                        (intern_str::CaseInsensitive("rpa"), 1608),
                        (intern_str::CaseInsensitive("sco"), 1610),
                        (intern_str::CaseInsensitive("tat"), 1612),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndClaymore), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ymore"), 1614)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndCloantoRp9), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndClonkC4group), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("up"), 1617)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("antorp9"), 1616),
                        (intern_str::CaseInsensitive("nkc4gro"), 1618),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCluetrustCartomobileConfigPkg), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pkg"), 1620)],
                    Some(Subtype::VndCluetrustCartomobileConfig),
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("etrustcartomobileconfig"), 1621)],
                    None,
                    0,
                    23,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1615),
                        (intern_str::CaseInsensitive("o"), 1619),
                        (intern_str::CaseInsensitive("u"), 1622),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCmlesRadioEvents), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lesradioevents"), 1624)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCnsAnp1), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("1"), 1626)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCnsInf1), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCnsInf2), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 1628),
                        (intern_str::CaseInsensitive("2"), 1629),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("anp"), 1627),
                        (intern_str::CaseInsensitive("inf"), 1630),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 1631)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCoffeescript), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("feescript"), 1633)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndCollabioXodocumentsDocumentTemplate),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 1635)],
                    Some(Subtype::VndCollabioXodocumentsDocument),
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndCollabioXodocumentsPresentationTemplate),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 1637)],
                    Some(Subtype::VndCollabioXodocumentsPresentation),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tion"), 1638)], None, 0, 4),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndCollabioXodocumentsSpreadsheetTemplate),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 1640)],
                    Some(Subtype::VndCollabioXodocumentsSpreadsheet),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eet"), 1641)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("document"), 1636),
                        (intern_str::CaseInsensitive("presenta"), 1639),
                        (intern_str::CaseInsensitive("spreadsh"), 1642),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("oxodocuments"), 1643)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCollada), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bi"), 1644),
                        (intern_str::CaseInsensitive("da"), 1645),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCollectionDoc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCollectionNext), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 1648)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("doc"), 1647),
                        (intern_str::CaseInsensitive("nex"), 1649),
                    ],
                    Some(Subtype::VndCollection),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ction"), 1650)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1646),
                        (intern_str::CaseInsensitive("e"), 1651),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 1652)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndComicbookRar), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rar"), 1654)],
                    Some(Subtype::VndComicbook),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cbook"), 1655)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndCommerceBattelle), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("telle"), 1657)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndCommonspace), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ercebat"), 1658),
                        (intern_str::CaseInsensitive("onspace"), 1659),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 1656),
                        (intern_str::CaseInsensitive("m"), 1660),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndContactCmsg), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("tactcmsg"), 1662)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCoreosIgnition), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eosignition"), 1664)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCosmocaller), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("mocaller"), 1666)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 1634),
                        (intern_str::CaseInsensitive("l"), 1653),
                        (intern_str::CaseInsensitive("m"), 1661),
                        (intern_str::CaseInsensitive("n"), 1663),
                        (intern_str::CaseInsensitive("r"), 1665),
                        (intern_str::CaseInsensitive("s"), 1667),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCrickClickerKeyboard), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 1669)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCrickClickerPalette), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCrickClickerTemplate), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 1672)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCrickClickerWordbank), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("k"), 1674)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("keyboar"), 1670),
                        (intern_str::CaseInsensitive("palette"), 1671),
                        (intern_str::CaseInsensitive("templat"), 1673),
                        (intern_str::CaseInsensitive("wordban"), 1675),
                    ],
                    Some(Subtype::VndCrickClicker),
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCriticaltoolsWbs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("swbs"), 1677)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ckclicker"), 1676),
                        (intern_str::CaseInsensitive("ticaltool"), 1678),
                    ],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCryptiiPipe), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ipipe"), 1680)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndCryptomatorEncrypted), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pted"), 1682)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndCryptomatorVault), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("encry"), 1683),
                        (intern_str::CaseInsensitive("vault"), 1684),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCryptoShadeFile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("file"), 1686)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mator"), 1685),
                        (intern_str::CaseInsensitive("shade"), 1687),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 1681),
                        (intern_str::CaseInsensitive("o"), 1688),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pt"), 1689)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 1679),
                        (intern_str::CaseInsensitive("y"), 1690),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCtcPosml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 1692)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndCtctWs), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("pos"), 1693),
                        (intern_str::CaseInsensitive("tws"), 1694),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 1695)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCupsPdf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCupsPostscript), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("tscript"), 1698)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCupsPpd), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("df"), 1697),
                        (intern_str::CaseInsensitive("os"), 1699),
                        (intern_str::CaseInsensitive("pd"), 1700),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCupsRaster), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ter"), 1702)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndCupsRaw), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("s"), 1703),
                        (intern_str::CaseInsensitive("w"), 1704),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 1705)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("p"), 1701),
                        (intern_str::CaseInsensitive("r"), 1706),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCurl), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ps"), 1707),
                        (intern_str::CaseInsensitive("rl"), 1708),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndCyanDeanRoot), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("anroot"), 1710)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndCybank), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndCyclonedx), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("edx"), 1713)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ande"), 1711),
                        (intern_str::CaseInsensitive("bank"), 1712),
                        (intern_str::CaseInsensitive("clon"), 1714),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1588),
                        (intern_str::CaseInsensitive("c"), 1590),
                        (intern_str::CaseInsensitive("e"), 1597),
                        (intern_str::CaseInsensitive("h"), 1603),
                        (intern_str::CaseInsensitive("i"), 1613),
                        (intern_str::CaseInsensitive("l"), 1623),
                        (intern_str::CaseInsensitive("m"), 1625),
                        (intern_str::CaseInsensitive("n"), 1632),
                        (intern_str::CaseInsensitive("o"), 1668),
                        (intern_str::CaseInsensitive("r"), 1691),
                        (intern_str::CaseInsensitive("t"), 1696),
                        (intern_str::CaseInsensitive("u"), 1709),
                        (intern_str::CaseInsensitive("y"), 1715),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndD2lCoursepackage1p0), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lcoursepackage1p0"), 1717)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndD3mDataset), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndD3mProblem), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dataset"), 1719),
                        (intern_str::CaseInsensitive("problem"), 1720),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 1721)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDart), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDatapackage), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDataresource), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 1725)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDataVisionRdz), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dz"), 1727)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("package"), 1724),
                        (intern_str::CaseInsensitive("resourc"), 1726),
                        (intern_str::CaseInsensitive("visionr"), 1728),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("rt"), 1723),
                        (intern_str::CaseInsensitive("ta"), 1729),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDbf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 1731)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDebianBinaryPackage), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("kage"), 1733)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndDebianCopyright), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("binarypac"), 1734),
                        (intern_str::CaseInsensitive("copyright"), 1735),
                    ],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("an"), 1736)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndDeceAudio), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("udio"), 1738)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndDeceData), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ata"), 1740)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndDeceGraphic), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("raphic"), 1742)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndDeceHd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 1744)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDeceMobile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ile"), 1746)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndDeceMp4), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ob"), 1747),
                        (intern_str::CaseInsensitive("p4"), 1748),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDecePd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 1750)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDeceSd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 1752)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDeceTtml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tml"), 1754)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndDeceUnspecified), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("nspecified"), 1756)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDeceVideo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ideo"), 1758)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndDeceZip), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ip"), 1760)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1739),
                        (intern_str::CaseInsensitive("d"), 1741),
                        (intern_str::CaseInsensitive("g"), 1743),
                        (intern_str::CaseInsensitive("h"), 1745),
                        (intern_str::CaseInsensitive("m"), 1749),
                        (intern_str::CaseInsensitive("p"), 1751),
                        (intern_str::CaseInsensitive("s"), 1753),
                        (intern_str::CaseInsensitive("t"), 1755),
                        (intern_str::CaseInsensitive("u"), 1757),
                        (intern_str::CaseInsensitive("v"), 1759),
                        (intern_str::CaseInsensitive("z"), 1761),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDenovoFcselayoutLink), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("vofcselayoutlink"), 1763)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDesmumeMovie), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("umemovie"), 1765)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bi"), 1737),
                        (intern_str::CaseInsensitive("ce"), 1762),
                        (intern_str::CaseInsensitive("no"), 1764),
                        (intern_str::CaseInsensitive("sm"), 1766),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDigitalWinds), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("italwinds"), 1768)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDirBiPlateDlNosuffix), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lnosuffix"), 1770)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDirectvMpegTts), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("tts"), 1772)],
                    Some(Subtype::VndDirectvMpeg),
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("biplated"), 1771),
                        (intern_str::CaseInsensitive("ectvmpeg"), 1773),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 1769),
                        (intern_str::CaseInsensitive("r"), 1774),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDjvu), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("vu"), 1776)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndDlnaAdts), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDlnaMpegTts), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tts"), 1779)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("adts"), 1778),
                        (intern_str::CaseInsensitive("mpeg"), 1780),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("na"), 1781)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndDmClientScript), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pt"), 1783)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndDmDelegation), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("clientscri"), 1784),
                        (intern_str::CaseInsensitive("delegation"), 1785),
                    ],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDna), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 1787)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDocument), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ent"), 1789)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndDolbyHeaac1), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDolbyHeaac2), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 1791),
                        (intern_str::CaseInsensitive("2"), 1792),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eaac"), 1793)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndDolbyMlp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDolbyMobile1), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDolbyMobile2), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 1796),
                        (intern_str::CaseInsensitive("2"), 1797),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ile"), 1798)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndDolbyMps), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lp"), 1795),
                        (intern_str::CaseInsensitive("ob"), 1799),
                        (intern_str::CaseInsensitive("ps"), 1800),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDolbyPl2x), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDolbyPl2z), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("x"), 1802),
                        (intern_str::CaseInsensitive("z"), 1803),
                    ],
                    Some(Subtype::VndDolbyPl2),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDolbyPulse1), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("se1"), 1805)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("l2"), 1804),
                        (intern_str::CaseInsensitive("ul"), 1806),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("h"), 1794),
                        (intern_str::CaseInsensitive("m"), 1801),
                        (intern_str::CaseInsensitive("p"), 1807),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDoremirScorecloudBinaryDocument), 0, 1),
                intern_str::Node::new(
                    &[(
                        intern_str::CaseInsensitive("irscorecloudbinarydocument"),
                        1809,
                    )],
                    None,
                    0,
                    26,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cum"), 1790),
                        (intern_str::CaseInsensitive("lby"), 1808),
                        (intern_str::CaseInsensitive("rem"), 1810),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDpgraph), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("graph"), 1812)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndDra), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDreamfactory), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("amfactory"), 1815)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDrive), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ve"), 1817)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1814),
                        (intern_str::CaseInsensitive("e"), 1816),
                        (intern_str::CaseInsensitive("i"), 1818),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDtgLocalFlash), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("h"), 1820)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDtgLocalHtml), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("flas"), 1821),
                        (intern_str::CaseInsensitive("html"), 1822),
                    ],
                    Some(Subtype::VndDtgLocal),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("local"), 1823)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndDtsHd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDtsUhd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 1826)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("hd"), 1825),
                        (intern_str::CaseInsensitive("uh"), 1827),
                    ],
                    Some(Subtype::VndDts),
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 1824),
                        (intern_str::CaseInsensitive("s"), 1828),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDvbAit), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("it"), 1830)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndDvbDvbisl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sl"), 1832)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndDvbDvbj), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 1833),
                        (intern_str::CaseInsensitive("j"), 1834),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("vb"), 1835)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndDvbEsgcontainer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sgcontainer"), 1837)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDvbFile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ile"), 1839)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndDvbIpdcdftnotifaccess), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("notifaccess"), 1841)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDvbIpdcesgaccess2), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("2"), 1843)],
                    Some(Subtype::VndDvbIpdcesgaccess),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ess"), 1844)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndDvbIpdcesgpdd), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("acc"), 1845),
                        (intern_str::CaseInsensitive("pdd"), 1846),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDvbIpdcroaming), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ming"), 1848)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dft"), 1842),
                        (intern_str::CaseInsensitive("esg"), 1847),
                        (intern_str::CaseInsensitive("roa"), 1849),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDvbIptvAlfecBase), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDvbIptvAlfecEnhancement), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ncement"), 1852)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("base"), 1851),
                        (intern_str::CaseInsensitive("enha"), 1853),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("alfec"), 1854)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dc"), 1850),
                        (intern_str::CaseInsensitive("tv"), 1855),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 1856)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDvbNotifAggregateRoot), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ggregateroot"), 1858)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDvbNotifContainer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ontainer"), 1860)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDvbNotifGeneric), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eneric"), 1862)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndDvbNotifIaMsglist), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDvbNotifIaRegistrationRequest), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDvbNotifIaRegistrationResponse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 1866)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("quest"), 1865),
                        (intern_str::CaseInsensitive("spons"), 1867),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ationre"), 1868)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("msglist"), 1864),
                        (intern_str::CaseInsensitive("registr"), 1869),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDvbNotifInit), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("it"), 1871)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1870),
                        (intern_str::CaseInsensitive("n"), 1872),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1859),
                        (intern_str::CaseInsensitive("c"), 1861),
                        (intern_str::CaseInsensitive("g"), 1863),
                        (intern_str::CaseInsensitive("i"), 1873),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("otif"), 1874)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndDvbPfr), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("fr"), 1876)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndDvbService), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDvbSubtitle), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 1879)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ervice"), 1878),
                        (intern_str::CaseInsensitive("ubtitl"), 1880),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1831),
                        (intern_str::CaseInsensitive("d"), 1836),
                        (intern_str::CaseInsensitive("e"), 1838),
                        (intern_str::CaseInsensitive("f"), 1840),
                        (intern_str::CaseInsensitive("i"), 1857),
                        (intern_str::CaseInsensitive("n"), 1875),
                        (intern_str::CaseInsensitive("p"), 1877),
                        (intern_str::CaseInsensitive("s"), 1881),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("b"), 1882)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDwf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDwg), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 1884),
                        (intern_str::CaseInsensitive("g"), 1885),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDxf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndDxr), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 1887),
                        (intern_str::CaseInsensitive("r"), 1888),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndDynageo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nageo"), 1890)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndDzr), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 1892)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 1718),
                        (intern_str::CaseInsensitive("3"), 1722),
                        (intern_str::CaseInsensitive("a"), 1730),
                        (intern_str::CaseInsensitive("b"), 1732),
                        (intern_str::CaseInsensitive("e"), 1767),
                        (intern_str::CaseInsensitive("i"), 1775),
                        (intern_str::CaseInsensitive("j"), 1777),
                        (intern_str::CaseInsensitive("l"), 1782),
                        (intern_str::CaseInsensitive("m"), 1786),
                        (intern_str::CaseInsensitive("n"), 1788),
                        (intern_str::CaseInsensitive("o"), 1811),
                        (intern_str::CaseInsensitive("p"), 1813),
                        (intern_str::CaseInsensitive("r"), 1819),
                        (intern_str::CaseInsensitive("t"), 1829),
                        (intern_str::CaseInsensitive("v"), 1883),
                        (intern_str::CaseInsensitive("w"), 1886),
                        (intern_str::CaseInsensitive("x"), 1889),
                        (intern_str::CaseInsensitive("y"), 1891),
                        (intern_str::CaseInsensitive("z"), 1893),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEasykaraokeCdgdownload), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sykaraokecdgdownload"), 1895)],
                    None,
                    0,
                    20,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEcdisUpdate), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pdate"), 1897)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndEcipRlp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 1899)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEclipseDitto), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("editto"), 1901)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndEcowinChart), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 1903)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEcowinFilerequest), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 1905)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEcowinFileupdate), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("reques"), 1906),
                        (intern_str::CaseInsensitive("update"), 1907),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEcowinSeriesrequest), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 1909)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEcowinSeriesupdate), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("reques"), 1910),
                        (intern_str::CaseInsensitive("update"), 1911),
                    ],
                    Some(Subtype::VndEcowinSeries),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("es"), 1912)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("char"), 1904),
                        (intern_str::CaseInsensitive("file"), 1908),
                        (intern_str::CaseInsensitive("seri"), 1913),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("disu"), 1898),
                        (intern_str::CaseInsensitive("iprl"), 1900),
                        (intern_str::CaseInsensitive("lips"), 1902),
                        (intern_str::CaseInsensitive("owin"), 1914),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEfiImg), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEfiIso), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mg"), 1916),
                        (intern_str::CaseInsensitive("so"), 1917),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ii"), 1918)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndEmclientAccessrequest), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("clientaccessrequest"), 1920)],
                    None,
                    0,
                    19,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEnliven), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEnphaseEnvoy), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("envoy"), 1923)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("liven"), 1922),
                        (intern_str::CaseInsensitive("phase"), 1924),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEprintsData), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tsdata"), 1926)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndEpsonEsf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sf"), 1928)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndEpsonMsf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sf"), 1930)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndEpsonQuickanime), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("uickanime"), 1932)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEpsonSalt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 1934)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEpsonSsf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("al"), 1935),
                        (intern_str::CaseInsensitive("sf"), 1936),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 1929),
                        (intern_str::CaseInsensitive("m"), 1931),
                        (intern_str::CaseInsensitive("q"), 1933),
                        (intern_str::CaseInsensitive("s"), 1937),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("rin"), 1927),
                        (intern_str::CaseInsensitive("son"), 1938),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEricssonQuickcall), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("icssonquickcall"), 1940)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEsmertecThemeDescriptor), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("themedescriptor"), 1942)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEspassEspass), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pass"), 1944)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndEszigno3), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mertec"), 1943),
                        (intern_str::CaseInsensitive("passes"), 1945),
                        (intern_str::CaseInsensitive("zigno3"), 1946),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiAoc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiAsicE), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiAsicS), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 1949),
                        (intern_str::CaseInsensitive("s"), 1950),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 1951)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("oc"), 1948),
                        (intern_str::CaseInsensitive("si"), 1952),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiCug), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ug"), 1954)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiIptvcommand), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ommand"), 1956)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiIptvdiscovery), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iscovery"), 1958)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiIptvprofile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rofile"), 1960)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiIptvsadBc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiIptvsadCod), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 1963)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiIptvsadNpvr), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("vr"), 1965)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bc"), 1962),
                        (intern_str::CaseInsensitive("co"), 1964),
                        (intern_str::CaseInsensitive("np"), 1966),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiIptvservice), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("vice"), 1968)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiIptvsync), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 1970)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ad"), 1967),
                        (intern_str::CaseInsensitive("er"), 1969),
                        (intern_str::CaseInsensitive("yn"), 1971),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiIptvueprofile), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eprofile"), 1973)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 1957),
                        (intern_str::CaseInsensitive("d"), 1959),
                        (intern_str::CaseInsensitive("p"), 1961),
                        (intern_str::CaseInsensitive("s"), 1972),
                        (intern_str::CaseInsensitive("u"), 1974),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ptv"), 1975)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiMcid), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiMheg5), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("5"), 1978)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cid"), 1977),
                        (intern_str::CaseInsensitive("heg"), 1979),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndEtsiOverloadControlPolicyDataset),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(
                        intern_str::CaseInsensitive("verloadcontrolpolicydataset"),
                        1981,
                    )],
                    None,
                    0,
                    27,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiPstn), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("stn"), 1983)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiSci), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiSimservs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("servs"), 1986)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ci"), 1985),
                        (intern_str::CaseInsensitive("im"), 1987),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiTimestampToken), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("estamptoken"), 1989)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEtsiTslDer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("der"), 1991)],
                    Some(Subtype::VndEtsiTsl),
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("im"), 1990),
                        (intern_str::CaseInsensitive("sl"), 1992),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1953),
                        (intern_str::CaseInsensitive("c"), 1955),
                        (intern_str::CaseInsensitive("i"), 1976),
                        (intern_str::CaseInsensitive("m"), 1980),
                        (intern_str::CaseInsensitive("o"), 1982),
                        (intern_str::CaseInsensitive("p"), 1984),
                        (intern_str::CaseInsensitive("s"), 1988),
                        (intern_str::CaseInsensitive("t"), 1993),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("si"), 1994)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndEudoraData), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEuKasparianCar), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ncar"), 1997)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("doradata"), 1996),
                        (intern_str::CaseInsensitive("kasparia"), 1998),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndEveradPlj), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEvolvEcigProfile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("le"), 2001)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndEvolvEcigSettings), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ngs"), 2003)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndEvolvEcigTheme), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("profi"), 2002),
                        (intern_str::CaseInsensitive("setti"), 2004),
                        (intern_str::CaseInsensitive("theme"), 2005),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("eradplj"), 2000),
                        (intern_str::CaseInsensitive("olvecig"), 2006),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndExstreamEmpower), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndExstreamPackage), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("empower"), 2008),
                        (intern_str::CaseInsensitive("package"), 2009),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("stream"), 2010)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndEzpixAlbum), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndEzpixPackage), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ge"), 2013)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("album"), 2012),
                        (intern_str::CaseInsensitive("packa"), 2014),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pix"), 2015)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 1896),
                        (intern_str::CaseInsensitive("c"), 1915),
                        (intern_str::CaseInsensitive("f"), 1919),
                        (intern_str::CaseInsensitive("m"), 1921),
                        (intern_str::CaseInsensitive("n"), 1925),
                        (intern_str::CaseInsensitive("p"), 1939),
                        (intern_str::CaseInsensitive("r"), 1941),
                        (intern_str::CaseInsensitive("s"), 1947),
                        (intern_str::CaseInsensitive("t"), 1995),
                        (intern_str::CaseInsensitive("u"), 1999),
                        (intern_str::CaseInsensitive("v"), 2007),
                        (intern_str::CaseInsensitive("x"), 2011),
                        (intern_str::CaseInsensitive("z"), 2016),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFamilysearchGedcom), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lysearchgedcom"), 2018)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFastbidsheet), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFastcopyDiskImage), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("image"), 2021)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bidsheet"), 2020),
                        (intern_str::CaseInsensitive("copydisk"), 2022),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mi"), 2019),
                        (intern_str::CaseInsensitive("st"), 2023),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFdf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFdsnMseed), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 2026)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFdsnSeed), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("msee"), 2027),
                        (intern_str::CaseInsensitive("seed"), 2028),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("n"), 2029)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 2025),
                        (intern_str::CaseInsensitive("s"), 2030),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFfsns), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sns"), 2032)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndFiclabFlb), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFiclabFlt), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 2034),
                        (intern_str::CaseInsensitive("t"), 2035),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("bfl"), 2036)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndFilmitZfc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tzfc"), 2038)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndFints), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFiremonkeysCloudcell), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("onkeyscloudcell"), 2041)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cla"), 2037),
                        (intern_str::CaseInsensitive("lmi"), 2039),
                        (intern_str::CaseInsensitive("nts"), 2040),
                        (intern_str::CaseInsensitive("rem"), 2042),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFlatland3dml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("tland3dml"), 2044)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFloGraphIt), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("graphit"), 2046)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFluxtimeClip), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xtimeclip"), 2048)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFly), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2045),
                        (intern_str::CaseInsensitive("o"), 2047),
                        (intern_str::CaseInsensitive("u"), 2049),
                        (intern_str::CaseInsensitive("y"), 2050),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFmiFlexstor), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iflexstor"), 2052)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFontFontforgeSfd), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ntfontforgesfd"), 2054)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFpx), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 2056)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFramemaker), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("amemaker"), 2058)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFscWeblaunch), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("weblaunch"), 2060)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFSecureMobile), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("curemobile"), 2062)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFst), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 2061),
                        (intern_str::CaseInsensitive("e"), 2063),
                        (intern_str::CaseInsensitive("t"), 2064),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFujifilmFbDocuworksBinder), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFujifilmFbDocuworksContainer), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ner"), 2067)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("binder"), 2066),
                        (intern_str::CaseInsensitive("contai"), 2068),
                    ],
                    Some(Subtype::VndFujifilmFbDocuworks),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("uworks"), 2069)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndFujifilmFbJfi), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("doc"), 2070),
                        (intern_str::CaseInsensitive("jfi"), 2071),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("b"), 2072)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFujitsuOasys2), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFujitsuOasys3), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFujitsuOasysgp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 2076)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFujitsuOasysprs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rs"), 2078)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 2074),
                        (intern_str::CaseInsensitive("3"), 2075),
                        (intern_str::CaseInsensitive("g"), 2077),
                        (intern_str::CaseInsensitive("p"), 2079),
                    ],
                    Some(Subtype::VndFujitsuOasys),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sys"), 2080)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndFujixeroxArt4), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFujixeroxArtEx), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 2083)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("4"), 2082),
                        (intern_str::CaseInsensitive("e"), 2084),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rt"), 2085)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndFujixeroxDdd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFujixeroxDocuworksBinder), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFujixeroxDocuworksContainer), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ner"), 2089)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("binder"), 2088),
                        (intern_str::CaseInsensitive("contai"), 2090),
                    ],
                    Some(Subtype::VndFujixeroxDocuworks),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("uworks"), 2091)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dd"), 2087),
                        (intern_str::CaseInsensitive("oc"), 2092),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFujixeroxEdmicsMmr), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFujixeroxEdmicsRlc), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mmr"), 2094),
                        (intern_str::CaseInsensitive("rlc"), 2095),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dmics"), 2096)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndFujixeroxHbpl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("bpl"), 2098)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2086),
                        (intern_str::CaseInsensitive("d"), 2093),
                        (intern_str::CaseInsensitive("e"), 2097),
                        (intern_str::CaseInsensitive("h"), 2099),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("filmf"), 2073),
                        (intern_str::CaseInsensitive("tsuoa"), 2081),
                        (intern_str::CaseInsensitive("xerox"), 2100),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 2101)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndFutMisnet), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("net"), 2103)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndFutoin), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mis"), 2104),
                        (intern_str::CaseInsensitive("oin"), 2105),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFuzzysheet), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("zysheet"), 2107)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("j"), 2102),
                        (intern_str::CaseInsensitive("t"), 2106),
                        (intern_str::CaseInsensitive("z"), 2108),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndFvt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 2110)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2024),
                        (intern_str::CaseInsensitive("d"), 2031),
                        (intern_str::CaseInsensitive("f"), 2033),
                        (intern_str::CaseInsensitive("i"), 2043),
                        (intern_str::CaseInsensitive("l"), 2051),
                        (intern_str::CaseInsensitive("m"), 2053),
                        (intern_str::CaseInsensitive("o"), 2055),
                        (intern_str::CaseInsensitive("p"), 2057),
                        (intern_str::CaseInsensitive("r"), 2059),
                        (intern_str::CaseInsensitive("s"), 2065),
                        (intern_str::CaseInsensitive("u"), 2109),
                        (intern_str::CaseInsensitive("v"), 2111),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGdl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 2113)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGenomatixTuxedo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("uxedo"), 2115)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndGenticsGrd), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("omatixt"), 2116),
                        (intern_str::CaseInsensitive("ticsgrd"), 2117),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGeogebraFile), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGeogebraSlides), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("es"), 2120)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndGeogebraTool), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("file"), 2119),
                        (intern_str::CaseInsensitive("slid"), 2121),
                        (intern_str::CaseInsensitive("tool"), 2122),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 2123)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGeometryExplorer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("yexplorer"), 2125)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGeonext), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGeoplan), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGeospace), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 2129)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gebr"), 2124),
                        (intern_str::CaseInsensitive("metr"), 2126),
                        (intern_str::CaseInsensitive("next"), 2127),
                        (intern_str::CaseInsensitive("plan"), 2128),
                        (intern_str::CaseInsensitive("spac"), 2130),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGerber), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ber"), 2132)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("n"), 2118),
                        (intern_str::CaseInsensitive("o"), 2131),
                        (intern_str::CaseInsensitive("r"), 2133),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGlobalgraphicsPgb), 0, 1),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndGlobalplatformCardContentMgtResponse),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("response"), 2136)],
                    Some(Subtype::VndGlobalplatformCardContentMgt),
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("dcontentmgt"), 2137)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("graphicspgb"), 2135),
                        (intern_str::CaseInsensitive("platformcar"), 2138),
                    ],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("obal"), 2139)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndGml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 2141)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGnuTalerExchange), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGnuTalerMerchant), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("exchange"), 2143),
                        (intern_str::CaseInsensitive("merchant"), 2144),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("utaler"), 2145)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndGoogleEarthKml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGoogleEarthKmz), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("l"), 2147),
                        (intern_str::CaseInsensitive("z"), 2148),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eearthkm"), 2149)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGovSkEForm), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGovSkXmldatacontainer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("tacontainer"), 2152)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("eform"), 2151),
                        (intern_str::CaseInsensitive("xmlda"), 2153),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ogl"), 2150),
                        (intern_str::CaseInsensitive("vsk"), 2154),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGrafeq), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGraphviz), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("iz"), 2157)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("feq"), 2156),
                        (intern_str::CaseInsensitive("phv"), 2158),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGridmp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dmp"), 2160)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndGrooveAccount), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ccount"), 2162)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndGrooveHelp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("elp"), 2164)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndGrooveIdentityMessage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("message"), 2166)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGrooveInjector), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dentity"), 2167),
                        (intern_str::CaseInsensitive("njector"), 2168),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGrooveToolMessage), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndGrooveToolTemplate), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 2171)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("message"), 2170),
                        (intern_str::CaseInsensitive("templat"), 2172),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ool"), 2173)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndGrooveVcard), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("card"), 2175)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2163),
                        (intern_str::CaseInsensitive("h"), 2165),
                        (intern_str::CaseInsensitive("i"), 2169),
                        (intern_str::CaseInsensitive("t"), 2174),
                        (intern_str::CaseInsensitive("v"), 2176),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ove"), 2177)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2159),
                        (intern_str::CaseInsensitive("i"), 2161),
                        (intern_str::CaseInsensitive("o"), 2178),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndGsGdl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("gdl"), 2180)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndGtw), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("w"), 2182)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 2114),
                        (intern_str::CaseInsensitive("e"), 2134),
                        (intern_str::CaseInsensitive("l"), 2140),
                        (intern_str::CaseInsensitive("m"), 2142),
                        (intern_str::CaseInsensitive("n"), 2146),
                        (intern_str::CaseInsensitive("o"), 2155),
                        (intern_str::CaseInsensitive("r"), 2179),
                        (intern_str::CaseInsensitive("s"), 2181),
                        (intern_str::CaseInsensitive("t"), 2183),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndHal), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHandHeldEntertainment), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("heldentertainment"), 2186)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndHans), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 2187),
                        (intern_str::CaseInsensitive("s"), 2188),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("l"), 2185),
                        (intern_str::CaseInsensitive("n"), 2189),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndHbci), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ci"), 2191)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndHclBireports), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lbireports"), 2193)],
                    Some(Subtype::VndHc),
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndHdt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 2195)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHeroku), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("roku"), 2197)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndHgl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 2199)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHheLessonPlayer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("elessonplayer"), 2201)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndHl7cda), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 2203)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHl7v2), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cd"), 2204),
                        (intern_str::CaseInsensitive("v2"), 2205),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("7"), 2206)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHnsAudio), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHnsVideo), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("audio"), 2208),
                        (intern_str::CaseInsensitive("video"), 2209),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 2210)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHpHpgl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 2212)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHpHpid), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 2214)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHpHps), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 2213),
                        (intern_str::CaseInsensitive("i"), 2215),
                        (intern_str::CaseInsensitive("s"), 2216),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndHpJlyt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("yt"), 2218)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndHpPclxl), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xl"), 2220)],
                    Some(Subtype::VndHpPcl),
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 2221)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("hp"), 2217),
                        (intern_str::CaseInsensitive("jl"), 2219),
                        (intern_str::CaseInsensitive("pc"), 2222),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndHttphone), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tphone"), 2224)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndHydrostatixSofData), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("statixsofdata"), 2226)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndHyperdrive), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 2228)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndHyperItem), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("driv"), 2229),
                        (intern_str::CaseInsensitive("item"), 2230),
                    ],
                    Some(Subtype::VndHyper),
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dro"), 2227),
                        (intern_str::CaseInsensitive("per"), 2231),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndHzn3dCrossword), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("n3dcrossword"), 2233)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2190),
                        (intern_str::CaseInsensitive("b"), 2192),
                        (intern_str::CaseInsensitive("c"), 2194),
                        (intern_str::CaseInsensitive("d"), 2196),
                        (intern_str::CaseInsensitive("e"), 2198),
                        (intern_str::CaseInsensitive("g"), 2200),
                        (intern_str::CaseInsensitive("h"), 2202),
                        (intern_str::CaseInsensitive("l"), 2207),
                        (intern_str::CaseInsensitive("n"), 2211),
                        (intern_str::CaseInsensitive("p"), 2223),
                        (intern_str::CaseInsensitive("t"), 2225),
                        (intern_str::CaseInsensitive("y"), 2232),
                        (intern_str::CaseInsensitive("z"), 2234),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIbmElectronicMedia), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("nicmedia"), 2236)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIbmMiniPay), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIbmRightsManagement), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("anagement"), 2239)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIbmSecureContainer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ontainer"), 2241)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("electro"), 2237),
                        (intern_str::CaseInsensitive("minipay"), 2238),
                        (intern_str::CaseInsensitive("rightsm"), 2240),
                        (intern_str::CaseInsensitive("securec"), 2242),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 2243)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIccprofile), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("cprofile"), 2245)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIeee1905), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ee1905"), 2247)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndIgloader), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("loader"), 2249)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndImagemeterFolder), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 2251)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndImagemeterImage), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("folde"), 2252),
                        (intern_str::CaseInsensitive("image"), 2253),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("gemeter"), 2254)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndImmervisionIvp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndImmervisionIvu), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("p"), 2256),
                        (intern_str::CaseInsensitive("u"), 2257),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ervisioniv"), 2258)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndImsImsccv1p1), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndImsImsccv1p2), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndImsImsccv1p3), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 2260),
                        (intern_str::CaseInsensitive("2"), 2261),
                        (intern_str::CaseInsensitive("3"), 2262),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("msccv1p"), 2263)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndImsLisV2Result), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lt"), 2265)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndImsLtiV2Toolconsumerprofile), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("merprofile"), 2267)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndImsLtiV2ToolproxyId), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("id"), 2269)],
                    Some(Subtype::VndImsLtiV2Toolproxy),
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndImsLtiV2ToolsettingsSimple), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("simple"), 2271)],
                    Some(Subtype::VndImsLtiV2Toolsettings),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ngs"), 2272)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("consu"), 2268),
                        (intern_str::CaseInsensitive("proxy"), 2270),
                        (intern_str::CaseInsensitive("setti"), 2273),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("isv2resu"), 2266),
                        (intern_str::CaseInsensitive("tiv2tool"), 2274),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 2264),
                        (intern_str::CaseInsensitive("l"), 2275),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2255),
                        (intern_str::CaseInsensitive("m"), 2259),
                        (intern_str::CaseInsensitive("s"), 2276),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIn3d3dml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIn3dSpot), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3dml"), 2278),
                        (intern_str::CaseInsensitive("spot"), 2279),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 2280)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndInformedcontrolRms), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rms"), 2282)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndInfotechProject), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("rmedcontrol"), 2283),
                        (intern_str::CaseInsensitive("techproject"), 2284),
                    ],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 2285)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndInnopathWampNotification), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("opathwampnotification"), 2287)],
                    None,
                    0,
                    21,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndInsorsIgm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("orsigm"), 2289)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndInterconFormnet), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("formnet"), 2291)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIntergeo), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIntertrustDigibox), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("box"), 2294)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndIntertrustNncp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("digi"), 2295),
                        (intern_str::CaseInsensitive("nncp"), 2296),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("st"), 2297)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("con"), 2292),
                        (intern_str::CaseInsensitive("geo"), 2293),
                        (intern_str::CaseInsensitive("tru"), 2298),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIntuQbo), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIntuQfx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bo"), 2300),
                        (intern_str::CaseInsensitive("fx"), 2301),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("er"), 2299),
                        (intern_str::CaseInsensitive("uq"), 2302),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 2281),
                        (intern_str::CaseInsensitive("f"), 2286),
                        (intern_str::CaseInsensitive("n"), 2288),
                        (intern_str::CaseInsensitive("s"), 2290),
                        (intern_str::CaseInsensitive("t"), 2303),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIptcG2Catalogitem), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIptcG2Conceptitem), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("atalogitem"), 2305),
                        (intern_str::CaseInsensitive("onceptitem"), 2306),
                    ],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIptcG2Knowledgeitem), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("nowledgeitem"), 2308)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIptcG2Newsitem), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIptcG2Newsmessage), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("age"), 2311)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("item"), 2310),
                        (intern_str::CaseInsensitive("mess"), 2312),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ews"), 2313)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndIptcG2Packageitem), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIptcG2Planningitem), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 2316)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ackageitem"), 2315),
                        (intern_str::CaseInsensitive("lanningite"), 2317),
                    ],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 2307),
                        (intern_str::CaseInsensitive("k"), 2309),
                        (intern_str::CaseInsensitive("n"), 2314),
                        (intern_str::CaseInsensitive("p"), 2318),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("2"), 2319)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIptcNewsMl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 2321)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndIptcNitf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ews"), 2322),
                        (intern_str::CaseInsensitive("itf"), 2323),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 2320),
                        (intern_str::CaseInsensitive("n"), 2324),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIptvforum1dparityfec1010), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIptvforum1dparityfec2005), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1010"), 2326),
                        (intern_str::CaseInsensitive("2005"), 2327),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("arityfec"), 2328)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIptvforum2dparityfec1010), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIptvforum2dparityfec2005), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1010"), 2330),
                        (intern_str::CaseInsensitive("2005"), 2331),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("arityfec"), 2332)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIptvforumTtsavc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndIptvforumTtsmpeg2), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g2"), 2335)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("avc"), 2334),
                        (intern_str::CaseInsensitive("mpe"), 2336),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1dp"), 2329),
                        (intern_str::CaseInsensitive("2dp"), 2333),
                        (intern_str::CaseInsensitive("tts"), 2337),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("forum"), 2338)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 2325),
                        (intern_str::CaseInsensitive("v"), 2339),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIpunpluggedRcprofile), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("npluggedrcprofile"), 2341)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("t"), 2340),
                        (intern_str::CaseInsensitive("u"), 2342),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIrepositoryPackage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("epositorypackage"), 2344)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndIsacFcs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cs"), 2346)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndIso1178310), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("78310"), 2348)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndIsXpr), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("acf"), 2347),
                        (intern_str::CaseInsensitive("o11"), 2349),
                        (intern_str::CaseInsensitive("xpr"), 2350),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 2244),
                        (intern_str::CaseInsensitive("c"), 2246),
                        (intern_str::CaseInsensitive("e"), 2248),
                        (intern_str::CaseInsensitive("g"), 2250),
                        (intern_str::CaseInsensitive("m"), 2277),
                        (intern_str::CaseInsensitive("n"), 2304),
                        (intern_str::CaseInsensitive("p"), 2343),
                        (intern_str::CaseInsensitive("r"), 2345),
                        (intern_str::CaseInsensitive("s"), 2351),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndJam), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndJapannetDirectoryService), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("vice"), 2354)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndJapannetJpnstoreWakeup), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("up"), 2356)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndJapannetPaymentWakeup), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 2358)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndJapannetRegistrationWakeup), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wakeup"), 2360)],
                    Some(Subtype::VndJapannetRegistration),
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndJapannetSetstoreWakeup), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("up"), 2362)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndJapannetVerificationWakeup), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wakeup"), 2364)],
                    Some(Subtype::VndJapannetVerification),
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("directoryser"), 2355),
                        (intern_str::CaseInsensitive("jpnstorewake"), 2357),
                        (intern_str::CaseInsensitive("paymentwakeu"), 2359),
                        (intern_str::CaseInsensitive("registration"), 2361),
                        (intern_str::CaseInsensitive("setstorewake"), 2363),
                        (intern_str::CaseInsensitive("verification"), 2365),
                    ],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("annet"), 2366)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("m"), 2353),
                        (intern_str::CaseInsensitive("p"), 2367),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndJcpJavameMidletRms), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pjavamemidletrms"), 2369)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndJisp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sp"), 2371)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndJoostJodaArchive), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ostjodaarchive"), 2373)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndJskIsdnNgn), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("kisdnngn"), 2375)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2368),
                        (intern_str::CaseInsensitive("c"), 2370),
                        (intern_str::CaseInsensitive("i"), 2372),
                        (intern_str::CaseInsensitive("o"), 2374),
                        (intern_str::CaseInsensitive("s"), 2376),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndKahootz), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("hootz"), 2378)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndKdeKarbon), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("n"), 2380)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndKdeKchart), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 2382)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndKdeKformula), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ula"), 2384)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndKdeKivio), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndKdeKontour), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ur"), 2387)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndKdeKpresenter), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("enter"), 2389)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndKdeKspread), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ad"), 2391)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndKdeKword), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("arbo"), 2381),
                        (intern_str::CaseInsensitive("char"), 2383),
                        (intern_str::CaseInsensitive("form"), 2385),
                        (intern_str::CaseInsensitive("ivio"), 2386),
                        (intern_str::CaseInsensitive("onto"), 2388),
                        (intern_str::CaseInsensitive("pres"), 2390),
                        (intern_str::CaseInsensitive("spre"), 2392),
                        (intern_str::CaseInsensitive("word"), 2393),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ek"), 2394)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndKenameaapp), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("nameaapp"), 2396)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndKidspiration), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iration"), 2398)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndKinar), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dsp"), 2399),
                        (intern_str::CaseInsensitive("nar"), 2400),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndKoan), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndKodakDescriptor), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("kdescriptor"), 2403)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("an"), 2402),
                        (intern_str::CaseInsensitive("da"), 2404),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2379),
                        (intern_str::CaseInsensitive("d"), 2395),
                        (intern_str::CaseInsensitive("e"), 2397),
                        (intern_str::CaseInsensitive("i"), 2401),
                        (intern_str::CaseInsensitive("o"), 2405),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndLasLas), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndLaszip), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("las"), 2407),
                        (intern_str::CaseInsensitive("zip"), 2408),
                    ],
                    Some(Subtype::VndLas),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndLatexZ), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("exz"), 2410)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("s"), 2409),
                        (intern_str::CaseInsensitive("t"), 2411),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndLeap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ap"), 2413)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndLibertyRequest), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("bertyrequest"), 2415)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndLlamagraphicsLifeBalanceDesktop), 0, 1),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndLlamagraphicsLifeBalanceExchange),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 2418)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("desktop"), 2417),
                        (intern_str::CaseInsensitive("exchang"), 2419),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("amagraphicslifebalance"), 2420)],
                    None,
                    0,
                    22,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndLogipipeCircuit), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pipecircuit"), 2422)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndLoom), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndLotus123), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndLotusApproach), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("roach"), 2426)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndLotusFreelance), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("elance"), 2428)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndLotusNotes), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("es"), 2430)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndLotusOrganizer), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("anizer"), 2432)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndLotusScreencam), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eencam"), 2434)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndLotusWordpro), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dpro"), 2436)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("123"), 2425),
                        (intern_str::CaseInsensitive("app"), 2427),
                        (intern_str::CaseInsensitive("fre"), 2429),
                        (intern_str::CaseInsensitive("not"), 2431),
                        (intern_str::CaseInsensitive("org"), 2433),
                        (intern_str::CaseInsensitive("scr"), 2435),
                        (intern_str::CaseInsensitive("wor"), 2437),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 2438)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gi"), 2423),
                        (intern_str::CaseInsensitive("om"), 2424),
                        (intern_str::CaseInsensitive("tu"), 2439),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndLucentVoice), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("centvoice"), 2441)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2412),
                        (intern_str::CaseInsensitive("e"), 2414),
                        (intern_str::CaseInsensitive("i"), 2416),
                        (intern_str::CaseInsensitive("l"), 2421),
                        (intern_str::CaseInsensitive("o"), 2440),
                        (intern_str::CaseInsensitive("u"), 2442),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMacportsPortpkg), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("portsportpkg"), 2444)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMapboxVectorTile), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("boxvectortile"), 2446)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMarlinDrmActiontoken), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ontoken"), 2448)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMarlinDrmConftoken), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("token"), 2450)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndMarlinDrmLicense), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nse"), 2452)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndMarlinDrmMdcf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("acti"), 2449),
                        (intern_str::CaseInsensitive("conf"), 2451),
                        (intern_str::CaseInsensitive("lice"), 2453),
                        (intern_str::CaseInsensitive("mdcf"), 2454),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lindrm"), 2455)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndMason), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("on"), 2457)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMaxarArchive3tz), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMaxmindMaxmindDb), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("b"), 2460)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ararchive3tz"), 2459),
                        (intern_str::CaseInsensitive("mindmaxmindd"), 2461),
                    ],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 2445),
                        (intern_str::CaseInsensitive("p"), 2447),
                        (intern_str::CaseInsensitive("r"), 2456),
                        (intern_str::CaseInsensitive("s"), 2458),
                        (intern_str::CaseInsensitive("x"), 2462),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMcd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 2464)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMedcalcdata), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMediastationCdkey), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ncdkey"), 2467)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("calcdata"), 2466),
                        (intern_str::CaseInsensitive("iastatio"), 2468),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMeridianSlingshot), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("idianslingshot"), 2470)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 2469),
                        (intern_str::CaseInsensitive("r"), 2471),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMfer), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMfmp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("er"), 2473),
                        (intern_str::CaseInsensitive("mp"), 2474),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMicrografxFlo), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMicrografxIgx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("flo"), 2476),
                        (intern_str::CaseInsensitive("igx"), 2477),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 2478)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMicrosoftIcon), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMicrosoftPortableExecutable), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ableexecutable"), 2481)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMicrosoftWindowsThumbnailCache), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("owsthumbnailcache"), 2483)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("icon"), 2480),
                        (intern_str::CaseInsensitive("port"), 2482),
                        (intern_str::CaseInsensitive("wind"), 2484),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("graf"), 2479),
                        (intern_str::CaseInsensitive("soft"), 2485),
                    ],
                    Some(Subtype::VndMicro),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ro"), 2486)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMiele), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("le"), 2488)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMif), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMinisoftHp3000Save), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("isofthp3000save"), 2491)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMitsubishiMistyGuardTrustweb), 0, 1),
                intern_str::Node::new(
                    &[(
                        intern_str::CaseInsensitive("subishimistyguardtrustweb"),
                        2493,
                    )],
                    None,
                    0,
                    25,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMix), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 2487),
                        (intern_str::CaseInsensitive("e"), 2489),
                        (intern_str::CaseInsensitive("f"), 2490),
                        (intern_str::CaseInsensitive("n"), 2492),
                        (intern_str::CaseInsensitive("t"), 2494),
                        (intern_str::CaseInsensitive("x"), 2495),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMobiusDaf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMobiusDis), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("af"), 2497),
                        (intern_str::CaseInsensitive("is"), 2498),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMobiusMbk), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMobiusMqy), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMobiusMsl), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bk"), 2500),
                        (intern_str::CaseInsensitive("qy"), 2501),
                        (intern_str::CaseInsensitive("sl"), 2502),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMobiusPlc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lc"), 2504)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMobiusTxf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("xf"), 2506)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 2499),
                        (intern_str::CaseInsensitive("m"), 2503),
                        (intern_str::CaseInsensitive("p"), 2505),
                        (intern_str::CaseInsensitive("t"), 2507),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("us"), 2508)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMoml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMophunApplication), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMophunCertificate), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("application"), 2511),
                        (intern_str::CaseInsensitive("certificate"), 2512),
                    ],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("un"), 2513)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMotorolaFlexsuiteAdsi), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 2515)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMotorolaFlexsuiteFis), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMotorolaFlexsuiteGotap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ap"), 2518)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMotorolaFlexsuiteKmr), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMotorolaFlexsuiteTtc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMotorolaFlexsuiteWem), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ads"), 2516),
                        (intern_str::CaseInsensitive("fis"), 2517),
                        (intern_str::CaseInsensitive("got"), 2519),
                        (intern_str::CaseInsensitive("kmr"), 2520),
                        (intern_str::CaseInsensitive("ttc"), 2521),
                        (intern_str::CaseInsensitive("wem"), 2522),
                    ],
                    Some(Subtype::VndMotorolaFlexsuite),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("suite"), 2523)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndMotorolaIprm), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMotorolaReflex), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ex"), 2526)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMotorolaVideop), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("p"), 2528)],
                    Some(Subtype::VndMotorolaVideo),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 2529)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("flex"), 2524),
                        (intern_str::CaseInsensitive("iprm"), 2525),
                        (intern_str::CaseInsensitive("refl"), 2527),
                        (intern_str::CaseInsensitive("vide"), 2530),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rola"), 2531)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndMozillaApng), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 2533)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMozillaXul), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("apn"), 2534),
                        (intern_str::CaseInsensitive("xul"), 2535),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lla"), 2536)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bi"), 2509),
                        (intern_str::CaseInsensitive("ml"), 2510),
                        (intern_str::CaseInsensitive("ph"), 2514),
                        (intern_str::CaseInsensitive("to"), 2532),
                        (intern_str::CaseInsensitive("zi"), 2537),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMpegurl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("egurl"), 2539)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndMs3mfdocument), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("mfdocument"), 2541)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsaDiskImage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("skimage"), 2543)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsArtgalry), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("galry"), 2545)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndMsAsf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("di"), 2544),
                        (intern_str::CaseInsensitive("rt"), 2546),
                        (intern_str::CaseInsensitive("sf"), 2547),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsCabCompressed), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("abcompressed"), 2549)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMseq), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMsExcelAddinMacroEnabled12), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("macroenabled12"), 2552)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndMsExcelSheetBinaryMacroEnabled12),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("bled12"), 2554)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndMsExcelSheetMacroEnabled12), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("binarymacroena"), 2555),
                        (intern_str::CaseInsensitive("macroenabled12"), 2556),
                    ],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsExcelTemplateMacroEnabled12), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("atemacroenabled12"), 2558)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("addin"), 2553),
                        (intern_str::CaseInsensitive("sheet"), 2557),
                        (intern_str::CaseInsensitive("templ"), 2559),
                    ],
                    Some(Subtype::VndMsExcel),
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cel"), 2560)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("q"), 2551),
                        (intern_str::CaseInsensitive("x"), 2561),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsFontobject), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ontobject"), 2563)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsHtmlhelp), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("tmlhelp"), 2565)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsign), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMsIms), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gn"), 2567),
                        (intern_str::CaseInsensitive("ms"), 2568),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsLrm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rm"), 2570)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMsMediapackage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("apackage"), 2572)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsModi), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("edi"), 2573),
                        (intern_str::CaseInsensitive("odi"), 2574),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsOfficeActiveX), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ex"), 2576)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMsOfficetheme), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("activ"), 2577),
                        (intern_str::CaseInsensitive("theme"), 2578),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ffice"), 2579)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndMsPkiSeccat), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iseccat"), 2581)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsPlayreadyInitiator), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("or"), 2583)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMsPlayreadyMediaPya), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMsPlayreadyMediaPyv), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2585),
                        (intern_str::CaseInsensitive("v"), 2586),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("initiat"), 2584),
                        (intern_str::CaseInsensitive("mediapy"), 2587),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ayready"), 2588)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsPowerpointAddinMacroEnabled12), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("macroenabled12"), 2590)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndMsPowerpointPresentationMacroEnabled12),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ntationmacroenabled12"), 2592)],
                    None,
                    0,
                    21,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsPowerpointSlideMacroEnabled12), 0, 1),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndMsPowerpointSlideshowMacroEnabled12),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ed12"), 2595)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("macroenabled12"), 2594),
                        (intern_str::CaseInsensitive("showmacroenabl"), 2596),
                    ],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndMsPowerpointTemplateMacroEnabled12),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("atemacroenabled12"), 2598)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("addin"), 2591),
                        (intern_str::CaseInsensitive("prese"), 2593),
                        (intern_str::CaseInsensitive("slide"), 2597),
                        (intern_str::CaseInsensitive("templ"), 2599),
                    ],
                    Some(Subtype::VndMsPowerpoint),
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("werpoint"), 2600)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsPrintDeviceCapabilities), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lities"), 2602)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndMsPrintSchemaTicket), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("devicecapabi"), 2603),
                        (intern_str::CaseInsensitive("schematicket"), 2604),
                    ],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsProject), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ct"), 2606)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("int"), 2605),
                        (intern_str::CaseInsensitive("oje"), 2607),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("k"), 2582),
                        (intern_str::CaseInsensitive("l"), 2589),
                        (intern_str::CaseInsensitive("o"), 2601),
                        (intern_str::CaseInsensitive("r"), 2608),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsTnef), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nef"), 2610)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndMsWindowsDevicepairing), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pairing"), 2612)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsWindowsNwprintingOob), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("tingoob"), 2614)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsWindowsPrinterpairing), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rpairing"), 2616)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsWindowsWsdOob), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("device"), 2613),
                        (intern_str::CaseInsensitive("nwprin"), 2615),
                        (intern_str::CaseInsensitive("printe"), 2617),
                        (intern_str::CaseInsensitive("wsdoob"), 2618),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dows"), 2619)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndMsWmdrmLicChlgReq), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("req"), 2621)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndMsWmdrmLicResp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("chlg"), 2622),
                        (intern_str::CaseInsensitive("resp"), 2623),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsWmdrmMeterChlgReq), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("req"), 2625)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndMsWmdrmMeterResp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("chlg"), 2626),
                        (intern_str::CaseInsensitive("resp"), 2627),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("er"), 2628)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lic"), 2624),
                        (intern_str::CaseInsensitive("met"), 2629),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rm"), 2630)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndMsWordDocumentMacroEnabled12), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMsWordTemplateMacroEnabled12), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("documentmacroenabled12"), 2632),
                        (intern_str::CaseInsensitive("templatemacroenabled12"), 2633),
                    ],
                    None,
                    0,
                    22,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsWorks), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 2635)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 2634),
                        (intern_str::CaseInsensitive("k"), 2636),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsWpl), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("in"), 2620),
                        (intern_str::CaseInsensitive("md"), 2631),
                        (intern_str::CaseInsensitive("or"), 2637),
                        (intern_str::CaseInsensitive("pl"), 2638),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMsXpsdocument), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("psdocument"), 2640)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 2542),
                        (intern_str::CaseInsensitive("a"), 2548),
                        (intern_str::CaseInsensitive("c"), 2550),
                        (intern_str::CaseInsensitive("e"), 2562),
                        (intern_str::CaseInsensitive("f"), 2564),
                        (intern_str::CaseInsensitive("h"), 2566),
                        (intern_str::CaseInsensitive("i"), 2569),
                        (intern_str::CaseInsensitive("l"), 2571),
                        (intern_str::CaseInsensitive("m"), 2575),
                        (intern_str::CaseInsensitive("o"), 2580),
                        (intern_str::CaseInsensitive("p"), 2609),
                        (intern_str::CaseInsensitive("t"), 2611),
                        (intern_str::CaseInsensitive("w"), 2639),
                        (intern_str::CaseInsensitive("x"), 2641),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMts), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 2643)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMultiadCreatorCif), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("cif"), 2645)],
                    Some(Subtype::VndMultiadCreator),
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("adcreator"), 2646)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMusician), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndMusicNiff), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 2649)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ian"), 2648),
                        (intern_str::CaseInsensitive("nif"), 2650),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMuveeStyle), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("style"), 2652)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lti"), 2647),
                        (intern_str::CaseInsensitive("sic"), 2651),
                        (intern_str::CaseInsensitive("vee"), 2653),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndMynfc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nfc"), 2655)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2463),
                        (intern_str::CaseInsensitive("c"), 2465),
                        (intern_str::CaseInsensitive("e"), 2472),
                        (intern_str::CaseInsensitive("f"), 2475),
                        (intern_str::CaseInsensitive("i"), 2496),
                        (intern_str::CaseInsensitive("o"), 2538),
                        (intern_str::CaseInsensitive("p"), 2540),
                        (intern_str::CaseInsensitive("s"), 2642),
                        (intern_str::CaseInsensitive("t"), 2644),
                        (intern_str::CaseInsensitive("u"), 2654),
                        (intern_str::CaseInsensitive("y"), 2656),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNacamarYbrid), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("camarybrid"), 2658)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNcdControl), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNcdReference), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ce"), 2661)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("control"), 2660),
                        (intern_str::CaseInsensitive("referen"), 2662),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 2663)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNearstInv), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rstinv"), 2665)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndNebumindLine), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("umindline"), 2667)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNervana), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("vana"), 2669)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndNet2phoneCommcenterCommand), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("onecommcentercommand"), 2671)],
                    None,
                    0,
                    20,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNetFpx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2ph"), 2672),
                        (intern_str::CaseInsensitive("fpx"), 2673),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNeurolanguageNlu), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rolanguagenlu"), 2675)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2666),
                        (intern_str::CaseInsensitive("b"), 2668),
                        (intern_str::CaseInsensitive("r"), 2670),
                        (intern_str::CaseInsensitive("t"), 2674),
                        (intern_str::CaseInsensitive("u"), 2676),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNimn), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNintendoNitroRom), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 2679)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNintendoSnesRom), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("nitroro"), 2680),
                        (intern_str::CaseInsensitive("snesrom"), 2681),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("endo"), 2682)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndNitf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mn"), 2678),
                        (intern_str::CaseInsensitive("nt"), 2683),
                        (intern_str::CaseInsensitive("tf"), 2684),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNoblenetDirectory), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ectory"), 2686)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndNoblenetSealer), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ler"), 2688)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndNoblenetWeb), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dir"), 2687),
                        (intern_str::CaseInsensitive("sea"), 2689),
                        (intern_str::CaseInsensitive("web"), 2690),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("net"), 2691)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaCatalogs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ogs"), 2693)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaConml), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("atal"), 2694),
                        (intern_str::CaseInsensitive("onml"), 2695),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaInterleavedMultimedia), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("dmultimedia"), 2697)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaIptvConfig), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaISdsRadioPresets), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("resets"), 2700)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("nterleave"), 2698),
                        (intern_str::CaseInsensitive("ptvconfig"), 2699),
                        (intern_str::CaseInsensitive("sdsradiop"), 2701),
                    ],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaLandmarkcollection), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("collection"), 2703)],
                    Some(Subtype::VndNokiaLandmark),
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("andmark"), 2704)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaMobileXmf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("exmf"), 2706)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaMp4vr), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("obil"), 2707),
                        (intern_str::CaseInsensitive("p4vr"), 2708),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaNcd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaNGageAc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaNGageData), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ta"), 2712)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ac"), 2711),
                        (intern_str::CaseInsensitive("da"), 2713),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ge"), 2714)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cd"), 2710),
                        (intern_str::CaseInsensitive("ga"), 2715),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaPcd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cd"), 2717)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaRadioPresets), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("s"), 2719)],
                    Some(Subtype::VndNokiaRadioPreset),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("adiopreset"), 2720)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNokiaVideovoip), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ideovoip"), 2722)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 2696),
                        (intern_str::CaseInsensitive("i"), 2702),
                        (intern_str::CaseInsensitive("l"), 2705),
                        (intern_str::CaseInsensitive("m"), 2709),
                        (intern_str::CaseInsensitive("n"), 2716),
                        (intern_str::CaseInsensitive("p"), 2718),
                        (intern_str::CaseInsensitive("r"), 2721),
                        (intern_str::CaseInsensitive("v"), 2723),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNortelVbk), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lvbk"), 2725)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndNovadigmEdm), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNovadigmEdx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("m"), 2727),
                        (intern_str::CaseInsensitive("x"), 2728),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNovadigmExt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 2730)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 2729),
                        (intern_str::CaseInsensitive("x"), 2731),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("igme"), 2732)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ble"), 2692),
                        (intern_str::CaseInsensitive("kia"), 2724),
                        (intern_str::CaseInsensitive("rte"), 2726),
                        (intern_str::CaseInsensitive("vad"), 2733),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNttLocalContentShare), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ntshare"), 2735)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNttLocalFileTransfer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ransfer"), 2737)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNttLocalOgwRemoteAccess), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("moteaccess"), 2739)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndNttLocalSipTaRemote), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNttLocalSipTaTcpStream), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eam"), 2742)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("remote"), 2741),
                        (intern_str::CaseInsensitive("tcpstr"), 2743),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("conte"), 2736),
                        (intern_str::CaseInsensitive("filet"), 2738),
                        (intern_str::CaseInsensitive("ogwre"), 2740),
                        (intern_str::CaseInsensitive("sipta"), 2744),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tlocal"), 2745)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndNueraEcelp4800), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNueraEcelp7470), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndNueraEcelp9600), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("4800"), 2747),
                        (intern_str::CaseInsensitive("7470"), 2748),
                        (intern_str::CaseInsensitive("9600"), 2749),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eraecelp"), 2750)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2659),
                        (intern_str::CaseInsensitive("c"), 2664),
                        (intern_str::CaseInsensitive("e"), 2677),
                        (intern_str::CaseInsensitive("i"), 2685),
                        (intern_str::CaseInsensitive("o"), 2734),
                        (intern_str::CaseInsensitive("t"), 2746),
                        (intern_str::CaseInsensitive("u"), 2751),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOasisOpendocumentChartTemplate), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 2753)],
                    Some(Subtype::VndOasisOpendocumentChart),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 2754)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOasisOpendocumentDatabase), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("base"), 2756)], None, 0, 4),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOasisOpendocumentFormulaTemplate),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 2758)],
                    Some(Subtype::VndOasisOpendocumentFormula),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ula"), 2759)], None, 0, 3),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOasisOpendocumentGraphicsTemplate),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 2761)],
                    Some(Subtype::VndOasisOpendocumentGraphics),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("hics"), 2762)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndOasisOpendocumentImageTemplate), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 2764)],
                    Some(Subtype::VndOasisOpendocumentImage),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 2765)], None, 0, 1),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOasisOpendocumentPresentationTemplate),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 2767)],
                    Some(Subtype::VndOasisOpendocumentPresentation),
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("entation"), 2768)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOasisOpendocumentSpreadsheetTemplate),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 2770)],
                    Some(Subtype::VndOasisOpendocumentSpreadsheet),
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("adsheet"), 2771)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOasisOpendocumentTextMaster), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ter"), 2773)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndOasisOpendocumentTextTemplate), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("plate"), 2775)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndOasisOpendocumentTextWeb), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mas"), 2774),
                        (intern_str::CaseInsensitive("tem"), 2776),
                        (intern_str::CaseInsensitive("web"), 2777),
                    ],
                    Some(Subtype::VndOasisOpendocumentText),
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("char"), 2755),
                        (intern_str::CaseInsensitive("data"), 2757),
                        (intern_str::CaseInsensitive("form"), 2760),
                        (intern_str::CaseInsensitive("grap"), 2763),
                        (intern_str::CaseInsensitive("imag"), 2766),
                        (intern_str::CaseInsensitive("pres"), 2769),
                        (intern_str::CaseInsensitive("spre"), 2772),
                        (intern_str::CaseInsensitive("text"), 2778),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sisopendocument"), 2779)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndObjectvideo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ectvideo"), 2781)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndObn), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("j"), 2782),
                        (intern_str::CaseInsensitive("n"), 2783),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOcf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOciImageManifestV1), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("imagemanifestv1"), 2786)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOctelSbc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("elsbc"), 2788)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 2785),
                        (intern_str::CaseInsensitive("i"), 2787),
                        (intern_str::CaseInsensitive("t"), 2789),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOftnL10n), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tnl10n"), 2791)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndOipfContentaccessdownload), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOipfContentaccessstreaming), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 2794)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("download"), 2793),
                        (intern_str::CaseInsensitive("streamin"), 2795),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOipfCspgHexbinary), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ontentaccess"), 2796),
                        (intern_str::CaseInsensitive("spghexbinary"), 2797),
                    ],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOipfDaeSvg), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOipfDaeXhtml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 2800)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("svg"), 2799),
                        (intern_str::CaseInsensitive("xht"), 2801),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ae"), 2802)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndOipfMippvcontrolmessage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ippvcontrolmessage"), 2804)],
                    None,
                    0,
                    18,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOipfPaeGem), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("aegem"), 2806)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndOipfSpdiscovery), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("very"), 2808)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndOipfSpdlist), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("isco"), 2809),
                        (intern_str::CaseInsensitive("list"), 2810),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pd"), 2811)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndOipfUeprofile), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOipfUserprofile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("le"), 2814)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("eprofile"), 2813),
                        (intern_str::CaseInsensitive("serprofi"), 2815),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 2798),
                        (intern_str::CaseInsensitive("d"), 2803),
                        (intern_str::CaseInsensitive("m"), 2805),
                        (intern_str::CaseInsensitive("p"), 2807),
                        (intern_str::CaseInsensitive("s"), 2812),
                        (intern_str::CaseInsensitive("u"), 2816),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pf"), 2817)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndOlpcSugar), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pcsugar"), 2819)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOmaBcastAssociatedProcedureParameter),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(
                        intern_str::CaseInsensitive("ssociatedprocedureparameter"),
                        2821,
                    )],
                    None,
                    0,
                    27,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastDrmTrigger), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rmtrigger"), 2823)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastImd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("md"), 2825)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastLtkm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tkm"), 2827)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastNotification), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("otification"), 2829)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastProvisioningtrigger), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rovisioningtrigger"), 2831)],
                    None,
                    0,
                    18,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastSgboot), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("oot"), 2833)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastSgdd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastSgdu), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 2835),
                        (intern_str::CaseInsensitive("u"), 2836),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 2834),
                        (intern_str::CaseInsensitive("d"), 2837),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastSimpleSymbolContainer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("mplesymbolcontainer"), 2839)],
                    None,
                    0,
                    19,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastSmartcardTrigger), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("artcardtrigger"), 2841)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastSprov), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rov"), 2843)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndOmaBcastStkm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("km"), 2845)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 2838),
                        (intern_str::CaseInsensitive("i"), 2840),
                        (intern_str::CaseInsensitive("m"), 2842),
                        (intern_str::CaseInsensitive("p"), 2844),
                        (intern_str::CaseInsensitive("t"), 2846),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2822),
                        (intern_str::CaseInsensitive("d"), 2824),
                        (intern_str::CaseInsensitive("i"), 2826),
                        (intern_str::CaseInsensitive("l"), 2828),
                        (intern_str::CaseInsensitive("n"), 2830),
                        (intern_str::CaseInsensitive("p"), 2832),
                        (intern_str::CaseInsensitive("s"), 2847),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cast"), 2848)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndOmaCabAddressBook), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ressbook"), 2850)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaCabFeatureHandler), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("turehandler"), 2852)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaCabPcc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmaCabSubsInvite), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sinvite"), 2855)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaCabUserPrefs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rprefs"), 2857)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("add"), 2851),
                        (intern_str::CaseInsensitive("fea"), 2853),
                        (intern_str::CaseInsensitive("pcc"), 2854),
                        (intern_str::CaseInsensitive("sub"), 2856),
                        (intern_str::CaseInsensitive("use"), 2858),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ab"), 2859)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndOmaDcdc), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("c"), 2861)],
                    Some(Subtype::VndOmaDcd),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 2862)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmaDd2), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("2"), 2864)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmaDrmRisd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mrisd"), 2866)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndOmadsEmail), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mail"), 2868)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndOmadsFile), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmadsFolder), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("er"), 2871)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ile"), 2870),
                        (intern_str::CaseInsensitive("old"), 2872),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 2869),
                        (intern_str::CaseInsensitive("f"), 2873),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 2863),
                        (intern_str::CaseInsensitive("d"), 2865),
                        (intern_str::CaseInsensitive("r"), 2867),
                        (intern_str::CaseInsensitive("s"), 2874),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaGroupUsageList), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("roupusagelist"), 2876)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmalocSuplInit), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("plinit"), 2878)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndOmaLwm2m), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ocsu"), 2879),
                        (intern_str::CaseInsensitive("wm2m"), 2880),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaPal), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmaPocDetailedProgressReport), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("edprogressreport"), 2883)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaPocFinalReport), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eport"), 2885)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndOmaPocGroups), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmaPocInvocationDescriptor), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("tiondescriptor"), 2888)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaPocOptimizedProgressReport), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("zedprogressreport"), 2890)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("detail"), 2884),
                        (intern_str::CaseInsensitive("finalr"), 2886),
                        (intern_str::CaseInsensitive("groups"), 2887),
                        (intern_str::CaseInsensitive("invoca"), 2889),
                        (intern_str::CaseInsensitive("optimi"), 2891),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaPush), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("h"), 2893)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("al"), 2882),
                        (intern_str::CaseInsensitive("oc"), 2892),
                        (intern_str::CaseInsensitive("us"), 2894),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaScidmMessages), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("mmessages"), 2896)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOmaScwsConfig), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmaScwsHttpRequest), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmaScwsHttpResponse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 2900)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("quest"), 2899),
                        (intern_str::CaseInsensitive("spons"), 2901),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("config"), 2898),
                        (intern_str::CaseInsensitive("httpre"), 2902),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("id"), 2897),
                        (intern_str::CaseInsensitive("ws"), 2903),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 2904)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOmaXcapDirectory), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("capdirectory"), 2906)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 2849),
                        (intern_str::CaseInsensitive("c"), 2860),
                        (intern_str::CaseInsensitive("d"), 2875),
                        (intern_str::CaseInsensitive("g"), 2877),
                        (intern_str::CaseInsensitive("l"), 2881),
                        (intern_str::CaseInsensitive("p"), 2895),
                        (intern_str::CaseInsensitive("s"), 2905),
                        (intern_str::CaseInsensitive("x"), 2907),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 2908)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOnepagertamp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOnepagertamx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("p"), 2910),
                        (intern_str::CaseInsensitive("x"), 2911),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOnepagertatp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOnepagertatx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("p"), 2913),
                        (intern_str::CaseInsensitive("x"), 2914),
                    ],
                    Some(Subtype::VndOnepagertat),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("m"), 2912),
                        (intern_str::CaseInsensitive("t"), 2915),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ta"), 2916)],
                    Some(Subtype::VndOnepager),
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("epager"), 2917)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndOpenbloxGameBinary), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("binary"), 2919)],
                    Some(Subtype::VndOpenbloxGame),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("xgame"), 2920)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndOpeneyeOeb), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("oeb"), 2922)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndOpengex), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOpenofficeorgExtension), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iceorgextension"), 2925)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOpenstreetmapData), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eetmapdata"), 2927)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOpentimestampsOts), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("estampsots"), 2929)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentCustomProperties),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentCustomXmlProperties),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ies"), 2932)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("properties"), 2931),
                        (intern_str::CaseInsensitive("xmlpropert"), 2933),
                    ],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 2934)], None, 0, 1),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentDrawingmlChartshapes),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("shapes"), 2936)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentDrawingmlChart),
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramColors),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rs"), 2938)], None, 0, 2),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramData),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramLayout),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ut"), 2941)], None, 0, 2),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramStyle),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 2943)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("colo"), 2939),
                        (intern_str::CaseInsensitive("data"), 2940),
                        (intern_str::CaseInsensitive("layo"), 2942),
                        (intern_str::CaseInsensitive("styl"), 2944),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("am"), 2945)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("chart"), 2937),
                        (intern_str::CaseInsensitive("diagr"), 2946),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ml"), 2947)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentDrawing),
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ng"), 2948)], None, 0, 2),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentExtendedProperties),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("dedproperties"), 2950)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlCommentAuthors),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("uthors"), 2952)], None, 0, 6),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlComments),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2953),
                        (intern_str::CaseInsensitive("s"), 2954),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("omment"), 2955)], None, 0, 6),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlHandoutMaster),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("andoutmaster"), 2957)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlNotesMaster),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 2959)], None, 0, 1),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlNotesSlide),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("maste"), 2960),
                        (intern_str::CaseInsensitive("slide"), 2961),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("otes"), 2962)], None, 0, 4),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlPresentationMain),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("main"), 2964)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlPresentation),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ion"), 2965)], None, 0, 3),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlPresProps),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("entat"), 2966),
                        (intern_str::CaseInsensitive("props"), 2967),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("res"), 2968)], None, 0, 3),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideLayout),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ut"), 2970)], None, 0, 2),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideMaster),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("er"), 2972)], None, 0, 2),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideshowMain),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("main"), 2974)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideshow),
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideUpdateInfo),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("teinfo"), 2976)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("layo"), 2971),
                        (intern_str::CaseInsensitive("mast"), 2973),
                        (intern_str::CaseInsensitive("show"), 2975),
                        (intern_str::CaseInsensitive("upda"), 2977),
                    ],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlide),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lide"), 2978)], None, 0, 4),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTableStyles),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("estyles"), 2980)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTags),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bl"), 2981),
                        (intern_str::CaseInsensitive("gs"), 2982),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTemplateMain),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("main"), 2984)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTemplate),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mplate"), 2985)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2983),
                        (intern_str::CaseInsensitive("e"), 2986),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentPresentationmlViewProps),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iewprops"), 2988)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 2956),
                        (intern_str::CaseInsensitive("h"), 2958),
                        (intern_str::CaseInsensitive("n"), 2963),
                        (intern_str::CaseInsensitive("p"), 2969),
                        (intern_str::CaseInsensitive("s"), 2979),
                        (intern_str::CaseInsensitive("t"), 2987),
                        (intern_str::CaseInsensitive("v"), 2989),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ntationml"), 2990)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlCalcChain),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lcchain"), 2992)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlChartsheet),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("artsheet"), 2994)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlComments),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlConnections),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ons"), 2997)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mments"), 2996),
                        (intern_str::CaseInsensitive("nnecti"), 2998),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2993),
                        (intern_str::CaseInsensitive("h"), 2995),
                        (intern_str::CaseInsensitive("o"), 2999),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlDialogsheet),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ialogsheet"), 3001)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlExternalLink),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xternallink"), 3003)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheDefinition),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ion"), 3005)], None, 0, 3),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheRecords),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("definit"), 3006),
                        (intern_str::CaseInsensitive("records"), 3007),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotTable),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cache"), 3008),
                        (intern_str::CaseInsensitive("table"), 3009),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ivot"), 3010)], None, 0, 4),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlQueryTable),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("uerytable"), 3012)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionHeaders),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ders"), 3014)], None, 0, 4),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionLog),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("hea"), 3015),
                        (intern_str::CaseInsensitive("log"), 3016),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("evision"), 3017)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSharedStrings),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("dstrings"), 3019)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMain),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMetadata),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("data"), 3022)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ain"), 3021),
                        (intern_str::CaseInsensitive("eta"), 3023),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("m"), 3024)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSheet),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("are"), 3020),
                        (intern_str::CaseInsensitive("eet"), 3025),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlStyles),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("yles"), 3027)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("h"), 3026),
                        (intern_str::CaseInsensitive("t"), 3028),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTableSingleCells),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("singlecells"), 3030)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTable),
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplateMain),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("main"), 3032)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplate),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ate"), 3033)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("able"), 3031),
                        (intern_str::CaseInsensitive("empl"), 3034),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlUserNames),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sernames"), 3036)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlVolatileDependencies),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("olatiledependencies"), 3038)],
                    None,
                    0,
                    19,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlWorksheet),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("orksheet"), 3040)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3000),
                        (intern_str::CaseInsensitive("d"), 3002),
                        (intern_str::CaseInsensitive("e"), 3004),
                        (intern_str::CaseInsensitive("p"), 3011),
                        (intern_str::CaseInsensitive("q"), 3013),
                        (intern_str::CaseInsensitive("r"), 3018),
                        (intern_str::CaseInsensitive("s"), 3029),
                        (intern_str::CaseInsensitive("t"), 3035),
                        (intern_str::CaseInsensitive("u"), 3037),
                        (intern_str::CaseInsensitive("v"), 3039),
                        (intern_str::CaseInsensitive("w"), 3041),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("dsheetml"), 3042)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentThemeOverride),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("override"), 3044)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentTheme),
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentVmlDrawing),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("awing"), 3046)], None, 0, 5),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlComments),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("omments"), 3048)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentGlossary),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sary"), 3050)], None, 0, 4),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentMain),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("glos"), 3051),
                        (intern_str::CaseInsensitive("main"), 3052),
                    ],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlDocument),
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ocument"), 3053)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlEndnotes),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ndnotes"), 3055)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlFontTable),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("table"), 3057)], None, 0, 5),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlFooter),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlFootnotes),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tes"), 3060)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("er"), 3059),
                        (intern_str::CaseInsensitive("no"), 3061),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("nt"), 3058),
                        (intern_str::CaseInsensitive("ot"), 3062),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 3063)], None, 0, 1),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlNumbering),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("umbering"), 3065)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlSettings),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("gs"), 3067)], None, 0, 2),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlStyles),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ettin"), 3068),
                        (intern_str::CaseInsensitive("tyles"), 3069),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlTemplateMain),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("main"), 3071)],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlTemplate),
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("emplate"), 3072)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlWebSettings),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ebsettings"), 3074)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3049),
                        (intern_str::CaseInsensitive("d"), 3054),
                        (intern_str::CaseInsensitive("e"), 3056),
                        (intern_str::CaseInsensitive("f"), 3064),
                        (intern_str::CaseInsensitive("n"), 3066),
                        (intern_str::CaseInsensitive("s"), 3070),
                        (intern_str::CaseInsensitive("t"), 3073),
                        (intern_str::CaseInsensitive("w"), 3075),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rocessingml"), 3076)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("custo"), 2935),
                        (intern_str::CaseInsensitive("drawi"), 2949),
                        (intern_str::CaseInsensitive("exten"), 2951),
                        (intern_str::CaseInsensitive("prese"), 2991),
                        (intern_str::CaseInsensitive("sprea"), 3043),
                        (intern_str::CaseInsensitive("theme"), 3045),
                        (intern_str::CaseInsensitive("vmldr"), 3047),
                        (intern_str::CaseInsensitive("wordp"), 3077),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ocument"), 3078)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsPackageCoreProperties),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 3080)], None, 0, 1),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsPackageDigitalSignatureXmlsignature),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("urexmlsignature"), 3082)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(
                    &[],
                    Some(Subtype::VndOpenxmlformatsPackageRelationships),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("corepropertie"), 3081),
                        (intern_str::CaseInsensitive("digitalsignat"), 3083),
                        (intern_str::CaseInsensitive("relationships"), 3084),
                    ],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("officed"), 3079),
                        (intern_str::CaseInsensitive("package"), 3085),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("formats"), 3086)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("blo"), 2921),
                        (intern_str::CaseInsensitive("eye"), 2923),
                        (intern_str::CaseInsensitive("gex"), 2924),
                        (intern_str::CaseInsensitive("off"), 2926),
                        (intern_str::CaseInsensitive("str"), 2928),
                        (intern_str::CaseInsensitive("tim"), 2930),
                        (intern_str::CaseInsensitive("xml"), 3087),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("en"), 3088)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndOracleResource), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ce"), 3090)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndOrangeIndata), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cleresour"), 3091),
                        (intern_str::CaseInsensitive("ngeindata"), 3092),
                    ],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 3093)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOsaNetdeploy), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("netdeploy"), 3095)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOsgeoMapguidePackage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("omapguidepackage"), 3097)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOsgiBundle), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ndle"), 3099)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndOsgiDp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndOsgiSubsystem), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("bsystem"), 3102)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bu"), 3100),
                        (intern_str::CaseInsensitive("dp"), 3101),
                        (intern_str::CaseInsensitive("su"), 3103),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 3098),
                        (intern_str::CaseInsensitive("i"), 3104),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3096),
                        (intern_str::CaseInsensitive("g"), 3105),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOtpsCtKip), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("psctkip"), 3107)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndOxliCountgraph), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("licountgraph"), 3109)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 2780),
                        (intern_str::CaseInsensitive("b"), 2784),
                        (intern_str::CaseInsensitive("c"), 2790),
                        (intern_str::CaseInsensitive("f"), 2792),
                        (intern_str::CaseInsensitive("i"), 2818),
                        (intern_str::CaseInsensitive("l"), 2820),
                        (intern_str::CaseInsensitive("m"), 2909),
                        (intern_str::CaseInsensitive("n"), 2918),
                        (intern_str::CaseInsensitive("p"), 3089),
                        (intern_str::CaseInsensitive("r"), 3094),
                        (intern_str::CaseInsensitive("s"), 3106),
                        (intern_str::CaseInsensitive("t"), 3108),
                        (intern_str::CaseInsensitive("x"), 3110),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPagerduty), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("erduty"), 3112)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndPalm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 3114)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndPanoply), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("oply"), 3116)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndPaosXml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sxml"), 3118)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndParasolidTransmitBinary), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ry"), 3120)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndParasolidTransmitText), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bina"), 3121),
                        (intern_str::CaseInsensitive("text"), 3122),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("asolidtransmit"), 3123)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPatentdive), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndPatientecommsdoc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mmsdoc"), 3126)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("entdive"), 3125),
                        (intern_str::CaseInsensitive("ienteco"), 3127),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPawaafile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("aafile"), 3129)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 3113),
                        (intern_str::CaseInsensitive("l"), 3115),
                        (intern_str::CaseInsensitive("n"), 3117),
                        (intern_str::CaseInsensitive("o"), 3119),
                        (intern_str::CaseInsensitive("r"), 3124),
                        (intern_str::CaseInsensitive("t"), 3128),
                        (intern_str::CaseInsensitive("w"), 3130),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPcoB16), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("16"), 3132)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndPcos), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 3133),
                        (intern_str::CaseInsensitive("s"), 3134),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 3135)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndPgFormat), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndPgOsasli), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("format"), 3137),
                        (intern_str::CaseInsensitive("osasli"), 3138),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPiaccessApplicationLicence), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ssapplicationlicence"), 3140)],
                    None,
                    0,
                    20,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPicsel), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("acce"), 3141),
                        (intern_str::CaseInsensitive("csel"), 3142),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPmiWidget), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iwidget"), 3144)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPocGroupAdvertisement), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ertisement"), 3146)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPocketlearn), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("groupadv"), 3147),
                        (intern_str::CaseInsensitive("ketlearn"), 3148),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPowerbuilder6S), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("s"), 3150)],
                    Some(Subtype::VndPowerbuilder6),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPowerbuilder75S), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("s"), 3152)],
                    Some(Subtype::VndPowerbuilder75),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPowerbuilder7S), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("5"), 3153),
                        (intern_str::CaseInsensitive("s"), 3154),
                    ],
                    Some(Subtype::VndPowerbuilder7),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("6"), 3151),
                        (intern_str::CaseInsensitive("7"), 3155),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("erbuilder"), 3156)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3149),
                        (intern_str::CaseInsensitive("w"), 3157),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPreminet), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndPresonusMultitrack), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("multitrack"), 3160)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPreviewsystemsBox), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ystemsbox"), 3162)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("minet"), 3159),
                        (intern_str::CaseInsensitive("sonus"), 3161),
                        (intern_str::CaseInsensitive("views"), 3163),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndProteusMagazine), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("teusmagazine"), 3165)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("e"), 3164),
                        (intern_str::CaseInsensitive("o"), 3166),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPsfs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("fs"), 3168)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndPublishareDeltaTree), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("blisharedeltatree"), 3170)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndPviPtid1), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("iptid1"), 3172)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndPwgMultiplexed), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 3174)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndPwgXhtmlPrint), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("multiplexe"), 3175),
                        (intern_str::CaseInsensitive("xhtmlprint"), 3176),
                    ],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 3177)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndPythaPyox), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("thapyox"), 3179)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3131),
                        (intern_str::CaseInsensitive("c"), 3136),
                        (intern_str::CaseInsensitive("g"), 3139),
                        (intern_str::CaseInsensitive("i"), 3143),
                        (intern_str::CaseInsensitive("m"), 3145),
                        (intern_str::CaseInsensitive("o"), 3158),
                        (intern_str::CaseInsensitive("r"), 3167),
                        (intern_str::CaseInsensitive("s"), 3169),
                        (intern_str::CaseInsensitive("u"), 3171),
                        (intern_str::CaseInsensitive("v"), 3173),
                        (intern_str::CaseInsensitive("w"), 3178),
                        (intern_str::CaseInsensitive("y"), 3180),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndQualcommBrewAppRes), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("commbrewappres"), 3182)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndQuarantainenet), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndQuarkQuarkXPress), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ss"), 3185)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("antainenet"), 3184),
                        (intern_str::CaseInsensitive("kquarkxpre"), 3186),
                    ],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("l"), 3183),
                        (intern_str::CaseInsensitive("r"), 3187),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndQuobjectQuoxdocument), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("bjectquoxdocument"), 3189)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3188),
                        (intern_str::CaseInsensitive("o"), 3190),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("u"), 3191)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndRadgamettoolsBink), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndRadgamettoolsSmacker), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ker"), 3194)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bink"), 3193),
                        (intern_str::CaseInsensitive("smac"), 3195),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("amettools"), 3196)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRadiance), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMoml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlAuditConf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlAuditConn), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 3200),
                        (intern_str::CaseInsensitive("n"), 3201),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlAuditDialog), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("log"), 3203)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlAuditStream), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eam"), 3205)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("con"), 3202),
                        (intern_str::CaseInsensitive("dia"), 3204),
                        (intern_str::CaseInsensitive("str"), 3206),
                    ],
                    Some(Subtype::VndRadisysMsmlAudit),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 3207)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlBasicLayout), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("clayout"), 3209)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlConf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlDialogBase), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 3212)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlDialogFaxDetect), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlDialogFaxSendrecv), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cv"), 3215)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("detect"), 3214),
                        (intern_str::CaseInsensitive("sendre"), 3216),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlDialogGroup), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("up"), 3218)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlDialogSpeech), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ech"), 3220)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndRadisysMsmlDialogTransform), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nsform"), 3222)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bas"), 3213),
                        (intern_str::CaseInsensitive("fax"), 3217),
                        (intern_str::CaseInsensitive("gro"), 3219),
                        (intern_str::CaseInsensitive("spe"), 3221),
                        (intern_str::CaseInsensitive("tra"), 3223),
                    ],
                    Some(Subtype::VndRadisysMsmlDialog),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("og"), 3224)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("audi"), 3208),
                        (intern_str::CaseInsensitive("basi"), 3210),
                        (intern_str::CaseInsensitive("conf"), 3211),
                        (intern_str::CaseInsensitive("dial"), 3225),
                    ],
                    Some(Subtype::VndRadisysMsml),
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("oml"), 3199),
                        (intern_str::CaseInsensitive("sml"), 3226),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ance"), 3198),
                        (intern_str::CaseInsensitive("sysm"), 3227),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 3197),
                        (intern_str::CaseInsensitive("i"), 3228),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRainstorData), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("nstordata"), 3230)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRapid), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("id"), 3232)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndRar), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 3229),
                        (intern_str::CaseInsensitive("i"), 3231),
                        (intern_str::CaseInsensitive("p"), 3233),
                        (intern_str::CaseInsensitive("r"), 3234),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRealvncBed), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lvncbed"), 3236)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRecordareMusicxml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ordaremusicxml"), 3238)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRenLearnRlprint), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("learnrlprint"), 3240)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndResilientLogic), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ntlogic"), 3242)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRestful), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ilie"), 3243),
                        (intern_str::CaseInsensitive("tful"), 3244),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3237),
                        (intern_str::CaseInsensitive("c"), 3239),
                        (intern_str::CaseInsensitive("n"), 3241),
                        (intern_str::CaseInsensitive("s"), 3245),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRhetorex32kadpcm), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("etorex32kadpcm"), 3247)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRigCryptonote), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("cryptonote"), 3249)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRimCod), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cod"), 3251)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndRip), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 3250),
                        (intern_str::CaseInsensitive("m"), 3252),
                        (intern_str::CaseInsensitive("p"), 3253),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRosetteAnnotatedDataModel), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("teddatamodel"), 3255)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRoute66Link66), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("setteannota"), 3256),
                        (intern_str::CaseInsensitive("ute66link66"), 3257),
                    ],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndRs274x), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("274x"), 3259)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndRuckusDownload), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ckusdownload"), 3261)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3235),
                        (intern_str::CaseInsensitive("e"), 3246),
                        (intern_str::CaseInsensitive("h"), 3248),
                        (intern_str::CaseInsensitive("i"), 3254),
                        (intern_str::CaseInsensitive("o"), 3258),
                        (intern_str::CaseInsensitive("s"), 3260),
                        (intern_str::CaseInsensitive("u"), 3262),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndS3sms), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sms"), 3264)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndSailingtrackerTrack), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lingtrackertrack"), 3266)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSapVds), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("vds"), 3268)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndSar), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 3267),
                        (intern_str::CaseInsensitive("p"), 3269),
                        (intern_str::CaseInsensitive("r"), 3270),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSbmCid), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSbmMid2), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("2"), 3273)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cid"), 3272),
                        (intern_str::CaseInsensitive("mid"), 3274),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 3275)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndScribus), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ribus"), 3277)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndSealed3df), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("df"), 3279)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndSealedCsf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sf"), 3281)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndSealedDoc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("oc"), 3283)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndSealedEml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 3285)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndSealedmediaSoftsealGif), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("if"), 3287)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndSealedmediaSoftsealHtml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tml"), 3289)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndSealedmediaSoftsealJpg), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pg"), 3291)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndSealedmediaSoftsealMov), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSealedmediaSoftsealMpeg), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 3294)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ov"), 3293),
                        (intern_str::CaseInsensitive("pe"), 3295),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSealedmediaSoftsealPdf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("df"), 3297)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("g"), 3288),
                        (intern_str::CaseInsensitive("h"), 3290),
                        (intern_str::CaseInsensitive("j"), 3292),
                        (intern_str::CaseInsensitive("m"), 3296),
                        (intern_str::CaseInsensitive("p"), 3298),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iasoftseal"), 3299)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSealedMht), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSealedMpeg1), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSealedMpeg4), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 3302),
                        (intern_str::CaseInsensitive("4"), 3303),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 3304)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ed"), 3300),
                        (intern_str::CaseInsensitive("ht"), 3301),
                        (intern_str::CaseInsensitive("pe"), 3305),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSealedNet), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("et"), 3307)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndSealedPng), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSealedPpt), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ng"), 3309),
                        (intern_str::CaseInsensitive("pt"), 3310),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSealedSwf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("wf"), 3312)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndSealedTiff), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("iff"), 3314)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndSealedXls), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ls"), 3316)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 3280),
                        (intern_str::CaseInsensitive("c"), 3282),
                        (intern_str::CaseInsensitive("d"), 3284),
                        (intern_str::CaseInsensitive("e"), 3286),
                        (intern_str::CaseInsensitive("m"), 3306),
                        (intern_str::CaseInsensitive("n"), 3308),
                        (intern_str::CaseInsensitive("p"), 3311),
                        (intern_str::CaseInsensitive("s"), 3313),
                        (intern_str::CaseInsensitive("t"), 3315),
                        (intern_str::CaseInsensitive("x"), 3317),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("led"), 3318)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndSeemail), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mail"), 3320)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndSeis), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 3322)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSema), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSemd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSemf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3324),
                        (intern_str::CaseInsensitive("d"), 3325),
                        (intern_str::CaseInsensitive("f"), 3326),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSenxWarpscript), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xwarpscript"), 3328)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3319),
                        (intern_str::CaseInsensitive("e"), 3321),
                        (intern_str::CaseInsensitive("i"), 3323),
                        (intern_str::CaseInsensitive("m"), 3327),
                        (intern_str::CaseInsensitive("n"), 3329),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndShadeSaveFile), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndShanaInformedFormdata), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndShanaInformedFormtemplate), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("late"), 3333)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("data"), 3332),
                        (intern_str::CaseInsensitive("temp"), 3334),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndShanaInformedInterchange), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rchange"), 3336)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndShanaInformedPackage), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("age"), 3338)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("form"), 3335),
                        (intern_str::CaseInsensitive("inte"), 3337),
                        (intern_str::CaseInsensitive("pack"), 3339),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("desavefile"), 3331),
                        (intern_str::CaseInsensitive("nainformed"), 3340),
                    ],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndShootproof), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("of"), 3342)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndShopkick), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("otpro"), 3343),
                        (intern_str::CaseInsensitive("pkick"), 3344),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndShp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndShx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3341),
                        (intern_str::CaseInsensitive("o"), 3345),
                        (intern_str::CaseInsensitive("p"), 3346),
                        (intern_str::CaseInsensitive("x"), 3347),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSigrokSession), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ksession"), 3349)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSimTechMindMapper), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("chmindmapper"), 3351)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSiren), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gro"), 3350),
                        (intern_str::CaseInsensitive("mte"), 3352),
                        (intern_str::CaseInsensitive("ren"), 3353),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSmaf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSmartNotebook), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("k"), 3356)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSmartTeacher), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("noteboo"), 3357),
                        (intern_str::CaseInsensitive("teacher"), 3358),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 3359)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 3355),
                        (intern_str::CaseInsensitive("r"), 3360),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 3361)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSnesdevPageTable), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("esdevpagetable"), 3363)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSoftware602FillerFormXmlZip), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xmlzip"), 3365)],
                    Some(Subtype::VndSoftware602FillerForm),
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ware602fillerform"), 3366)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSolentSdkm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ntsdkm"), 3368)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndSosi), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ft"), 3367),
                        (intern_str::CaseInsensitive("le"), 3369),
                        (intern_str::CaseInsensitive("si"), 3370),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSpotfireDxp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSpotfireSfs), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dxp"), 3372),
                        (intern_str::CaseInsensitive("sfs"), 3373),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("otfire"), 3374)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndSqlite3), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lite3"), 3376)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndSssCod), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSssDtf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSssNtf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cod"), 3378),
                        (intern_str::CaseInsensitive("dtf"), 3379),
                        (intern_str::CaseInsensitive("ntf"), 3380),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 3381)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndStardivisionCalc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndStardivisionChart), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 3384)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("alc"), 3383),
                        (intern_str::CaseInsensitive("har"), 3385),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndStardivisionDraw), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("raw"), 3387)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndStardivisionImpress), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mpress"), 3389)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndStardivisionMath), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ath"), 3391)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndStardivisionWriterGlobal), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("global"), 3393)],
                    Some(Subtype::VndStardivisionWriter),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("riter"), 3394)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3386),
                        (intern_str::CaseInsensitive("d"), 3388),
                        (intern_str::CaseInsensitive("i"), 3390),
                        (intern_str::CaseInsensitive("m"), 3392),
                        (intern_str::CaseInsensitive("w"), 3395),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ion"), 3396)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndStepmaniaPackage), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndStepmaniaStepchart), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rt"), 3399)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("package"), 3398),
                        (intern_str::CaseInsensitive("stepcha"), 3400),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndStreetStream), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("eam"), 3402)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ardivis"), 3397),
                        (intern_str::CaseInsensitive("epmania"), 3401),
                        (intern_str::CaseInsensitive("reetstr"), 3403),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSunJ2meAppDescriptor), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("eappdescriptor"), 3405)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSunWadl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 3407)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSunXmlCalcTemplate), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 3409)],
                    Some(Subtype::VndSunXmlCalc),
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSunXmlDrawTemplate), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 3411)],
                    Some(Subtype::VndSunXmlDraw),
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSunXmlImpressTemplate), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("template"), 3413)],
                    Some(Subtype::VndSunXmlImpress),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ess"), 3414)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndSunXmlMath), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSunXmlWriterGlobal), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSunXmlWriterTemplate), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("te"), 3418)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("global"), 3417),
                        (intern_str::CaseInsensitive("templa"), 3419),
                    ],
                    Some(Subtype::VndSunXmlWriter),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("er"), 3420)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("calc"), 3410),
                        (intern_str::CaseInsensitive("draw"), 3412),
                        (intern_str::CaseInsensitive("impr"), 3415),
                        (intern_str::CaseInsensitive("math"), 3416),
                        (intern_str::CaseInsensitive("writ"), 3421),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("j2m"), 3406),
                        (intern_str::CaseInsensitive("wad"), 3408),
                        (intern_str::CaseInsensitive("xml"), 3422),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSusCalendar), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("calendar"), 3424)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("n"), 3423),
                        (intern_str::CaseInsensitive("s"), 3425),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSvd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSvf), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 3427),
                        (intern_str::CaseInsensitive("f"), 3428),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSwiftviewIcs), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("iftviewics"), 3430)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSycle), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 3432)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSyft), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSymbianInstall), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ianinstall"), 3435)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSyncmlDmddf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndSyncmlDmNotification), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ification"), 3438)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSyncmlDmtnds), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 3440)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ddf"), 3437),
                        (intern_str::CaseInsensitive("not"), 3439),
                        (intern_str::CaseInsensitive("tnd"), 3441),
                    ],
                    Some(Subtype::VndSyncmlDm),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndSyncmlDsNotification), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("notification"), 3443)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("m"), 3442),
                        (intern_str::CaseInsensitive("s"), 3444),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("d"), 3445)],
                    Some(Subtype::VndSyncml),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 3446)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cl"), 3433),
                        (intern_str::CaseInsensitive("ft"), 3434),
                        (intern_str::CaseInsensitive("mb"), 3436),
                        (intern_str::CaseInsensitive("nc"), 3447),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3"), 3265),
                        (intern_str::CaseInsensitive("a"), 3271),
                        (intern_str::CaseInsensitive("b"), 3276),
                        (intern_str::CaseInsensitive("c"), 3278),
                        (intern_str::CaseInsensitive("e"), 3330),
                        (intern_str::CaseInsensitive("h"), 3348),
                        (intern_str::CaseInsensitive("i"), 3354),
                        (intern_str::CaseInsensitive("m"), 3362),
                        (intern_str::CaseInsensitive("n"), 3364),
                        (intern_str::CaseInsensitive("o"), 3371),
                        (intern_str::CaseInsensitive("p"), 3375),
                        (intern_str::CaseInsensitive("q"), 3377),
                        (intern_str::CaseInsensitive("s"), 3382),
                        (intern_str::CaseInsensitive("t"), 3404),
                        (intern_str::CaseInsensitive("u"), 3426),
                        (intern_str::CaseInsensitive("v"), 3429),
                        (intern_str::CaseInsensitive("w"), 3431),
                        (intern_str::CaseInsensitive("y"), 3448),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndTableschema), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndTaoIntentModuleArchive), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("dulearchive"), 3451)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bleschema"), 3450),
                        (intern_str::CaseInsensitive("ointentmo"), 3452),
                    ],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndTcpdumpPcap), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pdumppcap"), 3454)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndTencentTap), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ncenttap"), 3456)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndTheqvd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndThinkCellPpttc), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ellppttc"), 3459)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("eqvd"), 3458),
                        (intern_str::CaseInsensitive("inkc"), 3460),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndTmdMediaflexApi), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("mediaflexapi"), 3462)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndTml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndTmobileLivetv), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("bilelivetv"), 3465)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 3463),
                        (intern_str::CaseInsensitive("l"), 3464),
                        (intern_str::CaseInsensitive("o"), 3466),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndTridTpt), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndTriOnesource), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ource"), 3469)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndTriscapeMxs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("emxs"), 3471)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dtpt"), 3468),
                        (intern_str::CaseInsensitive("ones"), 3470),
                        (intern_str::CaseInsensitive("scap"), 3472),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndTrolltechLinguist), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lltechlinguist"), 3474)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndTrueapp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndTruedoc), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("app"), 3476),
                        (intern_str::CaseInsensitive("doc"), 3477),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 3478)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 3473),
                        (intern_str::CaseInsensitive("o"), 3475),
                        (intern_str::CaseInsensitive("u"), 3479),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3453),
                        (intern_str::CaseInsensitive("c"), 3455),
                        (intern_str::CaseInsensitive("e"), 3457),
                        (intern_str::CaseInsensitive("h"), 3461),
                        (intern_str::CaseInsensitive("m"), 3467),
                        (intern_str::CaseInsensitive("r"), 3480),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndUbisoftWebplayer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("oftwebplayer"), 3482)],
                    None,
                    0,
                    12,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndUfdl), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndUiqTheme), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("heme"), 3485)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndUmajin), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("in"), 3487)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndUnity), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("y"), 3489)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndUoml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndUplanetAlertWbxml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wbxml"), 3492)],
                    Some(Subtype::VndUplanetAlert),
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lert"), 3493)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndUplanetBearerChoiceWbxml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wbxml"), 3495)],
                    Some(Subtype::VndUplanetBearerChoice),
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("earerchoice"), 3496)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndUplanetCacheopWbxml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wbxml"), 3498)],
                    Some(Subtype::VndUplanetCacheop),
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndUplanetChannelWbxml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wbxml"), 3500)],
                    Some(Subtype::VndUplanetChannel),
                    0,
                    5,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("acheop"), 3499),
                        (intern_str::CaseInsensitive("hannel"), 3501),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndUplanetListcmdWbxml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("wbxml"), 3503)],
                    Some(Subtype::VndUplanetListcmd),
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndUplanetListWbxml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 3505)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cmd"), 3504),
                        (intern_str::CaseInsensitive("wbx"), 3506),
                    ],
                    Some(Subtype::VndUplanetList),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ist"), 3507)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndUplanetSignal), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ignal"), 3509)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3494),
                        (intern_str::CaseInsensitive("b"), 3497),
                        (intern_str::CaseInsensitive("c"), 3502),
                        (intern_str::CaseInsensitive("l"), 3508),
                        (intern_str::CaseInsensitive("s"), 3510),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("net"), 3511)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndUriMap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ap"), 3513)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndUsdz), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndUvvuMp4), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("mp4"), 3516)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("bis"), 3483),
                        (intern_str::CaseInsensitive("fdl"), 3484),
                        (intern_str::CaseInsensitive("iqt"), 3486),
                        (intern_str::CaseInsensitive("maj"), 3488),
                        (intern_str::CaseInsensitive("nit"), 3490),
                        (intern_str::CaseInsensitive("oml"), 3491),
                        (intern_str::CaseInsensitive("pla"), 3512),
                        (intern_str::CaseInsensitive("rim"), 3514),
                        (intern_str::CaseInsensitive("sdz"), 3515),
                        (intern_str::CaseInsensitive("vvu"), 3517),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndValveSourceCompiledMap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dmap"), 3519)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::VndValveSourceMaterial), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 3521)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndValveSourceTexture), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("compile"), 3520),
                        (intern_str::CaseInsensitive("materia"), 3522),
                        (intern_str::CaseInsensitive("texture"), 3523),
                    ],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lvesource"), 3524)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndVcx), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 3526)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndVdStudy), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("study"), 3528)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndVectorworks), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("torworks"), 3530)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndVel), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndVerimatrixVcas), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("as"), 3533)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndVeritoneAion), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("matrixvc"), 3534),
                        (intern_str::CaseInsensitive("toneaion"), 3535),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndVeryantThin), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("antthin"), 3537)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 3536),
                        (intern_str::CaseInsensitive("y"), 3538),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndVesEncrypted), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("encrypted"), 3540)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3531),
                        (intern_str::CaseInsensitive("l"), 3532),
                        (intern_str::CaseInsensitive("r"), 3539),
                        (intern_str::CaseInsensitive("s"), 3541),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndVidsoftVidconference), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("softvidconference"), 3543)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndVisionary), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("nary"), 3545)],
                    Some(Subtype::VndVisio),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("io"), 3546)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndVividenceScriptfile), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("dencescriptfile"), 3548)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndVivo), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 3549),
                        (intern_str::CaseInsensitive("o"), 3550),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 3544),
                        (intern_str::CaseInsensitive("s"), 3547),
                        (intern_str::CaseInsensitive("v"), 3551),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndVmxCvsd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("xcvsd"), 3553)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndVsf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 3555)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndVtu), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("u"), 3557)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3525),
                        (intern_str::CaseInsensitive("c"), 3527),
                        (intern_str::CaseInsensitive("d"), 3529),
                        (intern_str::CaseInsensitive("e"), 3542),
                        (intern_str::CaseInsensitive("i"), 3552),
                        (intern_str::CaseInsensitive("m"), 3554),
                        (intern_str::CaseInsensitive("s"), 3556),
                        (intern_str::CaseInsensitive("t"), 3558),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndWapSic), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("c"), 3560)],
                    Some(Subtype::VndWapSi),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndWapSlc), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("c"), 3562)],
                    Some(Subtype::VndWapSl),
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 3561),
                        (intern_str::CaseInsensitive("l"), 3563),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndWapWbmp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndWapWbxml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 3566)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mp"), 3565),
                        (intern_str::CaseInsensitive("xm"), 3567),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndWapWmlc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndWapWmlscriptc), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("c"), 3570)],
                    Some(Subtype::VndWapWmlscript),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cript"), 3571)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3569),
                        (intern_str::CaseInsensitive("s"), 3572),
                    ],
                    Some(Subtype::VndWapWml),
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 3573)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 3568),
                        (intern_str::CaseInsensitive("m"), 3574),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("s"), 3564),
                        (intern_str::CaseInsensitive("w"), 3575),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 3576)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndWebturbo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("bturbo"), 3578)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndWfaDpp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndWfaP2p), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndWfaWsc), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dpp"), 3580),
                        (intern_str::CaseInsensitive("p2p"), 3581),
                        (intern_str::CaseInsensitive("wsc"), 3582),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 3583)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndWindowsDevicepairing), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ndowsdevicepairing"), 3585)],
                    None,
                    0,
                    18,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndWmc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndWmfBootstrap), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("bootstrap"), 3588)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3587),
                        (intern_str::CaseInsensitive("f"), 3589),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndWolframMathematicaPackage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("package"), 3591)],
                    Some(Subtype::VndWolframMathematica),
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("atica"), 3592)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::VndWolframPlayer), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mathem"), 3593),
                        (intern_str::CaseInsensitive("player"), 3594),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndWordperfect51), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("51"), 3596)],
                    Some(Subtype::VndWordperfect),
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("fect"), 3597)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lfram"), 3595),
                        (intern_str::CaseInsensitive("rdper"), 3598),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndWqd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 3600)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndWrqHp3000Labelled), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("qhp3000labelled"), 3602)],
                    None,
                    0,
                    15,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndWtStf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("stf"), 3604)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndWvCsp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndWvSsp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("csp"), 3606),
                        (intern_str::CaseInsensitive("ssp"), 3607),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3577),
                        (intern_str::CaseInsensitive("e"), 3579),
                        (intern_str::CaseInsensitive("f"), 3584),
                        (intern_str::CaseInsensitive("i"), 3586),
                        (intern_str::CaseInsensitive("m"), 3590),
                        (intern_str::CaseInsensitive("o"), 3599),
                        (intern_str::CaseInsensitive("q"), 3601),
                        (intern_str::CaseInsensitive("r"), 3603),
                        (intern_str::CaseInsensitive("t"), 3605),
                        (intern_str::CaseInsensitive("v"), 3608),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndXacml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 3610)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndXara), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cm"), 3611),
                        (intern_str::CaseInsensitive("ra"), 3612),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndXfdlWebform), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("webform"), 3614)],
                    Some(Subtype::VndXfdl),
                    0,
                    7,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dl"), 3615)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndXiff), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ff"), 3617)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::VndXmi), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndXmpieCpkg), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pkg"), 3620)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndXmpieDpkg), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pkg"), 3622)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndXmpiePlan), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndXmpiePpkg), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lan"), 3624),
                        (intern_str::CaseInsensitive("pkg"), 3625),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndXmpieXlim), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lim"), 3627)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3621),
                        (intern_str::CaseInsensitive("d"), 3623),
                        (intern_str::CaseInsensitive("p"), 3626),
                        (intern_str::CaseInsensitive("x"), 3628),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ie"), 3629)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 3619),
                        (intern_str::CaseInsensitive("p"), 3630),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3613),
                        (intern_str::CaseInsensitive("f"), 3616),
                        (intern_str::CaseInsensitive("i"), 3618),
                        (intern_str::CaseInsensitive("m"), 3631),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndYamahaHvDic), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndYamahaHvScript), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ipt"), 3634)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndYamahaHvVoice), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ce"), 3636)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dic"), 3633),
                        (intern_str::CaseInsensitive("scr"), 3635),
                        (intern_str::CaseInsensitive("voi"), 3637),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("v"), 3638)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndYamahaOpenscoreformatOsfpvg), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("osfpvg"), 3640)],
                    Some(Subtype::VndYamahaOpenscoreformat),
                    0,
                    6,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("penscoreformat"), 3641)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndYamahaRemoteSetup), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("emotesetup"), 3643)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndYamahaSmafAudio), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndYamahaSmafPhrase), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 3646)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("audio"), 3645),
                        (intern_str::CaseInsensitive("phras"), 3647),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("maf"), 3648)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::VndYamahaThroughNgn), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndYamahaTunnelUdpencap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ncap"), 3651)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("hroughngn"), 3650),
                        (intern_str::CaseInsensitive("unneludpe"), 3652),
                    ],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("h"), 3639),
                        (intern_str::CaseInsensitive("o"), 3642),
                        (intern_str::CaseInsensitive("r"), 3644),
                        (intern_str::CaseInsensitive("s"), 3649),
                        (intern_str::CaseInsensitive("t"), 3653),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndYaoweme), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 3655)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("maha"), 3654),
                        (intern_str::CaseInsensitive("owem"), 3656),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndYellowriverCustomMenu), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("llowrivercustommenu"), 3658)],
                    None,
                    0,
                    19,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndYoutubeYt), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("utubeyt"), 3660)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3657),
                        (intern_str::CaseInsensitive("e"), 3659),
                        (intern_str::CaseInsensitive("o"), 3661),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VndZbrushPcx), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ushpcx"), 3663)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::VndZul), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VndZzazzDeck), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("zzdeck"), 3666)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("br"), 3664),
                        (intern_str::CaseInsensitive("ul"), 3665),
                        (intern_str::CaseInsensitive("za"), 3667),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 1276),
                        (intern_str::CaseInsensitive("3"), 1394),
                        (intern_str::CaseInsensitive("4"), 1396),
                        (intern_str::CaseInsensitive("a"), 1541),
                        (intern_str::CaseInsensitive("b"), 1580),
                        (intern_str::CaseInsensitive("c"), 1716),
                        (intern_str::CaseInsensitive("d"), 1894),
                        (intern_str::CaseInsensitive("e"), 2017),
                        (intern_str::CaseInsensitive("f"), 2112),
                        (intern_str::CaseInsensitive("g"), 2184),
                        (intern_str::CaseInsensitive("h"), 2235),
                        (intern_str::CaseInsensitive("i"), 2352),
                        (intern_str::CaseInsensitive("j"), 2377),
                        (intern_str::CaseInsensitive("k"), 2406),
                        (intern_str::CaseInsensitive("l"), 2443),
                        (intern_str::CaseInsensitive("m"), 2657),
                        (intern_str::CaseInsensitive("n"), 2752),
                        (intern_str::CaseInsensitive("o"), 3111),
                        (intern_str::CaseInsensitive("p"), 3181),
                        (intern_str::CaseInsensitive("q"), 3192),
                        (intern_str::CaseInsensitive("r"), 3263),
                        (intern_str::CaseInsensitive("s"), 3449),
                        (intern_str::CaseInsensitive("t"), 3481),
                        (intern_str::CaseInsensitive("u"), 3518),
                        (intern_str::CaseInsensitive("v"), 3559),
                        (intern_str::CaseInsensitive("w"), 3609),
                        (intern_str::CaseInsensitive("x"), 3632),
                        (intern_str::CaseInsensitive("y"), 3662),
                        (intern_str::CaseInsensitive("z"), 3668),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 3669)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VoiceMessage), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sage"), 3671)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::Voicexml), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mes"), 3672),
                        (intern_str::CaseInsensitive("xml"), 3673),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::VorbisConfig), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("config"), 3675)],
                    Some(Subtype::Vorbis),
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 3676)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::VoucherCms), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ercms"), 3678)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ice"), 3674),
                        (intern_str::CaseInsensitive("rbi"), 3677),
                        (intern_str::CaseInsensitive("uch"), 3679),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::Vp8), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Vp9), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("8"), 3681),
                        (intern_str::CaseInsensitive("9"), 3682),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::VqRtcpxr), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rtcpxr"), 3684)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::Vrml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 3686)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Vtt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 3688)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 1268),
                        (intern_str::CaseInsensitive("d"), 1270),
                        (intern_str::CaseInsensitive("e"), 1272),
                        (intern_str::CaseInsensitive("m"), 1274),
                        (intern_str::CaseInsensitive("n"), 3670),
                        (intern_str::CaseInsensitive("o"), 3680),
                        (intern_str::CaseInsensitive("p"), 3683),
                        (intern_str::CaseInsensitive("q"), 3685),
                        (intern_str::CaseInsensitive("r"), 3687),
                        (intern_str::CaseInsensitive("t"), 3689),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Wasm), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Watcherinfo), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("herinfo"), 3692)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("sm"), 3691),
                        (intern_str::CaseInsensitive("tc"), 3693),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Webm), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::WebpushOptions), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ushoptions"), 3696)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("m"), 3695),
                        (intern_str::CaseInsensitive("p"), 3697),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("b"), 3698)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::WhoisppQuery), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::WhoisppResponse), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nse"), 3701)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("query"), 3700),
                        (intern_str::CaseInsensitive("respo"), 3702),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("oispp"), 3703)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::Widget), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("et"), 3705)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::Wita), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dg"), 3706),
                        (intern_str::CaseInsensitive("ta"), 3707),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Wmf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 3709)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Woff2), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("2"), 3711)],
                    Some(Subtype::Woff),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Wordperfect51), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("perfect51"), 3713)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ff"), 3712),
                        (intern_str::CaseInsensitive("rd"), 3714),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Wsdl), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Wspolicy), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("licy"), 3717)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dl"), 3716),
                        (intern_str::CaseInsensitive("po"), 3718),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3694),
                        (intern_str::CaseInsensitive("e"), 3699),
                        (intern_str::CaseInsensitive("h"), 3704),
                        (intern_str::CaseInsensitive("i"), 3708),
                        (intern_str::CaseInsensitive("m"), 3710),
                        (intern_str::CaseInsensitive("o"), 3715),
                        (intern_str::CaseInsensitive("s"), 3719),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::X123), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("23"), 3721)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::X3dVrml), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("vrml"), 3723)],
                    Some(Subtype::X3d),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 3724)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::X400Bp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("00bp"), 3726)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::X7zCompressed), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("zcompressed"), 3728)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(&[], Some(Subtype::XAbiword), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ord"), 3730)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::Xacml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XAiff), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XAlchemy), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("emy"), 3734)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XAppleDiskimage), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ediskimage"), 3736)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("biw"), 3731),
                        (intern_str::CaseInsensitive("cml"), 3732),
                        (intern_str::CaseInsensitive("iff"), 3733),
                        (intern_str::CaseInsensitive("lch"), 3735),
                        (intern_str::CaseInsensitive("ppl"), 3737),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::XBcpio), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pio"), 3739)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XBibtex), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XBittorrent), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rent"), 3742)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("btex"), 3741),
                        (intern_str::CaseInsensitive("ttor"), 3743),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[], Some(Subtype::XBoo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 3745)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3740),
                        (intern_str::CaseInsensitive("i"), 3744),
                        (intern_str::CaseInsensitive("o"), 3746),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCacheCsf), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("csf"), 3748)],
                    Some(Subtype::XCache),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCactvsBinary), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("sbinary"), 3750)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("he"), 3749),
                        (intern_str::CaseInsensitive("tv"), 3751),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCanonCr2), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XCanonCrw), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 3753),
                        (intern_str::CaseInsensitive("w"), 3754),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("oncr"), 3755)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XcapAtt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("tt"), 3757)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XcapCaps), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("aps"), 3759)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XcapDiff), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("iff"), 3761)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XcapEl), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XcapError), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ror"), 3764)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("l"), 3763),
                        (intern_str::CaseInsensitive("r"), 3765),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XcapNs), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("s"), 3767)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3758),
                        (intern_str::CaseInsensitive("c"), 3760),
                        (intern_str::CaseInsensitive("d"), 3762),
                        (intern_str::CaseInsensitive("e"), 3766),
                        (intern_str::CaseInsensitive("n"), 3768),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3752),
                        (intern_str::CaseInsensitive("n"), 3756),
                        (intern_str::CaseInsensitive("p"), 3769),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCdf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XCdlink), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ink"), 3772)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XCdx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("f"), 3771),
                        (intern_str::CaseInsensitive("l"), 3773),
                        (intern_str::CaseInsensitive("x"), 3774),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCerius), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rius"), 3776)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XChdr), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XChem3d), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XChemdraw), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("aw"), 3780)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("3d"), 3779),
                        (intern_str::CaseInsensitive("dr"), 3781),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dr"), 3778),
                        (intern_str::CaseInsensitive("em"), 3782),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCif), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 3784)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XCmdf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 3786)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XCml), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XCmuRaster), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("raster"), 3789)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 3787),
                        (intern_str::CaseInsensitive("l"), 3788),
                        (intern_str::CaseInsensitive("u"), 3790),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCompass), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XComponent), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nt"), 3793)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ass"), 3792),
                        (intern_str::CaseInsensitive("one"), 3794),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::XComsol), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ol"), 3796)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("p"), 3795),
                        (intern_str::CaseInsensitive("s"), 3797),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XconConferenceInfoDiff), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("diff"), 3799)],
                    Some(Subtype::XconConferenceInfo),
                    0,
                    4,
                ),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("conferenceinfo"), 3800)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCoreldrawpattern), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XCoreldrawtemplate), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 3803)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("pattern"), 3802),
                        (intern_str::CaseInsensitive("templat"), 3804),
                    ],
                    Some(Subtype::XCoreldraw),
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCorelphotopaint), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("opaint"), 3806)], None, 0, 6),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("draw"), 3805),
                        (intern_str::CaseInsensitive("phot"), 3807),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("el"), 3808)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("m"), 3798),
                        (intern_str::CaseInsensitive("n"), 3801),
                        (intern_str::CaseInsensitive("r"), 3809),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCpio), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("io"), 3811)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XCrossfire), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ossfire"), 3813)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCsh), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XCsml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 3816)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XCsrc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("c"), 3818)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("h"), 3815),
                        (intern_str::CaseInsensitive("m"), 3817),
                        (intern_str::CaseInsensitive("r"), 3819),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XCtx), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 3821)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XCxf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 3823)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3770),
                        (intern_str::CaseInsensitive("d"), 3775),
                        (intern_str::CaseInsensitive("e"), 3777),
                        (intern_str::CaseInsensitive("h"), 3783),
                        (intern_str::CaseInsensitive("i"), 3785),
                        (intern_str::CaseInsensitive("m"), 3791),
                        (intern_str::CaseInsensitive("o"), 3810),
                        (intern_str::CaseInsensitive("p"), 3812),
                        (intern_str::CaseInsensitive("r"), 3814),
                        (intern_str::CaseInsensitive("s"), 3820),
                        (intern_str::CaseInsensitive("t"), 3822),
                        (intern_str::CaseInsensitive("x"), 3824),
                    ],
                    Some(Subtype::XC),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XDiff), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XDirector), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ctor"), 3827)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ff"), 3826),
                        (intern_str::CaseInsensitive("re"), 3828),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XDoom), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("om"), 3830)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XDsrc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("rc"), 3832)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XDvi), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 3834)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 3829),
                        (intern_str::CaseInsensitive("o"), 3831),
                        (intern_str::CaseInsensitive("s"), 3833),
                        (intern_str::CaseInsensitive("v"), 3835),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XEmblDlNucleotide), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ldlnucleotide"), 3837)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::Xenc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XEpsonErf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("onerf"), 3840)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("mb"), 3838),
                        (intern_str::CaseInsensitive("nc"), 3839),
                        (intern_str::CaseInsensitive("ps"), 3841),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XFlv), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XFontPcf), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("pcf"), 3844)],
                    Some(Subtype::XFont),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 3845)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XFreemind), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("emind"), 3847)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lv"), 3843),
                        (intern_str::CaseInsensitive("on"), 3846),
                        (intern_str::CaseInsensitive("re"), 3848),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XGalacticSpc), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("spc"), 3850)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XGamessInput), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("put"), 3852)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XGanttproject), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ject"), 3854)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XGaussianCheckpoint), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("kpoint"), 3856)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::XGaussianCube), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("hec"), 3857),
                        (intern_str::CaseInsensitive("ube"), 3858),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::XGaussianInput), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nput"), 3860)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XGaussianLog), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("og"), 3862)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3859),
                        (intern_str::CaseInsensitive("i"), 3861),
                        (intern_str::CaseInsensitive("l"), 3863),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("lactic"), 3851),
                        (intern_str::CaseInsensitive("messin"), 3853),
                        (intern_str::CaseInsensitive("nttpro"), 3855),
                        (intern_str::CaseInsensitive("ussian"), 3864),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[], Some(Subtype::XGcg8Sequence), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("g8sequence"), 3866)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::XGenbank), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nbank"), 3868)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::XGnumeric), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("umeric"), 3870)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::XGoSgf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("sgf"), 3872)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XGraphingCalculator), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("aphingcalculator"), 3874)],
                    None,
                    0,
                    16,
                ),
                intern_str::Node::new(&[], Some(Subtype::XGsm), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 3876)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XGtarCompressed), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("compressed"), 3878)],
                    Some(Subtype::XGtar),
                    0,
                    10,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ar"), 3879)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3865),
                        (intern_str::CaseInsensitive("c"), 3867),
                        (intern_str::CaseInsensitive("e"), 3869),
                        (intern_str::CaseInsensitive("n"), 3871),
                        (intern_str::CaseInsensitive("o"), 3873),
                        (intern_str::CaseInsensitive("r"), 3875),
                        (intern_str::CaseInsensitive("s"), 3877),
                        (intern_str::CaseInsensitive("t"), 3880),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XHaskell), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("kell"), 3882)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XHdf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XHin), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Xhtml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 3886)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XHwp), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("as"), 3883),
                        (intern_str::CaseInsensitive("df"), 3884),
                        (intern_str::CaseInsensitive("in"), 3885),
                        (intern_str::CaseInsensitive("tm"), 3887),
                        (intern_str::CaseInsensitive("wp"), 3888),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XIca), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 3890)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XInfo), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XInternetSignup), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("rnetsignup"), 3893)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("fo"), 3892),
                        (intern_str::CaseInsensitive("te"), 3894),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XIphone), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("hone"), 3896)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XIso9660Image), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("image"), 3898)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::XIsostar), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("9660"), 3899),
                        (intern_str::CaseInsensitive("star"), 3900),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 3901)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3891),
                        (intern_str::CaseInsensitive("n"), 3895),
                        (intern_str::CaseInsensitive("p"), 3897),
                        (intern_str::CaseInsensitive("s"), 3902),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XJavaJnlpFile), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("jnlpfile"), 3904)],
                    Some(Subtype::XJava),
                    0,
                    8,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("va"), 3905)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XJcampDx), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ampdx"), 3907)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::XJg), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XJmol), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ol"), 3910)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XJng), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 3912)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3906),
                        (intern_str::CaseInsensitive("c"), 3908),
                        (intern_str::CaseInsensitive("g"), 3909),
                        (intern_str::CaseInsensitive("m"), 3911),
                        (intern_str::CaseInsensitive("n"), 3913),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XKillustrator), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ator"), 3915)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XKinemage), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("llustr"), 3916),
                        (intern_str::CaseInsensitive("nemage"), 3917),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 3918)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XLaAsf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XLatex), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("asf"), 3920),
                        (intern_str::CaseInsensitive("tex"), 3921),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::XLha), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("a"), 3923)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Xliff), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XLilypond), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("pond"), 3926)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XLiterateHaskell), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ratehaskell"), 3928)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ff"), 3925),
                        (intern_str::CaseInsensitive("ly"), 3927),
                        (intern_str::CaseInsensitive("te"), 3929),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XLyx), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 3931)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XLzh), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XLzx), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("h"), 3933),
                        (intern_str::CaseInsensitive("x"), 3934),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3922),
                        (intern_str::CaseInsensitive("h"), 3924),
                        (intern_str::CaseInsensitive("i"), 3930),
                        (intern_str::CaseInsensitive("y"), 3932),
                        (intern_str::CaseInsensitive("z"), 3935),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XMacmolecule), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMacromodelInput), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("nput"), 3938)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("molecule"), 3937),
                        (intern_str::CaseInsensitive("romodeli"), 3939),
                    ],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::XMaker), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("er"), 3941)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XMatroska), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("roska"), 3943)], None, 0, 5),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3940),
                        (intern_str::CaseInsensitive("k"), 3942),
                        (intern_str::CaseInsensitive("t"), 3944),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XMdlMolfile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("olfile"), 3946)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::XMdlRdfile), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMdlRxnfile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("e"), 3949)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dfile"), 3948),
                        (intern_str::CaseInsensitive("xnfil"), 3950),
                    ],
                    None,
                    0,
                    5,
                ),
                intern_str::Node::new(&[], Some(Subtype::XMdlSdfile), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dfile"), 3952)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::XMdlTgf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("gf"), 3954)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("m"), 3947),
                        (intern_str::CaseInsensitive("r"), 3951),
                        (intern_str::CaseInsensitive("s"), 3953),
                        (intern_str::CaseInsensitive("t"), 3955),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 3956)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMixedReplace), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xedreplace"), 3958)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::XmlDtd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XmlExternalParsedEntity), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ernalparsedentity"), 3961)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::XmlPatch), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ch"), 3963)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dtd"), 3960),
                        (intern_str::CaseInsensitive("ext"), 3962),
                        (intern_str::CaseInsensitive("pat"), 3964),
                    ],
                    Some(Subtype::Xml),
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::XMmcif), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cif"), 3966)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XMng), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 3968)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMoc), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMol2), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMolconnZ), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("onnz"), 3972)], None, 0, 4),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("2"), 3971),
                        (intern_str::CaseInsensitive("c"), 3973),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XMopacGraph), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ph"), 3975)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XMopacInput), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ut"), 3977)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XMopacOut), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMopacVib), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gra"), 3976),
                        (intern_str::CaseInsensitive("inp"), 3978),
                        (intern_str::CaseInsensitive("out"), 3979),
                        (intern_str::CaseInsensitive("vib"), 3980),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ac"), 3981)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3970),
                        (intern_str::CaseInsensitive("l"), 3974),
                        (intern_str::CaseInsensitive("p"), 3982),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::Xmpp), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 3984)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMsdosProgram), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("osprogram"), 3986)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::XMsi), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMsvideo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ideo"), 3989)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XMsWax), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 3991)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMsWma), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMsWmd), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMsWmv), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMsWmx), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XMsWmz), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3993),
                        (intern_str::CaseInsensitive("d"), 3994),
                        (intern_str::CaseInsensitive("v"), 3995),
                        (intern_str::CaseInsensitive("x"), 3996),
                        (intern_str::CaseInsensitive("z"), 3997),
                    ],
                    Some(Subtype::XMsWm),
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XMsWvx), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 3999)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3992),
                        (intern_str::CaseInsensitive("m"), 3998),
                        (intern_str::CaseInsensitive("v"), 4000),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("d"), 3987),
                        (intern_str::CaseInsensitive("i"), 3988),
                        (intern_str::CaseInsensitive("v"), 3990),
                        (intern_str::CaseInsensitive("w"), 4001),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 3945),
                        (intern_str::CaseInsensitive("d"), 3957),
                        (intern_str::CaseInsensitive("i"), 3959),
                        (intern_str::CaseInsensitive("l"), 3965),
                        (intern_str::CaseInsensitive("m"), 3967),
                        (intern_str::CaseInsensitive("n"), 3969),
                        (intern_str::CaseInsensitive("o"), 3983),
                        (intern_str::CaseInsensitive("p"), 3985),
                        (intern_str::CaseInsensitive("s"), 4002),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XNcbiAsn1Ascii), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 4004)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XNcbiAsn1Binary), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ry"), 4006)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XNcbiAsn1Spec), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("asci"), 4005),
                        (intern_str::CaseInsensitive("bina"), 4007),
                        (intern_str::CaseInsensitive("spec"), 4008),
                    ],
                    Some(Subtype::XNcbiAsn1),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("iasn1"), 4009)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::XNetcdf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cdf"), 4011)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XNikonNef), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("onnef"), 4013)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::XNsProxyAutoconfig), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("roxyautoconfig"), 4015)],
                    None,
                    0,
                    14,
                ),
                intern_str::Node::new(&[], Some(Subtype::XNwc), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("cb"), 4010),
                        (intern_str::CaseInsensitive("et"), 4012),
                        (intern_str::CaseInsensitive("ik"), 4014),
                        (intern_str::CaseInsensitive("sp"), 4016),
                        (intern_str::CaseInsensitive("wc"), 4017),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XObject), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ject"), 4019)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XOlympusOrf), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ympusorf"), 4021)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::Xop), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XOzApplication), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("application"), 4024)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("b"), 4020),
                        (intern_str::CaseInsensitive("l"), 4022),
                        (intern_str::CaseInsensitive("p"), 4023),
                        (intern_str::CaseInsensitive("z"), 4025),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XPascal), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("cal"), 4027)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XPcsGcd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("gcd"), 4029)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XPdb), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XPerl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 4032)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XPkcs7Certreqresp), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("s7certreqresp"), 4034)],
                    None,
                    0,
                    13,
                ),
                intern_str::Node::new(&[], Some(Subtype::XPnRealaudio), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ealaudio"), 4036)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::XPortableAnymap), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XPortableBitmap), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XPortableGraymap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("p"), 4040)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XPortablePixmap), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("anymap"), 4038),
                        (intern_str::CaseInsensitive("bitmap"), 4039),
                        (intern_str::CaseInsensitive("grayma"), 4041),
                        (intern_str::CaseInsensitive("pixmap"), 4042),
                    ],
                    None,
                    0,
                    6,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("table"), 4043)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::XPythonCode), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("code"), 4045)],
                    Some(Subtype::XPython),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("hon"), 4046)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("as"), 4028),
                        (intern_str::CaseInsensitive("cs"), 4030),
                        (intern_str::CaseInsensitive("db"), 4031),
                        (intern_str::CaseInsensitive("er"), 4033),
                        (intern_str::CaseInsensitive("kc"), 4035),
                        (intern_str::CaseInsensitive("nr"), 4037),
                        (intern_str::CaseInsensitive("or"), 4044),
                        (intern_str::CaseInsensitive("yt"), 4047),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XQgis), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XQuicktimeplayer), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ktimeplayer"), 4050)],
                    None,
                    0,
                    11,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gis"), 4049),
                        (intern_str::CaseInsensitive("uic"), 4051),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::XRdp), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XRedhatPackageManager), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("hatpackagemanager"), 4054)],
                    None,
                    0,
                    17,
                ),
                intern_str::Node::new(&[], Some(Subtype::XRgb), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XRosdal), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("dal"), 4057)], None, 0, 3),
                intern_str::Node::new(&[], Some(Subtype::XRss), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XRuby), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("y"), 4060)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("dp"), 4053),
                        (intern_str::CaseInsensitive("ed"), 4055),
                        (intern_str::CaseInsensitive("gb"), 4056),
                        (intern_str::CaseInsensitive("os"), 4058),
                        (intern_str::CaseInsensitive("ss"), 4059),
                        (intern_str::CaseInsensitive("ub"), 4061),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XScala), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XScilabXcos), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("xcos"), 4064)],
                    Some(Subtype::XScilab),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("b"), 4065)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XScpls), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ala"), 4063),
                        (intern_str::CaseInsensitive("ila"), 4066),
                        (intern_str::CaseInsensitive("pls"), 4067),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(&[], Some(Subtype::XSd2), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("2"), 4069)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XSetext), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("text"), 4071)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XSfv), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("v"), 4073)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XSgiMovie), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("imovie"), 4075)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::XShar), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ar"), 4077)],
                    Some(Subtype::XSh),
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XSilverlight), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("lverlight"), 4079)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::Xslt), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("t"), 4081)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Xspf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 4083)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XStuffit), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("uffit"), 4085)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::XSv4cpio), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("o"), 4087)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XSv4crc), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("pi"), 4088),
                        (intern_str::CaseInsensitive("rc"), 4089),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("4c"), 4090)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XSwissprot), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("issprot"), 4092)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 4068),
                        (intern_str::CaseInsensitive("d"), 4070),
                        (intern_str::CaseInsensitive("e"), 4072),
                        (intern_str::CaseInsensitive("f"), 4074),
                        (intern_str::CaseInsensitive("g"), 4076),
                        (intern_str::CaseInsensitive("h"), 4078),
                        (intern_str::CaseInsensitive("i"), 4080),
                        (intern_str::CaseInsensitive("l"), 4082),
                        (intern_str::CaseInsensitive("p"), 4084),
                        (intern_str::CaseInsensitive("t"), 4086),
                        (intern_str::CaseInsensitive("v"), 4091),
                        (intern_str::CaseInsensitive("w"), 4093),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XTar), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("r"), 4095)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XTcl), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("l"), 4097)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XTexGf), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XTexinfo), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("fo"), 4100)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XTexPk), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("gf"), 4099),
                        (intern_str::CaseInsensitive("in"), 4101),
                        (intern_str::CaseInsensitive("pk"), 4102),
                    ],
                    Some(Subtype::XTex),
                    0,
                    2,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("x"), 4103)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XTrash), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XTroffMan), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("n"), 4106)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XTroffMe), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XTroffMs), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 4107),
                        (intern_str::CaseInsensitive("e"), 4108),
                        (intern_str::CaseInsensitive("s"), 4109),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("m"), 4110)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ash"), 4105),
                        (intern_str::CaseInsensitive("off"), 4111),
                    ],
                    None,
                    0,
                    3,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 4096),
                        (intern_str::CaseInsensitive("c"), 4098),
                        (intern_str::CaseInsensitive("e"), 4104),
                        (intern_str::CaseInsensitive("r"), 4112),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XUstar), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("star"), 4114)], None, 0, 4),
                intern_str::Node::new(&[], Some(Subtype::XVamasIso14976), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("asiso14976"), 4116)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Subtype::XVcalendar), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lendar"), 4118)], None, 0, 6),
                intern_str::Node::new(&[], Some(Subtype::XVmd), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("am"), 4117),
                        (intern_str::CaseInsensitive("ca"), 4119),
                        (intern_str::CaseInsensitive("md"), 4120),
                    ],
                    Some(Subtype::Xv),
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::XWaisSource), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("ssource"), 4122)],
                    None,
                    0,
                    7,
                ),
                intern_str::Node::new(&[], Some(Subtype::XWav), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("i"), 4123),
                        (intern_str::CaseInsensitive("v"), 4124),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XWingz), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ngz"), 4126)], None, 0, 3),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("a"), 4125),
                        (intern_str::CaseInsensitive("i"), 4127),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::XX509CaCert), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("09cacert"), 4129)],
                    None,
                    0,
                    8,
                ),
                intern_str::Node::new(&[], Some(Subtype::XXbitmap), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("itmap"), 4131)], None, 0, 5),
                intern_str::Node::new(&[], Some(Subtype::XXcf), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("f"), 4133)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XXfig), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ig"), 4135)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XXpinstall), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ll"), 4137)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XXpixmap), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("nsta"), 4138),
                        (intern_str::CaseInsensitive("xmap"), 4139),
                    ],
                    None,
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("i"), 4140)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XXtel), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("el"), 4142)], None, 0, 2),
                intern_str::Node::new(&[], Some(Subtype::XXwindowdump), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("indowdump"), 4144)],
                    None,
                    0,
                    9,
                ),
                intern_str::Node::new(&[], Some(Subtype::XXyz), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("z"), 4146)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::XXz), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("5"), 4130),
                        (intern_str::CaseInsensitive("b"), 4132),
                        (intern_str::CaseInsensitive("c"), 4134),
                        (intern_str::CaseInsensitive("f"), 4136),
                        (intern_str::CaseInsensitive("p"), 4141),
                        (intern_str::CaseInsensitive("t"), 4143),
                        (intern_str::CaseInsensitive("w"), 4145),
                        (intern_str::CaseInsensitive("y"), 4147),
                        (intern_str::CaseInsensitive("z"), 4148),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("1"), 3722),
                        (intern_str::CaseInsensitive("3"), 3725),
                        (intern_str::CaseInsensitive("4"), 3727),
                        (intern_str::CaseInsensitive("7"), 3729),
                        (intern_str::CaseInsensitive("a"), 3738),
                        (intern_str::CaseInsensitive("b"), 3747),
                        (intern_str::CaseInsensitive("c"), 3825),
                        (intern_str::CaseInsensitive("d"), 3836),
                        (intern_str::CaseInsensitive("e"), 3842),
                        (intern_str::CaseInsensitive("f"), 3849),
                        (intern_str::CaseInsensitive("g"), 3881),
                        (intern_str::CaseInsensitive("h"), 3889),
                        (intern_str::CaseInsensitive("i"), 3903),
                        (intern_str::CaseInsensitive("j"), 3914),
                        (intern_str::CaseInsensitive("k"), 3919),
                        (intern_str::CaseInsensitive("l"), 3936),
                        (intern_str::CaseInsensitive("m"), 4003),
                        (intern_str::CaseInsensitive("n"), 4018),
                        (intern_str::CaseInsensitive("o"), 4026),
                        (intern_str::CaseInsensitive("p"), 4048),
                        (intern_str::CaseInsensitive("q"), 4052),
                        (intern_str::CaseInsensitive("r"), 4062),
                        (intern_str::CaseInsensitive("s"), 4094),
                        (intern_str::CaseInsensitive("t"), 4113),
                        (intern_str::CaseInsensitive("u"), 4115),
                        (intern_str::CaseInsensitive("v"), 4121),
                        (intern_str::CaseInsensitive("w"), 4128),
                        (intern_str::CaseInsensitive("x"), 4149),
                    ],
                    None,
                    0,
                    1,
                ),
                intern_str::Node::new(&[], Some(Subtype::YangData), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::YangPatch), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("h"), 4152)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("data"), 4151),
                        (intern_str::CaseInsensitive("patc"), 4153),
                    ],
                    Some(Subtype::Yang),
                    0,
                    4,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("g"), 4154)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Yin), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("an"), 4155),
                        (intern_str::CaseInsensitive("in"), 4156),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Subtype::Zip), 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Zlib), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("b"), 4159)], None, 0, 1),
                intern_str::Node::new(&[], Some(Subtype::Zstd), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("d"), 4161)], None, 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("ip"), 4158),
                        (intern_str::CaseInsensitive("li"), 4160),
                        (intern_str::CaseInsensitive("st"), 4162),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("*"), 1),
                        (intern_str::CaseInsensitive("a"), 108),
                        (intern_str::CaseInsensitive("b"), 131),
                        (intern_str::CaseInsensitive("c"), 233),
                        (intern_str::CaseInsensitive("d"), 291),
                        (intern_str::CaseInsensitive("e"), 375),
                        (intern_str::CaseInsensitive("f"), 409),
                        (intern_str::CaseInsensitive("g"), 464),
                        (intern_str::CaseInsensitive("h"), 500),
                        (intern_str::CaseInsensitive("i"), 541),
                        (intern_str::CaseInsensitive("j"), 592),
                        (intern_str::CaseInsensitive("k"), 600),
                        (intern_str::CaseInsensitive("l"), 622),
                        (intern_str::CaseInsensitive("m"), 776),
                        (intern_str::CaseInsensitive("n"), 800),
                        (intern_str::CaseInsensitive("o"), 834),
                        (intern_str::CaseInsensitive("p"), 952),
                        (intern_str::CaseInsensitive("q"), 958),
                        (intern_str::CaseInsensitive("r"), 1021),
                        (intern_str::CaseInsensitive("s"), 1159),
                        (intern_str::CaseInsensitive("t"), 1244),
                        (intern_str::CaseInsensitive("u"), 1263),
                        (intern_str::CaseInsensitive("v"), 3690),
                        (intern_str::CaseInsensitive("w"), 3720),
                        (intern_str::CaseInsensitive("x"), 4150),
                        (intern_str::CaseInsensitive("y"), 4157),
                        (intern_str::CaseInsensitive("z"), 4163),
                    ],
                    None,
                    0,
                    1,
                ),
            ];
            const GRAPH: intern_str::Graph<
                'static,
                'static,
                intern_str::CaseInsensitive<&'static str>,
                Option<Subtype>,
            > = intern_str::Graph::new(NODES, 4164);
            GRAPH
        };
        GRAPH
            .process(intern_str::CaseInsensitive(s))
            .as_ref()
            .copied()
            .ok_or(crate::InvalidName)
    }
}

impl AsRef<str> for Subtype {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}

impl From<Subtype> for &'static str {
    fn from(name: Subtype) -> Self {
        name.as_str()
    }
}

#[derive(Debug, Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub(crate) enum Suffix {
    Cbor,
    CborSeq,
    Der,
    Fastinfoset,
    Gzip,
    Json,
    JsonSeq,
    Jwt,
    Sqlite3,
    Tlv,
    Wbxml,
    Xml,
    Zip,
}

impl Suffix {
    pub(crate) fn as_str(self) -> &'static str {
        match self {
            Suffix::Cbor => "Cbor",
            Suffix::CborSeq => "CborSeq",
            Suffix::Der => "Der",
            Suffix::Fastinfoset => "Fastinfoset",
            Suffix::Gzip => "Gzip",
            Suffix::Json => "Json",
            Suffix::JsonSeq => "JsonSeq",
            Suffix::Jwt => "Jwt",
            Suffix::Sqlite3 => "Sqlite3",
            Suffix::Tlv => "Tlv",
            Suffix::Wbxml => "Wbxml",
            Suffix::Xml => "Xml",
            Suffix::Zip => "Zip",
        }
    }
}
impl core::str::FromStr for Suffix {
    type Err = crate::InvalidName;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        const GRAPH: intern_str::Graph<
            'static,
            'static,
            intern_str::CaseInsensitive<&'static str>,
            Option<Suffix>,
        > = {
            const NODES: &[intern_str::Node<
                'static,
                intern_str::CaseInsensitive<&'static str>,
                Option<Suffix>,
            >] = &[
                intern_str::Node::new(&[], None, 0, 18446744073709551615),
                intern_str::Node::new(&[], Some(Suffix::CborSeq), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("seq"), 1)],
                    Some(Suffix::Cbor),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("bor"), 2)], None, 0, 3),
                intern_str::Node::new(&[], Some(Suffix::Der), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("er"), 4)], None, 0, 2),
                intern_str::Node::new(&[], Some(Suffix::Fastinfoset), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("astinfoset"), 6)],
                    None,
                    0,
                    10,
                ),
                intern_str::Node::new(&[], Some(Suffix::Gzip), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("zip"), 8)], None, 0, 3),
                intern_str::Node::new(&[], Some(Suffix::JsonSeq), 0, 1),
                intern_str::Node::new(
                    &[(intern_str::CaseInsensitive("seq"), 10)],
                    Some(Suffix::Json),
                    0,
                    3,
                ),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("n"), 11)], None, 0, 1),
                intern_str::Node::new(&[], Some(Suffix::Jwt), 0, 1),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("so"), 12),
                        (intern_str::CaseInsensitive("wt"), 13),
                    ],
                    None,
                    0,
                    2,
                ),
                intern_str::Node::new(&[], Some(Suffix::Sqlite3), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("qlite3"), 15)], None, 0, 6),
                intern_str::Node::new(&[], Some(Suffix::Tlv), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("lv"), 17)], None, 0, 2),
                intern_str::Node::new(&[], Some(Suffix::Wbxml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("bxml"), 19)], None, 0, 4),
                intern_str::Node::new(&[], Some(Suffix::Xml), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ml"), 21)], None, 0, 2),
                intern_str::Node::new(&[], Some(Suffix::Zip), 0, 1),
                intern_str::Node::new(&[(intern_str::CaseInsensitive("ip"), 23)], None, 0, 2),
                intern_str::Node::new(
                    &[
                        (intern_str::CaseInsensitive("c"), 3),
                        (intern_str::CaseInsensitive("d"), 5),
                        (intern_str::CaseInsensitive("f"), 7),
                        (intern_str::CaseInsensitive("g"), 9),
                        (intern_str::CaseInsensitive("j"), 14),
                        (intern_str::CaseInsensitive("s"), 16),
                        (intern_str::CaseInsensitive("t"), 18),
                        (intern_str::CaseInsensitive("w"), 20),
                        (intern_str::CaseInsensitive("x"), 22),
                        (intern_str::CaseInsensitive("z"), 24),
                    ],
                    None,
                    0,
                    1,
                ),
            ];
            const GRAPH: intern_str::Graph<
                'static,
                'static,
                intern_str::CaseInsensitive<&'static str>,
                Option<Suffix>,
            > = intern_str::Graph::new(NODES, 25);
            GRAPH
        };
        GRAPH
            .process(intern_str::CaseInsensitive(s))
            .as_ref()
            .copied()
            .ok_or(crate::InvalidName)
    }
}

impl AsRef<str> for Suffix {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}

impl From<Suffix> for &'static str {
    fn from(name: Suffix) -> Self {
        name.as_str()
    }
}

/// Constants for common MIME types and subtypes.
pub mod constants {
    /// `application/A2L`
    pub const APPLICATION_A2L: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::A2l),
        suffix: None,
        parameters: &[],
    });

    /// `application/ace+cbor`
    pub const APPLICATION_ACE_CBOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ace),
        suffix: Some(crate::Name::Interned(super::Suffix::Cbor)),
        parameters: &[],
    });

    /// `application/activemessage`
    pub const APPLICATION_ACTIVEMESSAGE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Activemessage),
        suffix: None,
        parameters: &[],
    });

    /// `application/activity+json`
    pub const APPLICATION_ACTIVITY_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Activity),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/alto-cdni+json`
    pub const APPLICATION_ALTO_CDNI_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::AltoCdni),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/alto-cdnifilter+json`
    pub const APPLICATION_ALTO_CDNIFILTER_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoCdnifilter),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-costmap+json`
    pub const APPLICATION_ALTO_COSTMAP_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoCostmap),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-costmapfilter+json`
    pub const APPLICATION_ALTO_COSTMAPFILTER_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoCostmapfilter),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-directory+json`
    pub const APPLICATION_ALTO_DIRECTORY_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoDirectory),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-endpointcost+json`
    pub const APPLICATION_ALTO_ENDPOINTCOST_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoEndpointcost),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-endpointcostparams+json`
    pub const APPLICATION_ALTO_ENDPOINTCOSTPARAMS_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoEndpointcostparams),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-endpointprop+json`
    pub const APPLICATION_ALTO_ENDPOINTPROP_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoEndpointprop),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-endpointpropparams+json`
    pub const APPLICATION_ALTO_ENDPOINTPROPPARAMS_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoEndpointpropparams),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-error+json`
    pub const APPLICATION_ALTO_ERROR_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::AltoError),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/alto-networkmap+json`
    pub const APPLICATION_ALTO_NETWORKMAP_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoNetworkmap),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-networkmapfilter+json`
    pub const APPLICATION_ALTO_NETWORKMAPFILTER_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoNetworkmapfilter),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-propmap+json`
    pub const APPLICATION_ALTO_PROPMAP_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoPropmap),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-propmapparams+json`
    pub const APPLICATION_ALTO_PROPMAPPARAMS_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoPropmapparams),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-updatestreamcontrol+json`
    pub const APPLICATION_ALTO_UPDATESTREAMCONTROL_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoUpdatestreamcontrol),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/alto-updatestreamparams+json`
    pub const APPLICATION_ALTO_UPDATESTREAMPARAMS_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AltoUpdatestreamparams),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/AML`
    pub const APPLICATION_AML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Aml),
        suffix: None,
        parameters: &[],
    });

    /// `application/andrew-inset`
    pub const APPLICATION_ANDREW_INSET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::AndrewInset),
        suffix: None,
        parameters: &[],
    });

    /// `application/annodex`
    pub const APPLICATION_ANNODEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Annodex),
        suffix: None,
        parameters: &[],
    });

    /// `application/applefile`
    pub const APPLICATION_APPLEFILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Applefile),
        suffix: None,
        parameters: &[],
    });

    /// `application/at+jwt`
    pub const APPLICATION_AT_JWT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::At),
        suffix: Some(crate::Name::Interned(super::Suffix::Jwt)),
        parameters: &[],
    });

    /// `application/ATF`
    pub const APPLICATION_ATF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Atf),
        suffix: None,
        parameters: &[],
    });

    /// `application/ATFX`
    pub const APPLICATION_ATFX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Atfx),
        suffix: None,
        parameters: &[],
    });

    /// `application/atom+xml`
    pub const APPLICATION_ATOM_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Atom),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/atomcat+xml`
    pub const APPLICATION_ATOMCAT_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Atomcat),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/atomdeleted+xml`
    pub const APPLICATION_ATOMDELETED_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Atomdeleted),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/atomicmail`
    pub const APPLICATION_ATOMICMAIL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Atomicmail),
        suffix: None,
        parameters: &[],
    });

    /// `application/atomserv+xml`
    pub const APPLICATION_ATOMSERV_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Atomserv),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/atomsvc+xml`
    pub const APPLICATION_ATOMSVC_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Atomsvc),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/atsc-dwd+xml`
    pub const APPLICATION_ATSC_DWD_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::AtscDwd),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/atsc-dynamic-event-message`
    pub const APPLICATION_ATSC_DYNAMIC_EVENT_MESSAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::AtscDynamicEventMessage),
            suffix: None,
            parameters: &[],
        });

    /// `application/atsc-held+xml`
    pub const APPLICATION_ATSC_HELD_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::AtscHeld),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/atsc-rdt+json`
    pub const APPLICATION_ATSC_RDT_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::AtscRdt),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/atsc-rsat+xml`
    pub const APPLICATION_ATSC_RSAT_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::AtscRsat),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/ATXML`
    pub const APPLICATION_ATXML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Atxml),
        suffix: None,
        parameters: &[],
    });

    /// `application/auth-policy+xml`
    pub const APPLICATION_AUTH_POLICY_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::AuthPolicy),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/bacnet-xdd+zip`
    pub const APPLICATION_BACNET_XDD_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::BacnetXdd),
        suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
        parameters: &[],
    });

    /// `application/batch-SMTP`
    pub const APPLICATION_BATCH_SMTP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::BatchSmtp),
        suffix: None,
        parameters: &[],
    });

    /// `application/bbolin`
    pub const APPLICATION_BBOLIN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Bbolin),
        suffix: None,
        parameters: &[],
    });

    /// `application/beep+xml`
    pub const APPLICATION_BEEP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Beep),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/calendar+json`
    pub const APPLICATION_CALENDAR_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Calendar),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/calendar+xml`
    pub const APPLICATION_CALENDAR_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Calendar),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/call-completion`
    pub const APPLICATION_CALL_COMPLETION: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CallCompletion),
        suffix: None,
        parameters: &[],
    });

    /// `application/CALS-1840`
    pub const APPLICATION_CALS_1840: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cals1840),
        suffix: None,
        parameters: &[],
    });

    /// `application/captive+json`
    pub const APPLICATION_CAPTIVE_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Captive),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/cbor`
    pub const APPLICATION_CBOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cbor),
        suffix: None,
        parameters: &[],
    });

    /// `application/cbor-seq`
    pub const APPLICATION_CBOR_SEQ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CborSeq),
        suffix: None,
        parameters: &[],
    });

    /// `application/cccex`
    pub const APPLICATION_CCCEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cccex),
        suffix: None,
        parameters: &[],
    });

    /// `application/ccmp+xml`
    pub const APPLICATION_CCMP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ccmp),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/ccxml+xml`
    pub const APPLICATION_CCXML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ccxml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/CDFX+XML`
    pub const APPLICATION_CDFX_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cdfx),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/cdmi-capability`
    pub const APPLICATION_CDMI_CAPABILITY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CdmiCapability),
        suffix: None,
        parameters: &[],
    });

    /// `application/cdmi-container`
    pub const APPLICATION_CDMI_CONTAINER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CdmiContainer),
        suffix: None,
        parameters: &[],
    });

    /// `application/cdmi-domain`
    pub const APPLICATION_CDMI_DOMAIN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CdmiDomain),
        suffix: None,
        parameters: &[],
    });

    /// `application/cdmi-object`
    pub const APPLICATION_CDMI_OBJECT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CdmiObject),
        suffix: None,
        parameters: &[],
    });

    /// `application/cdmi-queue`
    pub const APPLICATION_CDMI_QUEUE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CdmiQueue),
        suffix: None,
        parameters: &[],
    });

    /// `application/cdni`
    pub const APPLICATION_CDNI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cdni),
        suffix: None,
        parameters: &[],
    });

    /// `application/CEA`
    pub const APPLICATION_CEA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cea),
        suffix: None,
        parameters: &[],
    });

    /// `application/cea-2018+xml`
    pub const APPLICATION_CEA_2018_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cea2018),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/cellml+xml`
    pub const APPLICATION_CELLML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cellml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/cfw`
    pub const APPLICATION_CFW: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cfw),
        suffix: None,
        parameters: &[],
    });

    /// `application/city+json`
    pub const APPLICATION_CITY_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::City),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/clr`
    pub const APPLICATION_CLR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Clr),
        suffix: None,
        parameters: &[],
    });

    /// `application/clue+xml`
    pub const APPLICATION_CLUE_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Clue),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/clue_info+xml`
    pub const APPLICATION_CLUE_INFO_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::ClueInfo),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/cms`
    pub const APPLICATION_CMS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cms),
        suffix: None,
        parameters: &[],
    });

    /// `application/cnrp+xml`
    pub const APPLICATION_CNRP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cnrp),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/coap-group+json`
    pub const APPLICATION_COAP_GROUP_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CoapGroup),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/coap-payload`
    pub const APPLICATION_COAP_PAYLOAD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CoapPayload),
        suffix: None,
        parameters: &[],
    });

    /// `application/commonground`
    pub const APPLICATION_COMMONGROUND: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Commonground),
        suffix: None,
        parameters: &[],
    });

    /// `application/conference-info+xml`
    pub const APPLICATION_CONFERENCE_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::ConferenceInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/cose`
    pub const APPLICATION_COSE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cose),
        suffix: None,
        parameters: &[],
    });

    /// `application/cose-key`
    pub const APPLICATION_COSE_KEY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CoseKey),
        suffix: None,
        parameters: &[],
    });

    /// `application/cose-key-set`
    pub const APPLICATION_COSE_KEY_SET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CoseKeySet),
        suffix: None,
        parameters: &[],
    });

    /// `application/cpl+xml`
    pub const APPLICATION_CPL_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cpl),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/csrattrs`
    pub const APPLICATION_CSRATTRS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Csrattrs),
        suffix: None,
        parameters: &[],
    });

    /// `application/csta+xml`
    pub const APPLICATION_CSTA_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Csta),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/CSTAdata+xml`
    pub const APPLICATION_CST_ADATA_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CstAdata),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/csvm+json`
    pub const APPLICATION_CSVM_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Csvm),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/cu-seeme`
    pub const APPLICATION_CU_SEEME: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::CuSeeme),
        suffix: None,
        parameters: &[],
    });

    /// `application/cwt`
    pub const APPLICATION_CWT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cwt),
        suffix: None,
        parameters: &[],
    });

    /// `application/cybercash`
    pub const APPLICATION_CYBERCASH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Cybercash),
        suffix: None,
        parameters: &[],
    });

    /// `application/dash+xml`
    pub const APPLICATION_DASH_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dash),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/dash-patch+xml`
    pub const APPLICATION_DASH_PATCH_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::DashPatch),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/dashdelta`
    pub const APPLICATION_DASHDELTA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dashdelta),
        suffix: None,
        parameters: &[],
    });

    /// `application/davmount+xml`
    pub const APPLICATION_DAVMOUNT_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Davmount),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/dca-rft`
    pub const APPLICATION_DCA_RFT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::DcaRft),
        suffix: None,
        parameters: &[],
    });

    /// `application/DCD`
    pub const APPLICATION_DCD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dcd),
        suffix: None,
        parameters: &[],
    });

    /// `application/dec-dx`
    pub const APPLICATION_DEC_DX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::DecDx),
        suffix: None,
        parameters: &[],
    });

    /// `application/dialog-info+xml`
    pub const APPLICATION_DIALOG_INFO_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::DialogInfo),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/dicom`
    pub const APPLICATION_DICOM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dicom),
        suffix: None,
        parameters: &[],
    });

    /// `application/dicom+json`
    pub const APPLICATION_DICOM_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dicom),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/dicom+xml`
    pub const APPLICATION_DICOM_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dicom),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/DII`
    pub const APPLICATION_DII: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dii),
        suffix: None,
        parameters: &[],
    });

    /// `application/DIT`
    pub const APPLICATION_DIT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dit),
        suffix: None,
        parameters: &[],
    });

    /// `application/dns`
    pub const APPLICATION_DNS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dns),
        suffix: None,
        parameters: &[],
    });

    /// `application/dns+json`
    pub const APPLICATION_DNS_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dns),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/dns-message`
    pub const APPLICATION_DNS_MESSAGE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::DnsMessage),
        suffix: None,
        parameters: &[],
    });

    /// `application/dots+cbor`
    pub const APPLICATION_DOTS_CBOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dots),
        suffix: Some(crate::Name::Interned(super::Suffix::Cbor)),
        parameters: &[],
    });

    /// `application/dskpp+xml`
    pub const APPLICATION_DSKPP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dskpp),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/dsptype`
    pub const APPLICATION_DSPTYPE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dsptype),
        suffix: None,
        parameters: &[],
    });

    /// `application/dssc+der`
    pub const APPLICATION_DSSC_DER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dssc),
        suffix: Some(crate::Name::Interned(super::Suffix::Der)),
        parameters: &[],
    });

    /// `application/dssc+xml`
    pub const APPLICATION_DSSC_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dssc),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/dvcs`
    pub const APPLICATION_DVCS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Dvcs),
        suffix: None,
        parameters: &[],
    });

    /// `application/EDI-consent`
    pub const APPLICATION_EDI_CONSENT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::EdiConsent),
        suffix: None,
        parameters: &[],
    });

    /// `application/EDI-X12`
    pub const APPLICATION_EDI_X12: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::EdiX12),
        suffix: None,
        parameters: &[],
    });

    /// `application/EDIFACT`
    pub const APPLICATION_EDIFACT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Edifact),
        suffix: None,
        parameters: &[],
    });

    /// `application/efi`
    pub const APPLICATION_EFI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Efi),
        suffix: None,
        parameters: &[],
    });

    /// `application/elm+json`
    pub const APPLICATION_ELM_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Elm),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/elm+xml`
    pub const APPLICATION_ELM_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Elm),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/EmergencyCallData.cap+xml`
    pub const APPLICATION_EMERGENCY_CALL_DATA_CAP_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::EmergencyCallDataCap),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/EmergencyCallData.Comment+xml`
    pub const APPLICATION_EMERGENCY_CALL_DATA_COMMENT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::EmergencyCallDataComment),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/EmergencyCallData.Control+xml`
    pub const APPLICATION_EMERGENCY_CALL_DATA_CONTROL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::EmergencyCallDataControl),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/EmergencyCallData.DeviceInfo+xml`
    pub const APPLICATION_EMERGENCY_CALL_DATA_DEVICE_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::EmergencyCallDataDeviceInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/EmergencyCallData.eCall.MSD`
    pub const APPLICATION_EMERGENCY_CALL_DATA_E_CALL_MSD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::EmergencyCallDataECallMsd),
            suffix: None,
            parameters: &[],
        });

    /// `application/EmergencyCallData.ProviderInfo+xml`
    pub const APPLICATION_EMERGENCY_CALL_DATA_PROVIDER_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::EmergencyCallDataProviderInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/EmergencyCallData.ServiceInfo+xml`
    pub const APPLICATION_EMERGENCY_CALL_DATA_SERVICE_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::EmergencyCallDataServiceInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/EmergencyCallData.SubscriberInfo+xml`
    pub const APPLICATION_EMERGENCY_CALL_DATA_SUBSCRIBER_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::EmergencyCallDataSubscriberInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/EmergencyCallData.VEDS+xml`
    pub const APPLICATION_EMERGENCY_CALL_DATA_VEDS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::EmergencyCallDataVeds),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/emma+xml`
    pub const APPLICATION_EMMA_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Emma),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/emotionml+xml`
    pub const APPLICATION_EMOTIONML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Emotionml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/encaprtp`
    pub const APPLICATION_ENCAPRTP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Encaprtp),
        suffix: None,
        parameters: &[],
    });

    /// `application/epp+xml`
    pub const APPLICATION_EPP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Epp),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/epub+zip`
    pub const APPLICATION_EPUB_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Epub),
        suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
        parameters: &[],
    });

    /// `application/eshop`
    pub const APPLICATION_ESHOP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Eshop),
        suffix: None,
        parameters: &[],
    });

    /// `application/example`
    pub const APPLICATION_EXAMPLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Example),
        suffix: None,
        parameters: &[],
    });

    /// `application/exi`
    pub const APPLICATION_EXI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Exi),
        suffix: None,
        parameters: &[],
    });

    /// `application/expect-ct-report+json`
    pub const APPLICATION_EXPECT_CT_REPORT_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::ExpectCtReport),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/express`
    pub const APPLICATION_EXPRESS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Express),
        suffix: None,
        parameters: &[],
    });

    /// `application/fastinfoset`
    pub const APPLICATION_FASTINFOSET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Fastinfoset),
        suffix: None,
        parameters: &[],
    });

    /// `application/fastsoap`
    pub const APPLICATION_FASTSOAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Fastsoap),
        suffix: None,
        parameters: &[],
    });

    /// `application/fdt+xml`
    pub const APPLICATION_FDT_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Fdt),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/fhir+json`
    pub const APPLICATION_FHIR_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Fhir),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/fhir+xml`
    pub const APPLICATION_FHIR_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Fhir),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/fits`
    pub const APPLICATION_FITS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Fits),
        suffix: None,
        parameters: &[],
    });

    /// `application/flexfec`
    pub const APPLICATION_FLEXFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Flexfec),
        suffix: None,
        parameters: &[],
    });

    /// `application/font-tdpfr`
    pub const APPLICATION_FONT_TDPFR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::FontTdpfr),
        suffix: None,
        parameters: &[],
    });

    /// `application/framework-attributes+xml`
    pub const APPLICATION_FRAMEWORK_ATTRIBUTES_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::FrameworkAttributes),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/futuresplash`
    pub const APPLICATION_FUTURESPLASH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Futuresplash),
        suffix: None,
        parameters: &[],
    });

    /// `application/geo+json`
    pub const APPLICATION_GEO_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Geo),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/geo+json-seq`
    pub const APPLICATION_GEO_JSON_SEQ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Geo),
        suffix: Some(crate::Name::Interned(super::Suffix::JsonSeq)),
        parameters: &[],
    });

    /// `application/geopackage+sqlite3`
    pub const APPLICATION_GEOPACKAGE_SQLITE3: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Geopackage),
            suffix: Some(crate::Name::Interned(super::Suffix::Sqlite3)),
            parameters: &[],
        });

    /// `application/geoxacml+xml`
    pub const APPLICATION_GEOXACML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Geoxacml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/gltf-buffer`
    pub const APPLICATION_GLTF_BUFFER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::GltfBuffer),
        suffix: None,
        parameters: &[],
    });

    /// `application/gml+xml`
    pub const APPLICATION_GML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Gml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/gzip`
    pub const APPLICATION_GZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Gzip),
        suffix: None,
        parameters: &[],
    });

    /// `application/H224`
    pub const APPLICATION_H224: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::H224),
        suffix: None,
        parameters: &[],
    });

    /// `application/held+xml`
    pub const APPLICATION_HELD_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Held),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/hta`
    pub const APPLICATION_HTA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Hta),
        suffix: None,
        parameters: &[],
    });

    /// `application/http`
    pub const APPLICATION_HTTP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Http),
        suffix: None,
        parameters: &[],
    });

    /// `application/hyperstudio`
    pub const APPLICATION_HYPERSTUDIO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Hyperstudio),
        suffix: None,
        parameters: &[],
    });

    /// `application/ibe-key-request+xml`
    pub const APPLICATION_IBE_KEY_REQUEST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::IbeKeyRequest),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/ibe-pkg-reply+xml`
    pub const APPLICATION_IBE_PKG_REPLY_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::IbePkgReply),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/ibe-pp-data`
    pub const APPLICATION_IBE_PP_DATA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::IbePpData),
        suffix: None,
        parameters: &[],
    });

    /// `application/iges`
    pub const APPLICATION_IGES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Iges),
        suffix: None,
        parameters: &[],
    });

    /// `application/im-iscomposing+xml`
    pub const APPLICATION_IM_ISCOMPOSING_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::ImIscomposing),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/index`
    pub const APPLICATION_INDEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Index),
        suffix: None,
        parameters: &[],
    });

    /// `application/index.cmd`
    pub const APPLICATION_INDEX_CMD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::IndexCmd),
        suffix: None,
        parameters: &[],
    });

    /// `application/index.obj`
    pub const APPLICATION_INDEX_OBJ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::IndexObj),
        suffix: None,
        parameters: &[],
    });

    /// `application/index.response`
    pub const APPLICATION_INDEX_RESPONSE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::IndexResponse),
        suffix: None,
        parameters: &[],
    });

    /// `application/index.vnd`
    pub const APPLICATION_INDEX_VND: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::IndexVnd),
        suffix: None,
        parameters: &[],
    });

    /// `application/inkml+xml`
    pub const APPLICATION_INKML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Inkml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/IOTP`
    pub const APPLICATION_IOTP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Iotp),
        suffix: None,
        parameters: &[],
    });

    /// `application/ipfix`
    pub const APPLICATION_IPFIX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ipfix),
        suffix: None,
        parameters: &[],
    });

    /// `application/ipp`
    pub const APPLICATION_IPP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ipp),
        suffix: None,
        parameters: &[],
    });

    /// `application/ISUP`
    pub const APPLICATION_ISUP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Isup),
        suffix: None,
        parameters: &[],
    });

    /// `application/its+xml`
    pub const APPLICATION_ITS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Its),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/java-archive`
    pub const APPLICATION_JAVA_ARCHIVE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::JavaArchive),
        suffix: None,
        parameters: &[],
    });

    /// `application/java-serialized-object`
    pub const APPLICATION_JAVA_SERIALIZED_OBJECT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::JavaSerializedObject),
            suffix: None,
            parameters: &[],
        });

    /// `application/java-vm`
    pub const APPLICATION_JAVA_VM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::JavaVm),
        suffix: None,
        parameters: &[],
    });

    /// `application/jf2feed+json`
    pub const APPLICATION_JF2FEED_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Jf2feed),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/jose`
    pub const APPLICATION_JOSE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Jose),
        suffix: None,
        parameters: &[],
    });

    /// `application/jose+json`
    pub const APPLICATION_JOSE_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Jose),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/jrd+json`
    pub const APPLICATION_JRD_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Jrd),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/jscalendar+json`
    pub const APPLICATION_JSCALENDAR_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Jscalendar),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/json`
    pub const APPLICATION_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Json),
        suffix: None,
        parameters: &[],
    });

    /// `application/json-patch+json`
    pub const APPLICATION_JSON_PATCH_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::JsonPatch),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/json-seq`
    pub const APPLICATION_JSON_SEQ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::JsonSeq),
        suffix: None,
        parameters: &[],
    });

    /// `application/jwk+json`
    pub const APPLICATION_JWK_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Jwk),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/jwk-set+json`
    pub const APPLICATION_JWK_SET_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::JwkSet),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/jwt`
    pub const APPLICATION_JWT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Jwt),
        suffix: None,
        parameters: &[],
    });

    /// `application/kpml-request+xml`
    pub const APPLICATION_KPML_REQUEST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::KpmlRequest),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/kpml-response+xml`
    pub const APPLICATION_KPML_RESPONSE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::KpmlResponse),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/ld+json`
    pub const APPLICATION_LD_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ld),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/lgr+xml`
    pub const APPLICATION_LGR_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Lgr),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/link-format`
    pub const APPLICATION_LINK_FORMAT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::LinkFormat),
        suffix: None,
        parameters: &[],
    });

    /// `application/load-control+xml`
    pub const APPLICATION_LOAD_CONTROL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::LoadControl),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/lost+xml`
    pub const APPLICATION_LOST_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Lost),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/lostsync+xml`
    pub const APPLICATION_LOSTSYNC_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Lostsync),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/lpf+zip`
    pub const APPLICATION_LPF_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Lpf),
        suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
        parameters: &[],
    });

    /// `application/LXF`
    pub const APPLICATION_LXF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Lxf),
        suffix: None,
        parameters: &[],
    });

    /// `application/m3g`
    pub const APPLICATION_M3G: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::M3g),
        suffix: None,
        parameters: &[],
    });

    /// `application/mac-binhex40`
    pub const APPLICATION_MAC_BINHEX40: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MacBinhex40),
        suffix: None,
        parameters: &[],
    });

    /// `application/mac-compactpro`
    pub const APPLICATION_MAC_COMPACTPRO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MacCompactpro),
        suffix: None,
        parameters: &[],
    });

    /// `application/macwriteii`
    pub const APPLICATION_MACWRITEII: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Macwriteii),
        suffix: None,
        parameters: &[],
    });

    /// `application/mads+xml`
    pub const APPLICATION_MADS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mads),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/manifest+json`
    pub const APPLICATION_MANIFEST_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Manifest),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/marc`
    pub const APPLICATION_MARC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Marc),
        suffix: None,
        parameters: &[],
    });

    /// `application/marcxml+xml`
    pub const APPLICATION_MARCXML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Marcxml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/mathematica`
    pub const APPLICATION_MATHEMATICA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mathematica),
        suffix: None,
        parameters: &[],
    });

    /// `application/mathml+xml`
    pub const APPLICATION_MATHML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mathml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/mathml-content+xml`
    pub const APPLICATION_MATHML_CONTENT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MathmlContent),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mathml-presentation+xml`
    pub const APPLICATION_MATHML_PRESENTATION_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MathmlPresentation),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-associated-procedure-description+xml`
    pub const APPLICATION_MBMS_ASSOCIATED_PROCEDURE_DESCRIPTION_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsAssociatedProcedureDescription),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-deregister+xml`
    pub const APPLICATION_MBMS_DEREGISTER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsDeregister),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-envelope+xml`
    pub const APPLICATION_MBMS_ENVELOPE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsEnvelope),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-msk+xml`
    pub const APPLICATION_MBMS_MSK_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MbmsMsk),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/mbms-msk-response+xml`
    pub const APPLICATION_MBMS_MSK_RESPONSE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsMskResponse),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-protection-description+xml`
    pub const APPLICATION_MBMS_PROTECTION_DESCRIPTION_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsProtectionDescription),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-reception-report+xml`
    pub const APPLICATION_MBMS_RECEPTION_REPORT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsReceptionReport),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-register+xml`
    pub const APPLICATION_MBMS_REGISTER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsRegister),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-register-response+xml`
    pub const APPLICATION_MBMS_REGISTER_RESPONSE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsRegisterResponse),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-schedule+xml`
    pub const APPLICATION_MBMS_SCHEDULE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsSchedule),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbms-user-service-description+xml`
    pub const APPLICATION_MBMS_USER_SERVICE_DESCRIPTION_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MbmsUserServiceDescription),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mbox`
    pub const APPLICATION_MBOX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mbox),
        suffix: None,
        parameters: &[],
    });

    /// `application/media-policy-dataset+xml`
    pub const APPLICATION_MEDIA_POLICY_DATASET_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MediaPolicyDataset),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mediaservercontrol+xml`
    pub const APPLICATION_MEDIASERVERCONTROL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Mediaservercontrol),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/media_control+xml`
    pub const APPLICATION_MEDIA_CONTROL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MediaControl),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/merge-patch+json`
    pub const APPLICATION_MERGE_PATCH_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MergePatch),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/metalink4+xml`
    pub const APPLICATION_METALINK4_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Metalink4),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/mets+xml`
    pub const APPLICATION_METS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mets),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/MF4`
    pub const APPLICATION_MF4: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mf4),
        suffix: None,
        parameters: &[],
    });

    /// `application/mikey`
    pub const APPLICATION_MIKEY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mikey),
        suffix: None,
        parameters: &[],
    });

    /// `application/mipc`
    pub const APPLICATION_MIPC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mipc),
        suffix: None,
        parameters: &[],
    });

    /// `application/missing-blocks+cbor-seq`
    pub const APPLICATION_MISSING_BLOCKS_CBOR_SEQ: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MissingBlocks),
            suffix: Some(crate::Name::Interned(super::Suffix::CborSeq)),
            parameters: &[],
        });

    /// `application/mmt-aei+xml`
    pub const APPLICATION_MMT_AEI_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MmtAei),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/mmt-usd+xml`
    pub const APPLICATION_MMT_USD_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MmtUsd),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/mods+xml`
    pub const APPLICATION_MODS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mods),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/moss-keys`
    pub const APPLICATION_MOSS_KEYS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MossKeys),
        suffix: None,
        parameters: &[],
    });

    /// `application/moss-signature`
    pub const APPLICATION_MOSS_SIGNATURE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MossSignature),
        suffix: None,
        parameters: &[],
    });

    /// `application/mosskey-data`
    pub const APPLICATION_MOSSKEY_DATA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MosskeyData),
        suffix: None,
        parameters: &[],
    });

    /// `application/mosskey-request`
    pub const APPLICATION_MOSSKEY_REQUEST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MosskeyRequest),
        suffix: None,
        parameters: &[],
    });

    /// `application/mp21`
    pub const APPLICATION_MP21: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mp21),
        suffix: None,
        parameters: &[],
    });

    /// `application/mp4`
    pub const APPLICATION_MP4: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mp4),
        suffix: None,
        parameters: &[],
    });

    /// `application/mpeg4-generic`
    pub const APPLICATION_MPEG4_GENERIC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mpeg4Generic),
        suffix: None,
        parameters: &[],
    });

    /// `application/mpeg4-iod`
    pub const APPLICATION_MPEG4_IOD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mpeg4Iod),
        suffix: None,
        parameters: &[],
    });

    /// `application/mpeg4-iod-xmt`
    pub const APPLICATION_MPEG4_IOD_XMT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mpeg4IodXmt),
        suffix: None,
        parameters: &[],
    });

    /// `application/mrb-consumer+xml`
    pub const APPLICATION_MRB_CONSUMER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::MrbConsumer),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/mrb-publish+xml`
    pub const APPLICATION_MRB_PUBLISH_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MrbPublish),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/msaccess`
    pub const APPLICATION_MSACCESS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Msaccess),
        suffix: None,
        parameters: &[],
    });

    /// `application/msc-ivr+xml`
    pub const APPLICATION_MSC_IVR_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MscIvr),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/msc-mixer+xml`
    pub const APPLICATION_MSC_MIXER_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MscMixer),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/msword`
    pub const APPLICATION_MSWORD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Msword),
        suffix: None,
        parameters: &[],
    });

    /// `application/mud+json`
    pub const APPLICATION_MUD_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mud),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/multipart-core`
    pub const APPLICATION_MULTIPART_CORE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::MultipartCore),
        suffix: None,
        parameters: &[],
    });

    /// `application/mxf`
    pub const APPLICATION_MXF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Mxf),
        suffix: None,
        parameters: &[],
    });

    /// `application/n-quads`
    pub const APPLICATION_N_QUADS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::NQuads),
        suffix: None,
        parameters: &[],
    });

    /// `application/n-triples`
    pub const APPLICATION_N_TRIPLES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::NTriples),
        suffix: None,
        parameters: &[],
    });

    /// `application/nasdata`
    pub const APPLICATION_NASDATA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Nasdata),
        suffix: None,
        parameters: &[],
    });

    /// `application/news-checkgroups`
    pub const APPLICATION_NEWS_CHECKGROUPS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::NewsCheckgroups),
            suffix: None,
            parameters: &[],
        });

    /// `application/news-groupinfo`
    pub const APPLICATION_NEWS_GROUPINFO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::NewsGroupinfo),
        suffix: None,
        parameters: &[],
    });

    /// `application/news-transmission`
    pub const APPLICATION_NEWS_TRANSMISSION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::NewsTransmission),
            suffix: None,
            parameters: &[],
        });

    /// `application/nlsml+xml`
    pub const APPLICATION_NLSML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Nlsml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/node`
    pub const APPLICATION_NODE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Node),
        suffix: None,
        parameters: &[],
    });

    /// `application/nss`
    pub const APPLICATION_NSS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Nss),
        suffix: None,
        parameters: &[],
    });

    /// `application/oauth-authz-req+jwt`
    pub const APPLICATION_OAUTH_AUTHZ_REQ_JWT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::OauthAuthzReq),
            suffix: Some(crate::Name::Interned(super::Suffix::Jwt)),
            parameters: &[],
        });

    /// `application/oblivious-dns-message`
    pub const APPLICATION_OBLIVIOUS_DNS_MESSAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::ObliviousDnsMessage),
            suffix: None,
            parameters: &[],
        });

    /// `application/ocsp-request`
    pub const APPLICATION_OCSP_REQUEST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::OcspRequest),
        suffix: None,
        parameters: &[],
    });

    /// `application/ocsp-response`
    pub const APPLICATION_OCSP_RESPONSE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::OcspResponse),
        suffix: None,
        parameters: &[],
    });

    /// `application/octet-stream`
    pub const APPLICATION_OCTET_STREAM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::OctetStream),
        suffix: None,
        parameters: &[],
    });

    /// `application/ODA`
    pub const APPLICATION_ODA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Oda),
        suffix: None,
        parameters: &[],
    });

    /// `application/odm+xml`
    pub const APPLICATION_ODM_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Odm),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/ODX`
    pub const APPLICATION_ODX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Odx),
        suffix: None,
        parameters: &[],
    });

    /// `application/oebps-package+xml`
    pub const APPLICATION_OEBPS_PACKAGE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::OebpsPackage),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/ogg`
    pub const APPLICATION_OGG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ogg),
        suffix: None,
        parameters: &[],
    });

    /// `application/onenote`
    pub const APPLICATION_ONENOTE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Onenote),
        suffix: None,
        parameters: &[],
    });

    /// `application/opc-nodeset+xml`
    pub const APPLICATION_OPC_NODESET_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::OpcNodeset),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/oscore`
    pub const APPLICATION_OSCORE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Oscore),
        suffix: None,
        parameters: &[],
    });

    /// `application/oxps`
    pub const APPLICATION_OXPS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Oxps),
        suffix: None,
        parameters: &[],
    });

    /// `application/p21`
    pub const APPLICATION_P21: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::P21),
        suffix: None,
        parameters: &[],
    });

    /// `application/p21+zip`
    pub const APPLICATION_P21_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::P21),
        suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
        parameters: &[],
    });

    /// `application/p2p-overlay+xml`
    pub const APPLICATION_P2P_OVERLAY_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::P2pOverlay),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/parityfec`
    pub const APPLICATION_PARITYFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Parityfec),
        suffix: None,
        parameters: &[],
    });

    /// `application/passport`
    pub const APPLICATION_PASSPORT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Passport),
        suffix: None,
        parameters: &[],
    });

    /// `application/patch-ops-error+xml`
    pub const APPLICATION_PATCH_OPS_ERROR_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::PatchOpsError),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/pdf`
    pub const APPLICATION_PDF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pdf),
        suffix: None,
        parameters: &[],
    });

    /// `application/PDX`
    pub const APPLICATION_PDX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pdx),
        suffix: None,
        parameters: &[],
    });

    /// `application/pem-certificate-chain`
    pub const APPLICATION_PEM_CERTIFICATE_CHAIN: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::PemCertificateChain),
            suffix: None,
            parameters: &[],
        });

    /// `application/pgp-encrypted`
    pub const APPLICATION_PGP_ENCRYPTED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PgpEncrypted),
        suffix: None,
        parameters: &[],
    });

    /// `application/pgp-keys`
    pub const APPLICATION_PGP_KEYS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PgpKeys),
        suffix: None,
        parameters: &[],
    });

    /// `application/pgp-signature`
    pub const APPLICATION_PGP_SIGNATURE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PgpSignature),
        suffix: None,
        parameters: &[],
    });

    /// `application/pics-rules`
    pub const APPLICATION_PICS_RULES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PicsRules),
        suffix: None,
        parameters: &[],
    });

    /// `application/pidf+xml`
    pub const APPLICATION_PIDF_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pidf),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/pidf-diff+xml`
    pub const APPLICATION_PIDF_DIFF_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PidfDiff),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/pkcs10`
    pub const APPLICATION_PKCS10: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pkcs10),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkcs12`
    pub const APPLICATION_PKCS12: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pkcs12),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkcs7-mime`
    pub const APPLICATION_PKCS7_MIME: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pkcs7Mime),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkcs7-signature`
    pub const APPLICATION_PKCS7_SIGNATURE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pkcs7Signature),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkcs8`
    pub const APPLICATION_PKCS8: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pkcs8),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkcs8-encrypted`
    pub const APPLICATION_PKCS8_ENCRYPTED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pkcs8Encrypted),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkix-attr-cert`
    pub const APPLICATION_PKIX_ATTR_CERT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PkixAttrCert),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkix-cert`
    pub const APPLICATION_PKIX_CERT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PkixCert),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkix-crl`
    pub const APPLICATION_PKIX_CRL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PkixCrl),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkix-pkipath`
    pub const APPLICATION_PKIX_PKIPATH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PkixPkipath),
        suffix: None,
        parameters: &[],
    });

    /// `application/pkixcmp`
    pub const APPLICATION_PKIXCMP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pkixcmp),
        suffix: None,
        parameters: &[],
    });

    /// `application/pls+xml`
    pub const APPLICATION_PLS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pls),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/poc-settings+xml`
    pub const APPLICATION_POC_SETTINGS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::PocSettings),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/postscript`
    pub const APPLICATION_POSTSCRIPT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Postscript),
        suffix: None,
        parameters: &[],
    });

    /// `application/ppsp-tracker+json`
    pub const APPLICATION_PPSP_TRACKER_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::PpspTracker),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/problem+json`
    pub const APPLICATION_PROBLEM_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Problem),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/problem+xml`
    pub const APPLICATION_PROBLEM_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Problem),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/provenance+xml`
    pub const APPLICATION_PROVENANCE_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Provenance),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/prs.alvestrand.titrax-sheet`
    pub const APPLICATION_PRS_ALVESTRAND_TITRAX_SHEET: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::PrsAlvestrandTitraxSheet),
            suffix: None,
            parameters: &[],
        });

    /// `application/prs.cww`
    pub const APPLICATION_PRS_CWW: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PrsCww),
        suffix: None,
        parameters: &[],
    });

    /// `application/prs.cyn`
    pub const APPLICATION_PRS_CYN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PrsCyn),
        suffix: None,
        parameters: &[],
    });

    /// `application/prs.hpub+zip`
    pub const APPLICATION_PRS_HPUB_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PrsHpub),
        suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
        parameters: &[],
    });

    /// `application/prs.nprend`
    pub const APPLICATION_PRS_NPREND: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PrsNprend),
        suffix: None,
        parameters: &[],
    });

    /// `application/prs.plucker`
    pub const APPLICATION_PRS_PLUCKER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PrsPlucker),
        suffix: None,
        parameters: &[],
    });

    /// `application/prs.rdf-xml-crypt`
    pub const APPLICATION_PRS_RDF_XML_CRYPT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::PrsRdfXmlCrypt),
            suffix: None,
            parameters: &[],
        });

    /// `application/prs.xsf+xml`
    pub const APPLICATION_PRS_XSF_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::PrsXsf),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/pskc+xml`
    pub const APPLICATION_PSKC_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pskc),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/pvd+json`
    pub const APPLICATION_PVD_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Pvd),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/QSIG`
    pub const APPLICATION_QSIG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Qsig),
        suffix: None,
        parameters: &[],
    });

    /// `application/raptorfec`
    pub const APPLICATION_RAPTORFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Raptorfec),
        suffix: None,
        parameters: &[],
    });

    /// `application/rdap+json`
    pub const APPLICATION_RDAP_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Rdap),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/rdf+xml`
    pub const APPLICATION_RDF_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Rdf),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/reginfo+xml`
    pub const APPLICATION_REGINFO_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Reginfo),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/relax-ng-compact-syntax`
    pub const APPLICATION_RELAX_NG_COMPACT_SYNTAX: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::RelaxNgCompactSyntax),
            suffix: None,
            parameters: &[],
        });

    /// `application/remote-printing`
    pub const APPLICATION_REMOTE_PRINTING: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::RemotePrinting),
        suffix: None,
        parameters: &[],
    });

    /// `application/reputon+json`
    pub const APPLICATION_REPUTON_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Reputon),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/resource-lists+xml`
    pub const APPLICATION_RESOURCE_LISTS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::ResourceLists),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/resource-lists-diff+xml`
    pub const APPLICATION_RESOURCE_LISTS_DIFF_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::ResourceListsDiff),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/rfc+xml`
    pub const APPLICATION_RFC_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Rfc),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/riscos`
    pub const APPLICATION_RISCOS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Riscos),
        suffix: None,
        parameters: &[],
    });

    /// `application/rlmi+xml`
    pub const APPLICATION_RLMI_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Rlmi),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/rls-services+xml`
    pub const APPLICATION_RLS_SERVICES_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::RlsServices),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/route-apd+xml`
    pub const APPLICATION_ROUTE_APD_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::RouteApd),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/route-s-tsid+xml`
    pub const APPLICATION_ROUTE_S_TSID_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::RouteSTsid),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/route-usd+xml`
    pub const APPLICATION_ROUTE_USD_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::RouteUsd),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/rpki-ghostbusters`
    pub const APPLICATION_RPKI_GHOSTBUSTERS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::RpkiGhostbusters),
            suffix: None,
            parameters: &[],
        });

    /// `application/rpki-manifest`
    pub const APPLICATION_RPKI_MANIFEST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::RpkiManifest),
        suffix: None,
        parameters: &[],
    });

    /// `application/rpki-publication`
    pub const APPLICATION_RPKI_PUBLICATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::RpkiPublication),
            suffix: None,
            parameters: &[],
        });

    /// `application/rpki-roa`
    pub const APPLICATION_RPKI_ROA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::RpkiRoa),
        suffix: None,
        parameters: &[],
    });

    /// `application/rpki-updown`
    pub const APPLICATION_RPKI_UPDOWN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::RpkiUpdown),
        suffix: None,
        parameters: &[],
    });

    /// `application/rtf`
    pub const APPLICATION_RTF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Rtf),
        suffix: None,
        parameters: &[],
    });

    /// `application/rtploopback`
    pub const APPLICATION_RTPLOOPBACK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Rtploopback),
        suffix: None,
        parameters: &[],
    });

    /// `application/rtx`
    pub const APPLICATION_RTX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Rtx),
        suffix: None,
        parameters: &[],
    });

    /// `application/samlassertion+xml`
    pub const APPLICATION_SAMLASSERTION_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Samlassertion),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/samlmetadata+xml`
    pub const APPLICATION_SAMLMETADATA_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Samlmetadata),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/sarif+json`
    pub const APPLICATION_SARIF_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sarif),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/sarif-external-properties+json`
    pub const APPLICATION_SARIF_EXTERNAL_PROPERTIES_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SarifExternalProperties),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/sbe`
    pub const APPLICATION_SBE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sbe),
        suffix: None,
        parameters: &[],
    });

    /// `application/sbml+xml`
    pub const APPLICATION_SBML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sbml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/scaip+xml`
    pub const APPLICATION_SCAIP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Scaip),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/scim+json`
    pub const APPLICATION_SCIM_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Scim),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/scvp-cv-request`
    pub const APPLICATION_SCVP_CV_REQUEST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::ScvpCvRequest),
        suffix: None,
        parameters: &[],
    });

    /// `application/scvp-cv-response`
    pub const APPLICATION_SCVP_CV_RESPONSE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::ScvpCvResponse),
            suffix: None,
            parameters: &[],
        });

    /// `application/scvp-vp-request`
    pub const APPLICATION_SCVP_VP_REQUEST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::ScvpVpRequest),
        suffix: None,
        parameters: &[],
    });

    /// `application/scvp-vp-response`
    pub const APPLICATION_SCVP_VP_RESPONSE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::ScvpVpResponse),
            suffix: None,
            parameters: &[],
        });

    /// `application/sdp`
    pub const APPLICATION_SDP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sdp),
        suffix: None,
        parameters: &[],
    });

    /// `application/secevent+jwt`
    pub const APPLICATION_SECEVENT_JWT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Secevent),
        suffix: Some(crate::Name::Interned(super::Suffix::Jwt)),
        parameters: &[],
    });

    /// `application/senml+cbor`
    pub const APPLICATION_SENML_CBOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Senml),
        suffix: Some(crate::Name::Interned(super::Suffix::Cbor)),
        parameters: &[],
    });

    /// `application/senml+json`
    pub const APPLICATION_SENML_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Senml),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/senml+xml`
    pub const APPLICATION_SENML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Senml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/senml-etch+cbor`
    pub const APPLICATION_SENML_ETCH_CBOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::SenmlEtch),
        suffix: Some(crate::Name::Interned(super::Suffix::Cbor)),
        parameters: &[],
    });

    /// `application/senml-etch+json`
    pub const APPLICATION_SENML_ETCH_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::SenmlEtch),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/senml-exi`
    pub const APPLICATION_SENML_EXI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::SenmlExi),
        suffix: None,
        parameters: &[],
    });

    /// `application/sensml+cbor`
    pub const APPLICATION_SENSML_CBOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sensml),
        suffix: Some(crate::Name::Interned(super::Suffix::Cbor)),
        parameters: &[],
    });

    /// `application/sensml+json`
    pub const APPLICATION_SENSML_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sensml),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/sensml+xml`
    pub const APPLICATION_SENSML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sensml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/sensml-exi`
    pub const APPLICATION_SENSML_EXI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::SensmlExi),
        suffix: None,
        parameters: &[],
    });

    /// `application/sep+xml`
    pub const APPLICATION_SEP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sep),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/sep-exi`
    pub const APPLICATION_SEP_EXI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::SepExi),
        suffix: None,
        parameters: &[],
    });

    /// `application/session-info`
    pub const APPLICATION_SESSION_INFO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::SessionInfo),
        suffix: None,
        parameters: &[],
    });

    /// `application/set-payment`
    pub const APPLICATION_SET_PAYMENT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::SetPayment),
        suffix: None,
        parameters: &[],
    });

    /// `application/set-payment-initiation`
    pub const APPLICATION_SET_PAYMENT_INITIATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SetPaymentInitiation),
            suffix: None,
            parameters: &[],
        });

    /// `application/set-registration`
    pub const APPLICATION_SET_REGISTRATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SetRegistration),
            suffix: None,
            parameters: &[],
        });

    /// `application/set-registration-initiation`
    pub const APPLICATION_SET_REGISTRATION_INITIATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SetRegistrationInitiation),
            suffix: None,
            parameters: &[],
        });

    /// `application/SGML`
    pub const APPLICATION_SGML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sgml),
        suffix: None,
        parameters: &[],
    });

    /// `application/sgml-open-catalog`
    pub const APPLICATION_SGML_OPEN_CATALOG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SgmlOpenCatalog),
            suffix: None,
            parameters: &[],
        });

    /// `application/shf+xml`
    pub const APPLICATION_SHF_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Shf),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/sieve`
    pub const APPLICATION_SIEVE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sieve),
        suffix: None,
        parameters: &[],
    });

    /// `application/simple-filter+xml`
    pub const APPLICATION_SIMPLE_FILTER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SimpleFilter),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/simple-message-summary`
    pub const APPLICATION_SIMPLE_MESSAGE_SUMMARY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SimpleMessageSummary),
            suffix: None,
            parameters: &[],
        });

    /// `application/simpleSymbolContainer`
    pub const APPLICATION_SIMPLE_SYMBOL_CONTAINER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SimpleSymbolContainer),
            suffix: None,
            parameters: &[],
        });

    /// `application/sipc`
    pub const APPLICATION_SIPC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sipc),
        suffix: None,
        parameters: &[],
    });

    /// `application/slate`
    pub const APPLICATION_SLATE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Slate),
        suffix: None,
        parameters: &[],
    });

    /// `application/smil+xml`
    pub const APPLICATION_SMIL_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Smil),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/smpte336m`
    pub const APPLICATION_SMPTE336M: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Smpte336m),
        suffix: None,
        parameters: &[],
    });

    /// `application/soap+fastinfoset`
    pub const APPLICATION_SOAP_FASTINFOSET: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Soap),
            suffix: Some(crate::Name::Interned(super::Suffix::Fastinfoset)),
            parameters: &[],
        });

    /// `application/soap+xml`
    pub const APPLICATION_SOAP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Soap),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/sparql-query`
    pub const APPLICATION_SPARQL_QUERY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::SparqlQuery),
        suffix: None,
        parameters: &[],
    });

    /// `application/sparql-results+xml`
    pub const APPLICATION_SPARQL_RESULTS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SparqlResults),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/spdx+json`
    pub const APPLICATION_SPDX_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Spdx),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/spirits-event+xml`
    pub const APPLICATION_SPIRITS_EVENT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::SpiritsEvent),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/sql`
    pub const APPLICATION_SQL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sql),
        suffix: None,
        parameters: &[],
    });

    /// `application/srgs`
    pub const APPLICATION_SRGS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Srgs),
        suffix: None,
        parameters: &[],
    });

    /// `application/srgs+xml`
    pub const APPLICATION_SRGS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Srgs),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/sru+xml`
    pub const APPLICATION_SRU_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Sru),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/ssml+xml`
    pub const APPLICATION_SSML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ssml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/stix+json`
    pub const APPLICATION_STIX_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Stix),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/swid+xml`
    pub const APPLICATION_SWID_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Swid),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/tamp-apex-update`
    pub const APPLICATION_TAMP_APEX_UPDATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TampApexUpdate),
            suffix: None,
            parameters: &[],
        });

    /// `application/tamp-apex-update-confirm`
    pub const APPLICATION_TAMP_APEX_UPDATE_CONFIRM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TampApexUpdateConfirm),
            suffix: None,
            parameters: &[],
        });

    /// `application/tamp-community-update`
    pub const APPLICATION_TAMP_COMMUNITY_UPDATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TampCommunityUpdate),
            suffix: None,
            parameters: &[],
        });

    /// `application/tamp-community-update-confirm`
    pub const APPLICATION_TAMP_COMMUNITY_UPDATE_CONFIRM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TampCommunityUpdateConfirm),
            suffix: None,
            parameters: &[],
        });

    /// `application/tamp-error`
    pub const APPLICATION_TAMP_ERROR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::TampError),
        suffix: None,
        parameters: &[],
    });

    /// `application/tamp-sequence-adjust`
    pub const APPLICATION_TAMP_SEQUENCE_ADJUST: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TampSequenceAdjust),
            suffix: None,
            parameters: &[],
        });

    /// `application/tamp-sequence-adjust-confirm`
    pub const APPLICATION_TAMP_SEQUENCE_ADJUST_CONFIRM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TampSequenceAdjustConfirm),
            suffix: None,
            parameters: &[],
        });

    /// `application/tamp-status-query`
    pub const APPLICATION_TAMP_STATUS_QUERY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TampStatusQuery),
            suffix: None,
            parameters: &[],
        });

    /// `application/tamp-status-response`
    pub const APPLICATION_TAMP_STATUS_RESPONSE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TampStatusResponse),
            suffix: None,
            parameters: &[],
        });

    /// `application/tamp-update`
    pub const APPLICATION_TAMP_UPDATE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::TampUpdate),
        suffix: None,
        parameters: &[],
    });

    /// `application/tamp-update-confirm`
    pub const APPLICATION_TAMP_UPDATE_CONFIRM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TampUpdateConfirm),
            suffix: None,
            parameters: &[],
        });

    /// `application/taxii+json`
    pub const APPLICATION_TAXII_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Taxii),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/td+json`
    pub const APPLICATION_TD_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Td),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/tei+xml`
    pub const APPLICATION_TEI_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Tei),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/TETRA_ISI`
    pub const APPLICATION_TETRA_ISI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::TetraIsi),
        suffix: None,
        parameters: &[],
    });

    /// `application/thraud+xml`
    pub const APPLICATION_THRAUD_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Thraud),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/timestamp-query`
    pub const APPLICATION_TIMESTAMP_QUERY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::TimestampQuery),
        suffix: None,
        parameters: &[],
    });

    /// `application/timestamp-reply`
    pub const APPLICATION_TIMESTAMP_REPLY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::TimestampReply),
        suffix: None,
        parameters: &[],
    });

    /// `application/timestamped-data`
    pub const APPLICATION_TIMESTAMPED_DATA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TimestampedData),
            suffix: None,
            parameters: &[],
        });

    /// `application/tlsrpt+gzip`
    pub const APPLICATION_TLSRPT_GZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Tlsrpt),
        suffix: Some(crate::Name::Interned(super::Suffix::Gzip)),
        parameters: &[],
    });

    /// `application/tlsrpt+json`
    pub const APPLICATION_TLSRPT_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Tlsrpt),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/tnauthlist`
    pub const APPLICATION_TNAUTHLIST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Tnauthlist),
        suffix: None,
        parameters: &[],
    });

    /// `application/token-introspection+jwt`
    pub const APPLICATION_TOKEN_INTROSPECTION_JWT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TokenIntrospection),
            suffix: Some(crate::Name::Interned(super::Suffix::Jwt)),
            parameters: &[],
        });

    /// `application/trickle-ice-sdpfrag`
    pub const APPLICATION_TRICKLE_ICE_SDPFRAG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::TrickleIceSdpfrag),
            suffix: None,
            parameters: &[],
        });

    /// `application/trig`
    pub const APPLICATION_TRIG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Trig),
        suffix: None,
        parameters: &[],
    });

    /// `application/ttml+xml`
    pub const APPLICATION_TTML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ttml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/tve-trigger`
    pub const APPLICATION_TVE_TRIGGER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::TveTrigger),
        suffix: None,
        parameters: &[],
    });

    /// `application/tzif`
    pub const APPLICATION_TZIF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Tzif),
        suffix: None,
        parameters: &[],
    });

    /// `application/tzif-leap`
    pub const APPLICATION_TZIF_LEAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::TzifLeap),
        suffix: None,
        parameters: &[],
    });

    /// `application/ulpfec`
    pub const APPLICATION_ULPFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Ulpfec),
        suffix: None,
        parameters: &[],
    });

    /// `application/urc-grpsheet+xml`
    pub const APPLICATION_URC_GRPSHEET_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::UrcGrpsheet),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/urc-ressheet+xml`
    pub const APPLICATION_URC_RESSHEET_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::UrcRessheet),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/urc-targetdesc+xml`
    pub const APPLICATION_URC_TARGETDESC_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::UrcTargetdesc),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/urc-uisocketdesc+xml`
    pub const APPLICATION_URC_UISOCKETDESC_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::UrcUisocketdesc),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vcard+json`
    pub const APPLICATION_VCARD_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vcard),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vcard+xml`
    pub const APPLICATION_VCARD_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vcard),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vemmi`
    pub const APPLICATION_VEMMI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vemmi),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.1000minds.decision-model+xml`
    pub const APPLICATION_VND_1000MINDS_DECISION_MODEL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd1000mindsDecisionModel),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp-prose+xml`
    pub const APPLICATION_VND_3GPP_PROSE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppProse),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp-prose-pc3ch+xml`
    pub const APPLICATION_VND_3GPP_PROSE_PC3CH_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppProsePc3ch),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp-v2x-local-service-information`
    pub const APPLICATION_VND_3GPP_V2X_LOCAL_SERVICE_INFORMATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppV2xLocalServiceInformation),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.3gpp.5gnas`
    pub const APPLICATION_VND_3GPP_5GNAS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gpp5gnas),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.3gpp.access-transfer-events+xml`
    pub const APPLICATION_VND_3GPP_ACCESS_TRANSFER_EVENTS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppAccessTransferEvents),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.bsf+xml`
    pub const APPLICATION_VND_3GPP_BSF_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppBsf),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.GMOP+xml`
    pub const APPLICATION_VND_3GPP_GMOP_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppGmop),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.gtpc`
    pub const APPLICATION_VND_3GPP_GTPC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gppGtpc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.3gpp.interworking-data`
    pub const APPLICATION_VND_3GPP_INTERWORKING_DATA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppInterworkingData),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.3gpp.lpp`
    pub const APPLICATION_VND_3GPP_LPP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gppLpp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.3gpp.mc-signalling-ear`
    pub const APPLICATION_VND_3GPP_MC_SIGNALLING_EAR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcSignallingEar),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcdata-affiliation-command+xml`
    pub const APPLICATION_VND_3GPP_MCDATA_AFFILIATION_COMMAND_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcdataAffiliationCommand),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcdata-info+xml`
    pub const APPLICATION_VND_3GPP_MCDATA_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcdataInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcdata-payload`
    pub const APPLICATION_VND_3GPP_MCDATA_PAYLOAD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcdataPayload),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcdata-service-config+xml`
    pub const APPLICATION_VND_3GPP_MCDATA_SERVICE_CONFIG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcdataServiceConfig),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcdata-signalling`
    pub const APPLICATION_VND_3GPP_MCDATA_SIGNALLING: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcdataSignalling),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcdata-ue-config+xml`
    pub const APPLICATION_VND_3GPP_MCDATA_UE_CONFIG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcdataUeConfig),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcdata-user-profile+xml`
    pub const APPLICATION_VND_3GPP_MCDATA_USER_PROFILE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcdataUserProfile),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-affiliation-command+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_AFFILIATION_COMMAND_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttAffiliationCommand),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-floor-request+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_FLOOR_REQUEST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttFloorRequest),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-info+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-location-info+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_LOCATION_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttLocationInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-mbms-usage-info+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_MBMS_USAGE_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttMbmsUsageInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-service-config+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_SERVICE_CONFIG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttServiceConfig),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-signed+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_SIGNED_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttSigned),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-ue-config+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_UE_CONFIG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttUeConfig),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-ue-init-config+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_UE_INIT_CONFIG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttUeInitConfig),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcptt-user-profile+xml`
    pub const APPLICATION_VND_3GPP_MCPTT_USER_PROFILE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcpttUserProfile),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcvideo-affiliation-command+xml`
    pub const APPLICATION_VND_3GPP_MCVIDEO_AFFILIATION_COMMAND_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcvideoAffiliationCommand),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcvideo-info+xml`
    pub const APPLICATION_VND_3GPP_MCVIDEO_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcvideoInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcvideo-location-info+xml`
    pub const APPLICATION_VND_3GPP_MCVIDEO_LOCATION_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcvideoLocationInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcvideo-mbms-usage-info+xml`
    pub const APPLICATION_VND_3GPP_MCVIDEO_MBMS_USAGE_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcvideoMbmsUsageInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcvideo-service-config+xml`
    pub const APPLICATION_VND_3GPP_MCVIDEO_SERVICE_CONFIG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcvideoServiceConfig),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcvideo-transmission-request+xml`
    pub const APPLICATION_VND_3GPP_MCVIDEO_TRANSMISSION_REQUEST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcvideoTransmissionRequest),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcvideo-ue-config+xml`
    pub const APPLICATION_VND_3GPP_MCVIDEO_UE_CONFIG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcvideoUeConfig),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mcvideo-user-profile+xml`
    pub const APPLICATION_VND_3GPP_MCVIDEO_USER_PROFILE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMcvideoUserProfile),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.mid-call+xml`
    pub const APPLICATION_VND_3GPP_MID_CALL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppMidCall),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.ngap`
    pub const APPLICATION_VND_3GPP_NGAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gppNgap),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.3gpp.pfcp`
    pub const APPLICATION_VND_3GPP_PFCP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gppPfcp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.3gpp.pic-bw-large`
    pub const APPLICATION_VND_3GPP_PIC_BW_LARGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppPicBwLarge),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.3gpp.pic-bw-small`
    pub const APPLICATION_VND_3GPP_PIC_BW_SMALL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppPicBwSmall),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.3gpp.pic-bw-var`
    pub const APPLICATION_VND_3GPP_PIC_BW_VAR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppPicBwVar),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.3gpp.s1ap`
    pub const APPLICATION_VND_3GPP_S1AP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gppS1ap),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.3gpp.sms`
    pub const APPLICATION_VND_3GPP_SMS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gppSms),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.3gpp.sms+xml`
    pub const APPLICATION_VND_3GPP_SMS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppSms),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.srvcc-ext+xml`
    pub const APPLICATION_VND_3GPP_SRVCC_EXT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppSrvccExt),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.SRVCC-info+xml`
    pub const APPLICATION_VND_3GPP_SRVCC_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppSrvccInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.state-and-event-info+xml`
    pub const APPLICATION_VND_3GPP_STATE_AND_EVENT_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppStateAndEventInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp.ussd+xml`
    pub const APPLICATION_VND_3GPP_USSD_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gppUssd),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp2.bcmcsinfo+xml`
    pub const APPLICATION_VND_3GPP2_BCMCSINFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3gpp2Bcmcsinfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.3gpp2.sms`
    pub const APPLICATION_VND_3GPP2_SMS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gpp2Sms),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.3gpp2.tcap`
    pub const APPLICATION_VND_3GPP2_TCAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gpp2Tcap),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.3lightssoftware.imagescal`
    pub const APPLICATION_VND_3LIGHTSSOFTWARE_IMAGESCAL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3lightssoftwareImagescal),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.3M.Post-it-Notes`
    pub const APPLICATION_VND_3M_POST_IT_NOTES: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::Vnd3mPostItNotes),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.accpac.simply.aso`
    pub const APPLICATION_VND_ACCPAC_SIMPLY_ASO: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAccpacSimplyAso),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.accpac.simply.imp`
    pub const APPLICATION_VND_ACCPAC_SIMPLY_IMP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAccpacSimplyImp),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.acucobol`
    pub const APPLICATION_VND_ACUCOBOL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAcucobol),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.acucorp`
    pub const APPLICATION_VND_ACUCORP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAcucorp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.adobe.flash.movie`
    pub const APPLICATION_VND_ADOBE_FLASH_MOVIE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAdobeFlashMovie),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.adobe.formscentral.fcdt`
    pub const APPLICATION_VND_ADOBE_FORMSCENTRAL_FCDT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAdobeFormscentralFcdt),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.adobe.fxp`
    pub const APPLICATION_VND_ADOBE_FXP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAdobeFxp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.adobe.partial-upload`
    pub const APPLICATION_VND_ADOBE_PARTIAL_UPLOAD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAdobePartialUpload),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.adobe.xdp+xml`
    pub const APPLICATION_VND_ADOBE_XDP_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAdobeXdp),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.adobe.xfdf`
    pub const APPLICATION_VND_ADOBE_XFDF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAdobeXfdf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.aether.imp`
    pub const APPLICATION_VND_AETHER_IMP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAetherImp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.afpc.afplinedata`
    pub const APPLICATION_VND_AFPC_AFPLINEDATA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcAfplinedata),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.afplinedata-pagedef`
    pub const APPLICATION_VND_AFPC_AFPLINEDATA_PAGEDEF: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcAfplinedataPagedef),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.cmoca-cmresource`
    pub const APPLICATION_VND_AFPC_CMOCA_CMRESOURCE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcCmocaCmresource),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.foca-charset`
    pub const APPLICATION_VND_AFPC_FOCA_CHARSET: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcFocaCharset),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.foca-codedfont`
    pub const APPLICATION_VND_AFPC_FOCA_CODEDFONT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcFocaCodedfont),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.foca-codepage`
    pub const APPLICATION_VND_AFPC_FOCA_CODEPAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcFocaCodepage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.modca`
    pub const APPLICATION_VND_AFPC_MODCA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAfpcModca),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.afpc.modca-formdef`
    pub const APPLICATION_VND_AFPC_MODCA_FORMDEF: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcModcaFormdef),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.modca-mediummap`
    pub const APPLICATION_VND_AFPC_MODCA_MEDIUMMAP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcModcaMediummap),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.modca-objectcontainer`
    pub const APPLICATION_VND_AFPC_MODCA_OBJECTCONTAINER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcModcaObjectcontainer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.modca-overlay`
    pub const APPLICATION_VND_AFPC_MODCA_OVERLAY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcModcaOverlay),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.afpc.modca-pagesegment`
    pub const APPLICATION_VND_AFPC_MODCA_PAGESEGMENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAfpcModcaPagesegment),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.age`
    pub const APPLICATION_VND_AGE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAge),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ah-barcode`
    pub const APPLICATION_VND_AH_BARCODE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAhBarcode),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ahead.space`
    pub const APPLICATION_VND_AHEAD_SPACE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAheadSpace),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.airzip.filesecure.azf`
    pub const APPLICATION_VND_AIRZIP_FILESECURE_AZF: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAirzipFilesecureAzf),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.airzip.filesecure.azs`
    pub const APPLICATION_VND_AIRZIP_FILESECURE_AZS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAirzipFilesecureAzs),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.amadeus+json`
    pub const APPLICATION_VND_AMADEUS_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAmadeus),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.amazon.mobi8-ebook`
    pub const APPLICATION_VND_AMAZON_MOBI8_EBOOK: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAmazonMobi8Ebook),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.americandynamics.acc`
    pub const APPLICATION_VND_AMERICANDYNAMICS_ACC: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAmericandynamicsAcc),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.amiga.ami`
    pub const APPLICATION_VND_AMIGA_AMI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAmigaAmi),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.amundsen.maze+xml`
    pub const APPLICATION_VND_AMUNDSEN_MAZE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAmundsenMaze),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.android.ota`
    pub const APPLICATION_VND_ANDROID_OTA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAndroidOta),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.android.package-archive`
    pub const APPLICATION_VND_ANDROID_PACKAGE_ARCHIVE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAndroidPackageArchive),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.anki`
    pub const APPLICATION_VND_ANKI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAnki),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.anser-web-certificate-issue-initiation`
    pub const APPLICATION_VND_ANSER_WEB_CERTIFICATE_ISSUE_INITIATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAnserWebCertificateIssueInitiation),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.anser-web-funds-transfer-initiation`
    pub const APPLICATION_VND_ANSER_WEB_FUNDS_TRANSFER_INITIATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAnserWebFundsTransferInitiation),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.antix.game-component`
    pub const APPLICATION_VND_ANTIX_GAME_COMPONENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAntixGameComponent),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.apache.arrow.file`
    pub const APPLICATION_VND_APACHE_ARROW_FILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndApacheArrowFile),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.apache.arrow.stream`
    pub const APPLICATION_VND_APACHE_ARROW_STREAM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndApacheArrowStream),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.apache.thrift.binary`
    pub const APPLICATION_VND_APACHE_THRIFT_BINARY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndApacheThriftBinary),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.apache.thrift.compact`
    pub const APPLICATION_VND_APACHE_THRIFT_COMPACT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndApacheThriftCompact),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.apache.thrift.json`
    pub const APPLICATION_VND_APACHE_THRIFT_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndApacheThriftJson),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.api+json`
    pub const APPLICATION_VND_API_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndApi),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.aplextor.warrp+json`
    pub const APPLICATION_VND_APLEXTOR_WARRP_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAplextorWarrp),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.apothekende.reservation+json`
    pub const APPLICATION_VND_APOTHEKENDE_RESERVATION_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndApothekendeReservation),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.apple.installer+xml`
    pub const APPLICATION_VND_APPLE_INSTALLER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAppleInstaller),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.apple.keynote`
    pub const APPLICATION_VND_APPLE_KEYNOTE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAppleKeynote),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.apple.mpegurl`
    pub const APPLICATION_VND_APPLE_MPEGURL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAppleMpegurl),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.apple.numbers`
    pub const APPLICATION_VND_APPLE_NUMBERS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAppleNumbers),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.apple.pages`
    pub const APPLICATION_VND_APPLE_PAGES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndApplePages),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.aristanetworks.swi`
    pub const APPLICATION_VND_ARISTANETWORKS_SWI: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAristanetworksSwi),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.artisan+json`
    pub const APPLICATION_VND_ARTISAN_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndArtisan),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.artsquare`
    pub const APPLICATION_VND_ARTSQUARE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndArtsquare),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.astraea-software.iota`
    pub const APPLICATION_VND_ASTRAEA_SOFTWARE_IOTA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndAstraeaSoftwareIota),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.audiograph`
    pub const APPLICATION_VND_AUDIOGRAPH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAudiograph),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.autopackage`
    pub const APPLICATION_VND_AUTOPACKAGE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAutopackage),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.avalon+json`
    pub const APPLICATION_VND_AVALON_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAvalon),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.avistar+xml`
    pub const APPLICATION_VND_AVISTAR_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndAvistar),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.balsamiq.bmml+xml`
    pub const APPLICATION_VND_BALSAMIQ_BMML_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBalsamiqBmml),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.balsamiq.bmpr`
    pub const APPLICATION_VND_BALSAMIQ_BMPR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBalsamiqBmpr),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.banana-accounting`
    pub const APPLICATION_VND_BANANA_ACCOUNTING: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBananaAccounting),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.bbf.usp.error`
    pub const APPLICATION_VND_BBF_USP_ERROR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBbfUspError),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.bbf.usp.msg`
    pub const APPLICATION_VND_BBF_USP_MSG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndBbfUspMsg),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.bbf.usp.msg+json`
    pub const APPLICATION_VND_BBF_USP_MSG_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBbfUspMsg),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.bekitzur-stech+json`
    pub const APPLICATION_VND_BEKITZUR_STECH_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBekitzurStech),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.bint.med-content`
    pub const APPLICATION_VND_BINT_MED_CONTENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBintMedContent),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.biopax.rdf+xml`
    pub const APPLICATION_VND_BIOPAX_RDF_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBiopaxRdf),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.blink-idb-value-wrapper`
    pub const APPLICATION_VND_BLINK_IDB_VALUE_WRAPPER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBlinkIdbValueWrapper),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.blueice.multipass`
    pub const APPLICATION_VND_BLUEICE_MULTIPASS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBlueiceMultipass),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.bluetooth.ep.oob`
    pub const APPLICATION_VND_BLUETOOTH_EP_OOB: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBluetoothEpOob),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.bluetooth.le.oob`
    pub const APPLICATION_VND_BLUETOOTH_LE_OOB: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBluetoothLeOob),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.bmi`
    pub const APPLICATION_VND_BMI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndBmi),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.bpf`
    pub const APPLICATION_VND_BPF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndBpf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.bpf3`
    pub const APPLICATION_VND_BPF3: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndBpf3),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.businessobjects`
    pub const APPLICATION_VND_BUSINESSOBJECTS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndBusinessobjects),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.byu.uapi+json`
    pub const APPLICATION_VND_BYU_UAPI_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndByuUapi),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.cab-jscript`
    pub const APPLICATION_VND_CAB_JSCRIPT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCabJscript),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.canon-cpdl`
    pub const APPLICATION_VND_CANON_CPDL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCanonCpdl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.canon-lips`
    pub const APPLICATION_VND_CANON_LIPS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCanonLips),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.capasystems-pg+json`
    pub const APPLICATION_VND_CAPASYSTEMS_PG_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCapasystemsPg),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.cendio.thinlinc.clientconf`
    pub const APPLICATION_VND_CENDIO_THINLINC_CLIENTCONF: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCendioThinlincClientconf),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.century-systems.tcp_stream`
    pub const APPLICATION_VND_CENTURY_SYSTEMS_TCP_STREAM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCenturySystemsTcpStream),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.chemdraw+xml`
    pub const APPLICATION_VND_CHEMDRAW_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndChemdraw),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.chess-pgn`
    pub const APPLICATION_VND_CHESS_PGN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndChessPgn),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.chipnuts.karaoke-mmd`
    pub const APPLICATION_VND_CHIPNUTS_KARAOKE_MMD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndChipnutsKaraokeMmd),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ciedi`
    pub const APPLICATION_VND_CIEDI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCiedi),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.cinderella`
    pub const APPLICATION_VND_CINDERELLA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCinderella),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.cirpack.isdn-ext`
    pub const APPLICATION_VND_CIRPACK_ISDN_EXT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCirpackIsdnExt),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.citationstyles.style+xml`
    pub const APPLICATION_VND_CITATIONSTYLES_STYLE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCitationstylesStyle),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.claymore`
    pub const APPLICATION_VND_CLAYMORE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndClaymore),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.cloanto.rp9`
    pub const APPLICATION_VND_CLOANTO_RP9: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCloantoRp9),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.clonk.c4group`
    pub const APPLICATION_VND_CLONK_C4GROUP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndClonkC4group),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.cluetrust.cartomobile-config`
    pub const APPLICATION_VND_CLUETRUST_CARTOMOBILE_CONFIG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCluetrustCartomobileConfig),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.cluetrust.cartomobile-config-pkg`
    pub const APPLICATION_VND_CLUETRUST_CARTOMOBILE_CONFIG_PKG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCluetrustCartomobileConfigPkg),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.coffeescript`
    pub const APPLICATION_VND_COFFEESCRIPT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCoffeescript),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.collabio.xodocuments.document`
    pub const APPLICATION_VND_COLLABIO_XODOCUMENTS_DOCUMENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCollabioXodocumentsDocument),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.collabio.xodocuments.document-template`
    pub const APPLICATION_VND_COLLABIO_XODOCUMENTS_DOCUMENT_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCollabioXodocumentsDocumentTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.collabio.xodocuments.presentation`
    pub const APPLICATION_VND_COLLABIO_XODOCUMENTS_PRESENTATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCollabioXodocumentsPresentation),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.collabio.xodocuments.presentation-template`
    pub const APPLICATION_VND_COLLABIO_XODOCUMENTS_PRESENTATION_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(
                super::Subtype::VndCollabioXodocumentsPresentationTemplate,
            ),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.collabio.xodocuments.spreadsheet`
    pub const APPLICATION_VND_COLLABIO_XODOCUMENTS_SPREADSHEET: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCollabioXodocumentsSpreadsheet),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.collabio.xodocuments.spreadsheet-template`
    pub const APPLICATION_VND_COLLABIO_XODOCUMENTS_SPREADSHEET_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(
                super::Subtype::VndCollabioXodocumentsSpreadsheetTemplate,
            ),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.collection+json`
    pub const APPLICATION_VND_COLLECTION_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCollection),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.collection.doc+json`
    pub const APPLICATION_VND_COLLECTION_DOC_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCollectionDoc),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.collection.next+json`
    pub const APPLICATION_VND_COLLECTION_NEXT_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCollectionNext),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.comicbook+zip`
    pub const APPLICATION_VND_COMICBOOK_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndComicbook),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.comicbook-rar`
    pub const APPLICATION_VND_COMICBOOK_RAR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndComicbookRar),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.commerce-battelle`
    pub const APPLICATION_VND_COMMERCE_BATTELLE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCommerceBattelle),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.commonspace`
    pub const APPLICATION_VND_COMMONSPACE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCommonspace),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.contact.cmsg`
    pub const APPLICATION_VND_CONTACT_CMSG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndContactCmsg),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.coreos.ignition+json`
    pub const APPLICATION_VND_COREOS_IGNITION_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCoreosIgnition),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.cosmocaller`
    pub const APPLICATION_VND_COSMOCALLER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCosmocaller),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.crick.clicker`
    pub const APPLICATION_VND_CRICK_CLICKER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCrickClicker),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.crick.clicker.keyboard`
    pub const APPLICATION_VND_CRICK_CLICKER_KEYBOARD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCrickClickerKeyboard),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.crick.clicker.palette`
    pub const APPLICATION_VND_CRICK_CLICKER_PALETTE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCrickClickerPalette),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.crick.clicker.template`
    pub const APPLICATION_VND_CRICK_CLICKER_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCrickClickerTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.crick.clicker.wordbank`
    pub const APPLICATION_VND_CRICK_CLICKER_WORDBANK: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCrickClickerWordbank),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.criticaltools.wbs+xml`
    pub const APPLICATION_VND_CRITICALTOOLS_WBS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCriticaltoolsWbs),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.cryptii.pipe+json`
    pub const APPLICATION_VND_CRYPTII_PIPE_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCryptiiPipe),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.crypto-shade-file`
    pub const APPLICATION_VND_CRYPTO_SHADE_FILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCryptoShadeFile),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.cryptomator.encrypted`
    pub const APPLICATION_VND_CRYPTOMATOR_ENCRYPTED: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCryptomatorEncrypted),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.cryptomator.vault`
    pub const APPLICATION_VND_CRYPTOMATOR_VAULT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCryptomatorVault),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ctc-posml`
    pub const APPLICATION_VND_CTC_POSML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCtcPosml),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ctct.ws+xml`
    pub const APPLICATION_VND_CTCT_WS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCtctWs),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.cups-pdf`
    pub const APPLICATION_VND_CUPS_PDF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCupsPdf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.cups-postscript`
    pub const APPLICATION_VND_CUPS_POSTSCRIPT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCupsPostscript),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.cups-ppd`
    pub const APPLICATION_VND_CUPS_PPD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCupsPpd),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.cups-raster`
    pub const APPLICATION_VND_CUPS_RASTER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCupsRaster),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.cups-raw`
    pub const APPLICATION_VND_CUPS_RAW: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCupsRaw),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.curl`
    pub const APPLICATION_VND_CURL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCurl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.cyan.dean.root+xml`
    pub const APPLICATION_VND_CYAN_DEAN_ROOT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCyanDeanRoot),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.cybank`
    pub const APPLICATION_VND_CYBANK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndCybank),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.cyclonedx+json`
    pub const APPLICATION_VND_CYCLONEDX_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCyclonedx),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.cyclonedx+xml`
    pub const APPLICATION_VND_CYCLONEDX_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndCyclonedx),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.d2l.coursepackage1p0+zip`
    pub const APPLICATION_VND_D2L_COURSEPACKAGE1P0_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndD2lCoursepackage1p0),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.d3m-dataset`
    pub const APPLICATION_VND_D3M_DATASET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndD3mDataset),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.d3m-problem`
    pub const APPLICATION_VND_D3M_PROBLEM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndD3mProblem),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dart`
    pub const APPLICATION_VND_DART: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDart),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.data-vision.rdz`
    pub const APPLICATION_VND_DATA_VISION_RDZ: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDataVisionRdz),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.datapackage+json`
    pub const APPLICATION_VND_DATAPACKAGE_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDatapackage),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.dataresource+json`
    pub const APPLICATION_VND_DATARESOURCE_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDataresource),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.dbf`
    pub const APPLICATION_VND_DBF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDbf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.debian.binary-package`
    pub const APPLICATION_VND_DEBIAN_BINARY_PACKAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDebianBinaryPackage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dece.data`
    pub const APPLICATION_VND_DECE_DATA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDeceData),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dece.ttml+xml`
    pub const APPLICATION_VND_DECE_TTML_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDeceTtml),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dece.unspecified`
    pub const APPLICATION_VND_DECE_UNSPECIFIED: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDeceUnspecified),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dece.zip`
    pub const APPLICATION_VND_DECE_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDeceZip),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.denovo.fcselayout-link`
    pub const APPLICATION_VND_DENOVO_FCSELAYOUT_LINK: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDenovoFcselayoutLink),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.desmume.movie`
    pub const APPLICATION_VND_DESMUME_MOVIE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDesmumeMovie),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dir-bi.plate-dl-nosuffix`
    pub const APPLICATION_VND_DIR_BI_PLATE_DL_NOSUFFIX: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDirBiPlateDlNosuffix),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dm.delegation+xml`
    pub const APPLICATION_VND_DM_DELEGATION_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDmDelegation),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dna`
    pub const APPLICATION_VND_DNA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDna),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.document+json`
    pub const APPLICATION_VND_DOCUMENT_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDocument),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.dolby.mobile.1`
    pub const APPLICATION_VND_DOLBY_MOBILE_1: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDolbyMobile1),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dolby.mobile.2`
    pub const APPLICATION_VND_DOLBY_MOBILE_2: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDolbyMobile2),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.doremir.scorecloud-binary-document`
    pub const APPLICATION_VND_DOREMIR_SCORECLOUD_BINARY_DOCUMENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDoremirScorecloudBinaryDocument),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dpgraph`
    pub const APPLICATION_VND_DPGRAPH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDpgraph),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dreamfactory`
    pub const APPLICATION_VND_DREAMFACTORY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDreamfactory),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.drive+json`
    pub const APPLICATION_VND_DRIVE_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDrive),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.dtg.local`
    pub const APPLICATION_VND_DTG_LOCAL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDtgLocal),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dtg.local.flash`
    pub const APPLICATION_VND_DTG_LOCAL_FLASH: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDtgLocalFlash),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dtg.local.html`
    pub const APPLICATION_VND_DTG_LOCAL_HTML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDtgLocalHtml),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dvb.ait`
    pub const APPLICATION_VND_DVB_AIT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDvbAit),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dvb.dvbisl+xml`
    pub const APPLICATION_VND_DVB_DVBISL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbDvbisl),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dvb.dvbj`
    pub const APPLICATION_VND_DVB_DVBJ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDvbDvbj),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dvb.esgcontainer`
    pub const APPLICATION_VND_DVB_ESGCONTAINER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbEsgcontainer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dvb.ipdcdftnotifaccess`
    pub const APPLICATION_VND_DVB_IPDCDFTNOTIFACCESS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbIpdcdftnotifaccess),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dvb.ipdcesgaccess`
    pub const APPLICATION_VND_DVB_IPDCESGACCESS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbIpdcesgaccess),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dvb.ipdcesgaccess2`
    pub const APPLICATION_VND_DVB_IPDCESGACCESS2: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbIpdcesgaccess2),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dvb.ipdcesgpdd`
    pub const APPLICATION_VND_DVB_IPDCESGPDD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbIpdcesgpdd),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dvb.ipdcroaming`
    pub const APPLICATION_VND_DVB_IPDCROAMING: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbIpdcroaming),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dvb.iptv.alfec-base`
    pub const APPLICATION_VND_DVB_IPTV_ALFEC_BASE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbIptvAlfecBase),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dvb.iptv.alfec-enhancement`
    pub const APPLICATION_VND_DVB_IPTV_ALFEC_ENHANCEMENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbIptvAlfecEnhancement),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.dvb.notif-aggregate-root+xml`
    pub const APPLICATION_VND_DVB_NOTIF_AGGREGATE_ROOT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbNotifAggregateRoot),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dvb.notif-container+xml`
    pub const APPLICATION_VND_DVB_NOTIF_CONTAINER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbNotifContainer),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dvb.notif-generic+xml`
    pub const APPLICATION_VND_DVB_NOTIF_GENERIC_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbNotifGeneric),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dvb.notif-ia-msglist+xml`
    pub const APPLICATION_VND_DVB_NOTIF_IA_MSGLIST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbNotifIaMsglist),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dvb.notif-ia-registration-request+xml`
    pub const APPLICATION_VND_DVB_NOTIF_IA_REGISTRATION_REQUEST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbNotifIaRegistrationRequest),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dvb.notif-ia-registration-response+xml`
    pub const APPLICATION_VND_DVB_NOTIF_IA_REGISTRATION_RESPONSE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbNotifIaRegistrationResponse),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dvb.notif-init+xml`
    pub const APPLICATION_VND_DVB_NOTIF_INIT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndDvbNotifInit),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.dvb.pfr`
    pub const APPLICATION_VND_DVB_PFR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDvbPfr),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dvb.service`
    pub const APPLICATION_VND_DVB_SERVICE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDvbService),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dxr`
    pub const APPLICATION_VND_DXR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDxr),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dynageo`
    pub const APPLICATION_VND_DYNAGEO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDynageo),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.dzr`
    pub const APPLICATION_VND_DZR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndDzr),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.easykaraoke.cdgdownload`
    pub const APPLICATION_VND_EASYKARAOKE_CDGDOWNLOAD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEasykaraokeCdgdownload),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ecdis-update`
    pub const APPLICATION_VND_ECDIS_UPDATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEcdisUpdate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ecip.rlp`
    pub const APPLICATION_VND_ECIP_RLP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEcipRlp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.eclipse.ditto+json`
    pub const APPLICATION_VND_ECLIPSE_DITTO_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEclipseDitto),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.ecowin.chart`
    pub const APPLICATION_VND_ECOWIN_CHART: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEcowinChart),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ecowin.filerequest`
    pub const APPLICATION_VND_ECOWIN_FILEREQUEST: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEcowinFilerequest),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ecowin.fileupdate`
    pub const APPLICATION_VND_ECOWIN_FILEUPDATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEcowinFileupdate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ecowin.series`
    pub const APPLICATION_VND_ECOWIN_SERIES: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEcowinSeries),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ecowin.seriesrequest`
    pub const APPLICATION_VND_ECOWIN_SERIESREQUEST: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEcowinSeriesrequest),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ecowin.seriesupdate`
    pub const APPLICATION_VND_ECOWIN_SERIESUPDATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEcowinSeriesupdate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.efi.img`
    pub const APPLICATION_VND_EFI_IMG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEfiImg),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.efi.iso`
    pub const APPLICATION_VND_EFI_ISO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEfiIso),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.emclient.accessrequest+xml`
    pub const APPLICATION_VND_EMCLIENT_ACCESSREQUEST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEmclientAccessrequest),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.enliven`
    pub const APPLICATION_VND_ENLIVEN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEnliven),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.enphase.envoy`
    pub const APPLICATION_VND_ENPHASE_ENVOY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEnphaseEnvoy),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.eprints.data+xml`
    pub const APPLICATION_VND_EPRINTS_DATA_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEprintsData),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.epson.esf`
    pub const APPLICATION_VND_EPSON_ESF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEpsonEsf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.epson.msf`
    pub const APPLICATION_VND_EPSON_MSF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEpsonMsf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.epson.quickanime`
    pub const APPLICATION_VND_EPSON_QUICKANIME: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEpsonQuickanime),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.epson.salt`
    pub const APPLICATION_VND_EPSON_SALT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEpsonSalt),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.epson.ssf`
    pub const APPLICATION_VND_EPSON_SSF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEpsonSsf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ericsson.quickcall`
    pub const APPLICATION_VND_ERICSSON_QUICKCALL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEricssonQuickcall),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.espass-espass+zip`
    pub const APPLICATION_VND_ESPASS_ESPASS_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEspassEspass),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.eszigno3+xml`
    pub const APPLICATION_VND_ESZIGNO3_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEszigno3),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.aoc+xml`
    pub const APPLICATION_VND_ETSI_AOC_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiAoc),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.asic-e+zip`
    pub const APPLICATION_VND_ETSI_ASIC_E_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiAsicE),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.etsi.asic-s+zip`
    pub const APPLICATION_VND_ETSI_ASIC_S_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiAsicS),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.etsi.cug+xml`
    pub const APPLICATION_VND_ETSI_CUG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiCug),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.iptvcommand+xml`
    pub const APPLICATION_VND_ETSI_IPTVCOMMAND_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiIptvcommand),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.iptvdiscovery+xml`
    pub const APPLICATION_VND_ETSI_IPTVDISCOVERY_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiIptvdiscovery),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.iptvprofile+xml`
    pub const APPLICATION_VND_ETSI_IPTVPROFILE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiIptvprofile),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.iptvsad-bc+xml`
    pub const APPLICATION_VND_ETSI_IPTVSAD_BC_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiIptvsadBc),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.iptvsad-cod+xml`
    pub const APPLICATION_VND_ETSI_IPTVSAD_COD_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiIptvsadCod),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.iptvsad-npvr+xml`
    pub const APPLICATION_VND_ETSI_IPTVSAD_NPVR_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiIptvsadNpvr),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.iptvservice+xml`
    pub const APPLICATION_VND_ETSI_IPTVSERVICE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiIptvservice),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.iptvsync+xml`
    pub const APPLICATION_VND_ETSI_IPTVSYNC_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiIptvsync),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.iptvueprofile+xml`
    pub const APPLICATION_VND_ETSI_IPTVUEPROFILE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiIptvueprofile),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.mcid+xml`
    pub const APPLICATION_VND_ETSI_MCID_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiMcid),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.mheg5`
    pub const APPLICATION_VND_ETSI_MHEG5: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEtsiMheg5),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.etsi.overload-control-policy-dataset+xml`
    pub const APPLICATION_VND_ETSI_OVERLOAD_CONTROL_POLICY_DATASET_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiOverloadControlPolicyDataset),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.pstn+xml`
    pub const APPLICATION_VND_ETSI_PSTN_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiPstn),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.sci+xml`
    pub const APPLICATION_VND_ETSI_SCI_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiSci),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.simservs+xml`
    pub const APPLICATION_VND_ETSI_SIMSERVS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiSimservs),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.timestamp-token`
    pub const APPLICATION_VND_ETSI_TIMESTAMP_TOKEN: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiTimestampToken),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.etsi.tsl+xml`
    pub const APPLICATION_VND_ETSI_TSL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiTsl),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.etsi.tsl.der`
    pub const APPLICATION_VND_ETSI_TSL_DER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEtsiTslDer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.eu.kasparian.car+json`
    pub const APPLICATION_VND_EU_KASPARIAN_CAR_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEuKasparianCar),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.eudora.data`
    pub const APPLICATION_VND_EUDORA_DATA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEudoraData),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.evolv.ecig.profile`
    pub const APPLICATION_VND_EVOLV_ECIG_PROFILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEvolvEcigProfile),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.evolv.ecig.settings`
    pub const APPLICATION_VND_EVOLV_ECIG_SETTINGS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEvolvEcigSettings),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.evolv.ecig.theme`
    pub const APPLICATION_VND_EVOLV_ECIG_THEME: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEvolvEcigTheme),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.exstream-empower+zip`
    pub const APPLICATION_VND_EXSTREAM_EMPOWER_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndExstreamEmpower),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.exstream-package`
    pub const APPLICATION_VND_EXSTREAM_PACKAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndExstreamPackage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ezpix-album`
    pub const APPLICATION_VND_EZPIX_ALBUM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndEzpixAlbum),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ezpix-package`
    pub const APPLICATION_VND_EZPIX_PACKAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndEzpixPackage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.f-secure.mobile`
    pub const APPLICATION_VND_F_SECURE_MOBILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFSecureMobile),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.familysearch.gedcom+zip`
    pub const APPLICATION_VND_FAMILYSEARCH_GEDCOM_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFamilysearchGedcom),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.fastcopy-disk-image`
    pub const APPLICATION_VND_FASTCOPY_DISK_IMAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFastcopyDiskImage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fdf`
    pub const APPLICATION_VND_FDF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFdf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.fdsn.mseed`
    pub const APPLICATION_VND_FDSN_MSEED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFdsnMseed),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.fdsn.seed`
    pub const APPLICATION_VND_FDSN_SEED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFdsnSeed),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ffsns`
    pub const APPLICATION_VND_FFSNS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFfsns),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ficlab.flb+zip`
    pub const APPLICATION_VND_FICLAB_FLB_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFiclabFlb),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.filmit.zfc`
    pub const APPLICATION_VND_FILMIT_ZFC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFilmitZfc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.fints`
    pub const APPLICATION_VND_FINTS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFints),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.firemonkeys.cloudcell`
    pub const APPLICATION_VND_FIREMONKEYS_CLOUDCELL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFiremonkeysCloudcell),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.FloGraphIt`
    pub const APPLICATION_VND_FLO_GRAPH_IT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFloGraphIt),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fluxtime.clip`
    pub const APPLICATION_VND_FLUXTIME_CLIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFluxtimeClip),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.font-fontforge-sfd`
    pub const APPLICATION_VND_FONT_FONTFORGE_SFD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFontFontforgeSfd),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.framemaker`
    pub const APPLICATION_VND_FRAMEMAKER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFramemaker),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.fsc.weblaunch`
    pub const APPLICATION_VND_FSC_WEBLAUNCH: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFscWeblaunch),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujifilm.fb.docuworks`
    pub const APPLICATION_VND_FUJIFILM_FB_DOCUWORKS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujifilmFbDocuworks),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujifilm.fb.docuworks.binder`
    pub const APPLICATION_VND_FUJIFILM_FB_DOCUWORKS_BINDER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujifilmFbDocuworksBinder),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujifilm.fb.docuworks.container`
    pub const APPLICATION_VND_FUJIFILM_FB_DOCUWORKS_CONTAINER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujifilmFbDocuworksContainer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujifilm.fb.jfi+xml`
    pub const APPLICATION_VND_FUJIFILM_FB_JFI_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujifilmFbJfi),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.fujitsu.oasys`
    pub const APPLICATION_VND_FUJITSU_OASYS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujitsuOasys),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujitsu.oasys2`
    pub const APPLICATION_VND_FUJITSU_OASYS2: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujitsuOasys2),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujitsu.oasys3`
    pub const APPLICATION_VND_FUJITSU_OASYS3: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujitsuOasys3),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujitsu.oasysgp`
    pub const APPLICATION_VND_FUJITSU_OASYSGP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujitsuOasysgp),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujitsu.oasysprs`
    pub const APPLICATION_VND_FUJITSU_OASYSPRS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujitsuOasysprs),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujixerox.ART-EX`
    pub const APPLICATION_VND_FUJIXEROX_ART_EX: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujixeroxArtEx),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujixerox.ART4`
    pub const APPLICATION_VND_FUJIXEROX_ART4: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujixeroxArt4),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujixerox.ddd`
    pub const APPLICATION_VND_FUJIXEROX_DDD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujixeroxDdd),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujixerox.docuworks`
    pub const APPLICATION_VND_FUJIXEROX_DOCUWORKS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujixeroxDocuworks),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujixerox.docuworks.binder`
    pub const APPLICATION_VND_FUJIXEROX_DOCUWORKS_BINDER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujixeroxDocuworksBinder),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujixerox.docuworks.container`
    pub const APPLICATION_VND_FUJIXEROX_DOCUWORKS_CONTAINER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujixeroxDocuworksContainer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fujixerox.HBPL`
    pub const APPLICATION_VND_FUJIXEROX_HBPL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndFujixeroxHbpl),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.fut-misnet`
    pub const APPLICATION_VND_FUT_MISNET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFutMisnet),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.futoin+cbor`
    pub const APPLICATION_VND_FUTOIN_CBOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFutoin),
        suffix: Some(crate::Name::Interned(super::Suffix::Cbor)),
        parameters: &[],
    });

    /// `application/vnd.futoin+json`
    pub const APPLICATION_VND_FUTOIN_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFutoin),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.fuzzysheet`
    pub const APPLICATION_VND_FUZZYSHEET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndFuzzysheet),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.genomatix.tuxedo`
    pub const APPLICATION_VND_GENOMATIX_TUXEDO: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGenomatixTuxedo),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.gentics.grd+json`
    pub const APPLICATION_VND_GENTICS_GRD_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGenticsGrd),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.geogebra.file`
    pub const APPLICATION_VND_GEOGEBRA_FILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGeogebraFile),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.geogebra.slides`
    pub const APPLICATION_VND_GEOGEBRA_SLIDES: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGeogebraSlides),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.geogebra.tool`
    pub const APPLICATION_VND_GEOGEBRA_TOOL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGeogebraTool),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.geometry-explorer`
    pub const APPLICATION_VND_GEOMETRY_EXPLORER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGeometryExplorer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.geonext`
    pub const APPLICATION_VND_GEONEXT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndGeonext),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.geoplan`
    pub const APPLICATION_VND_GEOPLAN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndGeoplan),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.geospace`
    pub const APPLICATION_VND_GEOSPACE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndGeospace),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.gerber`
    pub const APPLICATION_VND_GERBER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndGerber),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.globalplatform.card-content-mgt`
    pub const APPLICATION_VND_GLOBALPLATFORM_CARD_CONTENT_MGT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGlobalplatformCardContentMgt),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.globalplatform.card-content-mgt-response`
    pub const APPLICATION_VND_GLOBALPLATFORM_CARD_CONTENT_MGT_RESPONSE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGlobalplatformCardContentMgtResponse),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.gnu.taler.exchange+json`
    pub const APPLICATION_VND_GNU_TALER_EXCHANGE_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGnuTalerExchange),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.gnu.taler.merchant+json`
    pub const APPLICATION_VND_GNU_TALER_MERCHANT_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGnuTalerMerchant),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.google-earth.kml+xml`
    pub const APPLICATION_VND_GOOGLE_EARTH_KML_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGoogleEarthKml),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.google-earth.kmz`
    pub const APPLICATION_VND_GOOGLE_EARTH_KMZ: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGoogleEarthKmz),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.gov.sk.e-form+xml`
    pub const APPLICATION_VND_GOV_SK_E_FORM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGovSkEForm),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.gov.sk.e-form+zip`
    pub const APPLICATION_VND_GOV_SK_E_FORM_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGovSkEForm),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.gov.sk.xmldatacontainer+xml`
    pub const APPLICATION_VND_GOV_SK_XMLDATACONTAINER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGovSkXmldatacontainer),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.grafeq`
    pub const APPLICATION_VND_GRAFEQ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndGrafeq),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.gridmp`
    pub const APPLICATION_VND_GRIDMP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndGridmp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.groove-account`
    pub const APPLICATION_VND_GROOVE_ACCOUNT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGrooveAccount),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.groove-help`
    pub const APPLICATION_VND_GROOVE_HELP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndGrooveHelp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.groove-identity-message`
    pub const APPLICATION_VND_GROOVE_IDENTITY_MESSAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGrooveIdentityMessage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.groove-injector`
    pub const APPLICATION_VND_GROOVE_INJECTOR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGrooveInjector),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.groove-tool-message`
    pub const APPLICATION_VND_GROOVE_TOOL_MESSAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGrooveToolMessage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.groove-tool-template`
    pub const APPLICATION_VND_GROOVE_TOOL_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGrooveToolTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.groove-vcard`
    pub const APPLICATION_VND_GROOVE_VCARD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndGrooveVcard),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.hal+json`
    pub const APPLICATION_VND_HAL_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHal),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.hal+xml`
    pub const APPLICATION_VND_HAL_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHal),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.HandHeld-Entertainment+xml`
    pub const APPLICATION_VND_HAND_HELD_ENTERTAINMENT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndHandHeldEntertainment),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.hbci`
    pub const APPLICATION_VND_HBCI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHbci),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.hc+json`
    pub const APPLICATION_VND_HC_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHc),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.hcl-bireports`
    pub const APPLICATION_VND_HCL_BIREPORTS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndHclBireports),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.hdt`
    pub const APPLICATION_VND_HDT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHdt),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.heroku+json`
    pub const APPLICATION_VND_HEROKU_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHeroku),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.hhe.lesson-player`
    pub const APPLICATION_VND_HHE_LESSON_PLAYER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndHheLessonPlayer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.hl7cda+xml`
    pub const APPLICATION_VND_HL7CDA_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHl7cda),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.hl7v2+xml`
    pub const APPLICATION_VND_HL7V2_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHl7v2),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.hp-HPGL`
    pub const APPLICATION_VND_HP_HPGL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHpHpgl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.hp-hpid`
    pub const APPLICATION_VND_HP_HPID: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHpHpid),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.hp-hps`
    pub const APPLICATION_VND_HP_HPS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHpHps),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.hp-jlyt`
    pub const APPLICATION_VND_HP_JLYT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHpJlyt),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.hp-PCL`
    pub const APPLICATION_VND_HP_PCL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHpPcl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.hp-PCLXL`
    pub const APPLICATION_VND_HP_PCLXL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHpPclxl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.httphone`
    pub const APPLICATION_VND_HTTPHONE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHttphone),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.hydrostatix.sof-data`
    pub const APPLICATION_VND_HYDROSTATIX_SOF_DATA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndHydrostatixSofData),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.hyper+json`
    pub const APPLICATION_VND_HYPER_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndHyper),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.hyper-item+json`
    pub const APPLICATION_VND_HYPER_ITEM_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndHyperItem),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.hyperdrive+json`
    pub const APPLICATION_VND_HYPERDRIVE_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndHyperdrive),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.hzn-3d-crossword`
    pub const APPLICATION_VND_HZN_3D_CROSSWORD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndHzn3dCrossword),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ibm.electronic-media`
    pub const APPLICATION_VND_IBM_ELECTRONIC_MEDIA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIbmElectronicMedia),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ibm.MiniPay`
    pub const APPLICATION_VND_IBM_MINI_PAY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIbmMiniPay),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ibm.rights-management`
    pub const APPLICATION_VND_IBM_RIGHTS_MANAGEMENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIbmRightsManagement),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ibm.secure-container`
    pub const APPLICATION_VND_IBM_SECURE_CONTAINER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIbmSecureContainer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.iccprofile`
    pub const APPLICATION_VND_ICCPROFILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndIccprofile),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ieee.1905`
    pub const APPLICATION_VND_IEEE_1905: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndIeee1905),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.igloader`
    pub const APPLICATION_VND_IGLOADER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndIgloader),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.imagemeter.folder+zip`
    pub const APPLICATION_VND_IMAGEMETER_FOLDER_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImagemeterFolder),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.imagemeter.image+zip`
    pub const APPLICATION_VND_IMAGEMETER_IMAGE_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImagemeterImage),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.immervision-ivp`
    pub const APPLICATION_VND_IMMERVISION_IVP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImmervisionIvp),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.immervision-ivu`
    pub const APPLICATION_VND_IMMERVISION_IVU: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImmervisionIvu),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ims.imsccv1p1`
    pub const APPLICATION_VND_IMS_IMSCCV1P1: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImsImsccv1p1),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ims.imsccv1p2`
    pub const APPLICATION_VND_IMS_IMSCCV1P2: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImsImsccv1p2),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ims.imsccv1p3`
    pub const APPLICATION_VND_IMS_IMSCCV1P3: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImsImsccv1p3),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ims.lis.v2.result+json`
    pub const APPLICATION_VND_IMS_LIS_V2_RESULT_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImsLisV2Result),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.ims.lti.v2.toolconsumerprofile+json`
    pub const APPLICATION_VND_IMS_LTI_V2_TOOLCONSUMERPROFILE_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImsLtiV2Toolconsumerprofile),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.ims.lti.v2.toolproxy+json`
    pub const APPLICATION_VND_IMS_LTI_V2_TOOLPROXY_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImsLtiV2Toolproxy),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.ims.lti.v2.toolproxy.id+json`
    pub const APPLICATION_VND_IMS_LTI_V2_TOOLPROXY_ID_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImsLtiV2ToolproxyId),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.ims.lti.v2.toolsettings+json`
    pub const APPLICATION_VND_IMS_LTI_V2_TOOLSETTINGS_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImsLtiV2Toolsettings),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.ims.lti.v2.toolsettings.simple+json`
    pub const APPLICATION_VND_IMS_LTI_V2_TOOLSETTINGS_SIMPLE_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndImsLtiV2ToolsettingsSimple),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.informedcontrol.rms+xml`
    pub const APPLICATION_VND_INFORMEDCONTROL_RMS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndInformedcontrolRms),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.infotech.project`
    pub const APPLICATION_VND_INFOTECH_PROJECT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndInfotechProject),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.infotech.project+xml`
    pub const APPLICATION_VND_INFOTECH_PROJECT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndInfotechProject),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.innopath.wamp.notification`
    pub const APPLICATION_VND_INNOPATH_WAMP_NOTIFICATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndInnopathWampNotification),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.insors.igm`
    pub const APPLICATION_VND_INSORS_IGM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndInsorsIgm),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.intercon.formnet`
    pub const APPLICATION_VND_INTERCON_FORMNET: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndInterconFormnet),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.intergeo`
    pub const APPLICATION_VND_INTERGEO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndIntergeo),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.intertrust.digibox`
    pub const APPLICATION_VND_INTERTRUST_DIGIBOX: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIntertrustDigibox),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.intertrust.nncp`
    pub const APPLICATION_VND_INTERTRUST_NNCP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIntertrustNncp),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.intu.qbo`
    pub const APPLICATION_VND_INTU_QBO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndIntuQbo),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.intu.qfx`
    pub const APPLICATION_VND_INTU_QFX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndIntuQfx),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.iptc.g2.catalogitem+xml`
    pub const APPLICATION_VND_IPTC_G2_CATALOGITEM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIptcG2Catalogitem),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.iptc.g2.conceptitem+xml`
    pub const APPLICATION_VND_IPTC_G2_CONCEPTITEM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIptcG2Conceptitem),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.iptc.g2.knowledgeitem+xml`
    pub const APPLICATION_VND_IPTC_G2_KNOWLEDGEITEM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIptcG2Knowledgeitem),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.iptc.g2.newsitem+xml`
    pub const APPLICATION_VND_IPTC_G2_NEWSITEM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIptcG2Newsitem),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.iptc.g2.newsmessage+xml`
    pub const APPLICATION_VND_IPTC_G2_NEWSMESSAGE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIptcG2Newsmessage),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.iptc.g2.packageitem+xml`
    pub const APPLICATION_VND_IPTC_G2_PACKAGEITEM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIptcG2Packageitem),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.iptc.g2.planningitem+xml`
    pub const APPLICATION_VND_IPTC_G2_PLANNINGITEM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIptcG2Planningitem),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.ipunplugged.rcprofile`
    pub const APPLICATION_VND_IPUNPLUGGED_RCPROFILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIpunpluggedRcprofile),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.irepository.package+xml`
    pub const APPLICATION_VND_IREPOSITORY_PACKAGE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIrepositoryPackage),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.is-xpr`
    pub const APPLICATION_VND_IS_XPR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndIsXpr),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.isac.fcs`
    pub const APPLICATION_VND_ISAC_FCS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndIsacFcs),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.iso11783-10+zip`
    pub const APPLICATION_VND_ISO11783_10_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndIso1178310),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.jam`
    pub const APPLICATION_VND_JAM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndJam),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.japannet-directory-service`
    pub const APPLICATION_VND_JAPANNET_DIRECTORY_SERVICE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJapannetDirectoryService),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.japannet-jpnstore-wakeup`
    pub const APPLICATION_VND_JAPANNET_JPNSTORE_WAKEUP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJapannetJpnstoreWakeup),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.japannet-payment-wakeup`
    pub const APPLICATION_VND_JAPANNET_PAYMENT_WAKEUP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJapannetPaymentWakeup),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.japannet-registration`
    pub const APPLICATION_VND_JAPANNET_REGISTRATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJapannetRegistration),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.japannet-registration-wakeup`
    pub const APPLICATION_VND_JAPANNET_REGISTRATION_WAKEUP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJapannetRegistrationWakeup),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.japannet-setstore-wakeup`
    pub const APPLICATION_VND_JAPANNET_SETSTORE_WAKEUP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJapannetSetstoreWakeup),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.japannet-verification`
    pub const APPLICATION_VND_JAPANNET_VERIFICATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJapannetVerification),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.japannet-verification-wakeup`
    pub const APPLICATION_VND_JAPANNET_VERIFICATION_WAKEUP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJapannetVerificationWakeup),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.jcp.javame.midlet-rms`
    pub const APPLICATION_VND_JCP_JAVAME_MIDLET_RMS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJcpJavameMidletRms),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.jisp`
    pub const APPLICATION_VND_JISP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndJisp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.joost.joda-archive`
    pub const APPLICATION_VND_JOOST_JODA_ARCHIVE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJoostJodaArchive),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.jsk.isdn-ngn`
    pub const APPLICATION_VND_JSK_ISDN_NGN: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndJskIsdnNgn),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.kahootz`
    pub const APPLICATION_VND_KAHOOTZ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKahootz),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.kde.karbon`
    pub const APPLICATION_VND_KDE_KARBON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKdeKarbon),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.kde.kchart`
    pub const APPLICATION_VND_KDE_KCHART: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKdeKchart),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.kde.kformula`
    pub const APPLICATION_VND_KDE_KFORMULA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndKdeKformula),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.kde.kivio`
    pub const APPLICATION_VND_KDE_KIVIO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKdeKivio),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.kde.kontour`
    pub const APPLICATION_VND_KDE_KONTOUR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKdeKontour),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.kde.kpresenter`
    pub const APPLICATION_VND_KDE_KPRESENTER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndKdeKpresenter),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.kde.kspread`
    pub const APPLICATION_VND_KDE_KSPREAD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKdeKspread),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.kde.kword`
    pub const APPLICATION_VND_KDE_KWORD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKdeKword),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.kenameaapp`
    pub const APPLICATION_VND_KENAMEAAPP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKenameaapp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.kidspiration`
    pub const APPLICATION_VND_KIDSPIRATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndKidspiration),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.Kinar`
    pub const APPLICATION_VND_KINAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKinar),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.koan`
    pub const APPLICATION_VND_KOAN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndKoan),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.kodak-descriptor`
    pub const APPLICATION_VND_KODAK_DESCRIPTOR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndKodakDescriptor),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.las`
    pub const APPLICATION_VND_LAS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndLas),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.las.las+json`
    pub const APPLICATION_VND_LAS_LAS_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLasLas),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.las.las+xml`
    pub const APPLICATION_VND_LAS_LAS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndLasLas),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.laszip`
    pub const APPLICATION_VND_LASZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndLaszip),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.leap+json`
    pub const APPLICATION_VND_LEAP_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndLeap),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.liberty-request+xml`
    pub const APPLICATION_VND_LIBERTY_REQUEST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLibertyRequest),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.llamagraphics.life-balance.desktop`
    pub const APPLICATION_VND_LLAMAGRAPHICS_LIFE_BALANCE_DESKTOP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLlamagraphicsLifeBalanceDesktop),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.llamagraphics.life-balance.exchange+xml`
    pub const APPLICATION_VND_LLAMAGRAPHICS_LIFE_BALANCE_EXCHANGE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLlamagraphicsLifeBalanceExchange),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.logipipe.circuit+zip`
    pub const APPLICATION_VND_LOGIPIPE_CIRCUIT_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLogipipeCircuit),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.loom`
    pub const APPLICATION_VND_LOOM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndLoom),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.lotus-1-2-3`
    pub const APPLICATION_VND_LOTUS_1_2_3: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndLotus123),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.lotus-approach`
    pub const APPLICATION_VND_LOTUS_APPROACH: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLotusApproach),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.lotus-freelance`
    pub const APPLICATION_VND_LOTUS_FREELANCE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLotusFreelance),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.lotus-notes`
    pub const APPLICATION_VND_LOTUS_NOTES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndLotusNotes),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.lotus-organizer`
    pub const APPLICATION_VND_LOTUS_ORGANIZER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLotusOrganizer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.lotus-screencam`
    pub const APPLICATION_VND_LOTUS_SCREENCAM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLotusScreencam),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.lotus-wordpro`
    pub const APPLICATION_VND_LOTUS_WORDPRO: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndLotusWordpro),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.macports.portpkg`
    pub const APPLICATION_VND_MACPORTS_PORTPKG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMacportsPortpkg),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.mapbox-vector-tile`
    pub const APPLICATION_VND_MAPBOX_VECTOR_TILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMapboxVectorTile),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.marlin.drm.actiontoken+xml`
    pub const APPLICATION_VND_MARLIN_DRM_ACTIONTOKEN_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMarlinDrmActiontoken),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.marlin.drm.conftoken+xml`
    pub const APPLICATION_VND_MARLIN_DRM_CONFTOKEN_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMarlinDrmConftoken),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.marlin.drm.license+xml`
    pub const APPLICATION_VND_MARLIN_DRM_LICENSE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMarlinDrmLicense),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.marlin.drm.mdcf`
    pub const APPLICATION_VND_MARLIN_DRM_MDCF: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMarlinDrmMdcf),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.mason+json`
    pub const APPLICATION_VND_MASON_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMason),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.maxar.archive.3tz+zip`
    pub const APPLICATION_VND_MAXAR_ARCHIVE_3TZ_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMaxarArchive3tz),
            suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
            parameters: &[],
        });

    /// `application/vnd.maxmind.maxmind-db`
    pub const APPLICATION_VND_MAXMIND_MAXMIND_DB: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMaxmindMaxmindDb),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.mcd`
    pub const APPLICATION_VND_MCD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMcd),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.medcalcdata`
    pub const APPLICATION_VND_MEDCALCDATA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMedcalcdata),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.mediastation.cdkey`
    pub const APPLICATION_VND_MEDIASTATION_CDKEY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMediastationCdkey),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.meridian-slingshot`
    pub const APPLICATION_VND_MERIDIAN_SLINGSHOT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMeridianSlingshot),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.MFER`
    pub const APPLICATION_VND_MFER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMfer),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.mfmp`
    pub const APPLICATION_VND_MFMP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMfmp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.micro+json`
    pub const APPLICATION_VND_MICRO_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMicro),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.micrografx.flo`
    pub const APPLICATION_VND_MICROGRAFX_FLO: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMicrografxFlo),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.micrografx.igx`
    pub const APPLICATION_VND_MICROGRAFX_IGX: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMicrografxIgx),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.microsoft.portable-executable`
    pub const APPLICATION_VND_MICROSOFT_PORTABLE_EXECUTABLE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMicrosoftPortableExecutable),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.microsoft.windows.thumbnail-cache`
    pub const APPLICATION_VND_MICROSOFT_WINDOWS_THUMBNAIL_CACHE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMicrosoftWindowsThumbnailCache),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.miele+json`
    pub const APPLICATION_VND_MIELE_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMiele),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.mif`
    pub const APPLICATION_VND_MIF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMif),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.minisoft-hp3000-save`
    pub const APPLICATION_VND_MINISOFT_HP3000_SAVE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMinisoftHp3000Save),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.mitsubishi.misty-guard.trustweb`
    pub const APPLICATION_VND_MITSUBISHI_MISTY_GUARD_TRUSTWEB: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMitsubishiMistyGuardTrustweb),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.Mobius.DAF`
    pub const APPLICATION_VND_MOBIUS_DAF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMobiusDaf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.Mobius.DIS`
    pub const APPLICATION_VND_MOBIUS_DIS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMobiusDis),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.Mobius.MBK`
    pub const APPLICATION_VND_MOBIUS_MBK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMobiusMbk),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.Mobius.MQY`
    pub const APPLICATION_VND_MOBIUS_MQY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMobiusMqy),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.Mobius.MSL`
    pub const APPLICATION_VND_MOBIUS_MSL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMobiusMsl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.Mobius.PLC`
    pub const APPLICATION_VND_MOBIUS_PLC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMobiusPlc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.Mobius.TXF`
    pub const APPLICATION_VND_MOBIUS_TXF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMobiusTxf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.mophun.application`
    pub const APPLICATION_VND_MOPHUN_APPLICATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMophunApplication),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.mophun.certificate`
    pub const APPLICATION_VND_MOPHUN_CERTIFICATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMophunCertificate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.motorola.flexsuite`
    pub const APPLICATION_VND_MOTOROLA_FLEXSUITE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMotorolaFlexsuite),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.motorola.flexsuite.adsi`
    pub const APPLICATION_VND_MOTOROLA_FLEXSUITE_ADSI: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMotorolaFlexsuiteAdsi),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.motorola.flexsuite.fis`
    pub const APPLICATION_VND_MOTOROLA_FLEXSUITE_FIS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMotorolaFlexsuiteFis),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.motorola.flexsuite.gotap`
    pub const APPLICATION_VND_MOTOROLA_FLEXSUITE_GOTAP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMotorolaFlexsuiteGotap),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.motorola.flexsuite.kmr`
    pub const APPLICATION_VND_MOTOROLA_FLEXSUITE_KMR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMotorolaFlexsuiteKmr),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.motorola.flexsuite.ttc`
    pub const APPLICATION_VND_MOTOROLA_FLEXSUITE_TTC: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMotorolaFlexsuiteTtc),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.motorola.flexsuite.wem`
    pub const APPLICATION_VND_MOTOROLA_FLEXSUITE_WEM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMotorolaFlexsuiteWem),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.motorola.iprm`
    pub const APPLICATION_VND_MOTOROLA_IPRM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMotorolaIprm),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.mozilla.xul+xml`
    pub const APPLICATION_VND_MOZILLA_XUL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMozillaXul),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.ms-3mfdocument`
    pub const APPLICATION_VND_MS_3MFDOCUMENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMs3mfdocument),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-artgalry`
    pub const APPLICATION_VND_MS_ARTGALRY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsArtgalry),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-asf`
    pub const APPLICATION_VND_MS_ASF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsAsf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-cab-compressed`
    pub const APPLICATION_VND_MS_CAB_COMPRESSED: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsCabCompressed),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-excel`
    pub const APPLICATION_VND_MS_EXCEL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsExcel),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-excel.addin.macroEnabled.12`
    pub const APPLICATION_VND_MS_EXCEL_ADDIN_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsExcelAddinMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-excel.sheet.binary.macroEnabled.12`
    pub const APPLICATION_VND_MS_EXCEL_SHEET_BINARY_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsExcelSheetBinaryMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-excel.sheet.macroEnabled.12`
    pub const APPLICATION_VND_MS_EXCEL_SHEET_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsExcelSheetMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-excel.template.macroEnabled.12`
    pub const APPLICATION_VND_MS_EXCEL_TEMPLATE_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsExcelTemplateMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-fontobject`
    pub const APPLICATION_VND_MS_FONTOBJECT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsFontobject),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-htmlhelp`
    pub const APPLICATION_VND_MS_HTMLHELP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsHtmlhelp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-ims`
    pub const APPLICATION_VND_MS_IMS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsIms),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-lrm`
    pub const APPLICATION_VND_MS_LRM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsLrm),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-office.activeX+xml`
    pub const APPLICATION_VND_MS_OFFICE_ACTIVE_X_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsOfficeActiveX),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.ms-officetheme`
    pub const APPLICATION_VND_MS_OFFICETHEME: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsOfficetheme),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-pki.seccat`
    pub const APPLICATION_VND_MS_PKI_SECCAT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsPkiSeccat),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-playready.initiator+xml`
    pub const APPLICATION_VND_MS_PLAYREADY_INITIATOR_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsPlayreadyInitiator),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.ms-powerpoint`
    pub const APPLICATION_VND_MS_POWERPOINT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsPowerpoint),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-powerpoint.addin.macroEnabled.12`
    pub const APPLICATION_VND_MS_POWERPOINT_ADDIN_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsPowerpointAddinMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-powerpoint.presentation.macroEnabled.12`
    pub const APPLICATION_VND_MS_POWERPOINT_PRESENTATION_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(
                super::Subtype::VndMsPowerpointPresentationMacroEnabled12,
            ),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-powerpoint.slide.macroEnabled.12`
    pub const APPLICATION_VND_MS_POWERPOINT_SLIDE_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsPowerpointSlideMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-powerpoint.slideshow.macroEnabled.12`
    pub const APPLICATION_VND_MS_POWERPOINT_SLIDESHOW_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsPowerpointSlideshowMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-powerpoint.template.macroEnabled.12`
    pub const APPLICATION_VND_MS_POWERPOINT_TEMPLATE_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsPowerpointTemplateMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-PrintDeviceCapabilities+xml`
    pub const APPLICATION_VND_MS_PRINT_DEVICE_CAPABILITIES_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsPrintDeviceCapabilities),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.ms-PrintSchemaTicket+xml`
    pub const APPLICATION_VND_MS_PRINT_SCHEMA_TICKET_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsPrintSchemaTicket),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.ms-project`
    pub const APPLICATION_VND_MS_PROJECT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsProject),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-tnef`
    pub const APPLICATION_VND_MS_TNEF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsTnef),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-windows.devicepairing`
    pub const APPLICATION_VND_MS_WINDOWS_DEVICEPAIRING: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWindowsDevicepairing),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-windows.nwprinting.oob`
    pub const APPLICATION_VND_MS_WINDOWS_NWPRINTING_OOB: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWindowsNwprintingOob),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-windows.printerpairing`
    pub const APPLICATION_VND_MS_WINDOWS_PRINTERPAIRING: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWindowsPrinterpairing),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-windows.wsd.oob`
    pub const APPLICATION_VND_MS_WINDOWS_WSD_OOB: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWindowsWsdOob),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-wmdrm.lic-chlg-req`
    pub const APPLICATION_VND_MS_WMDRM_LIC_CHLG_REQ: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWmdrmLicChlgReq),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-wmdrm.lic-resp`
    pub const APPLICATION_VND_MS_WMDRM_LIC_RESP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWmdrmLicResp),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-wmdrm.meter-chlg-req`
    pub const APPLICATION_VND_MS_WMDRM_METER_CHLG_REQ: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWmdrmMeterChlgReq),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-wmdrm.meter-resp`
    pub const APPLICATION_VND_MS_WMDRM_METER_RESP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWmdrmMeterResp),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-word.document.macroEnabled.12`
    pub const APPLICATION_VND_MS_WORD_DOCUMENT_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWordDocumentMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-word.template.macroEnabled.12`
    pub const APPLICATION_VND_MS_WORD_TEMPLATE_MACRO_ENABLED_12: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsWordTemplateMacroEnabled12),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ms-works`
    pub const APPLICATION_VND_MS_WORKS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsWorks),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-wpl`
    pub const APPLICATION_VND_MS_WPL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsWpl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ms-xpsdocument`
    pub const APPLICATION_VND_MS_XPSDOCUMENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsXpsdocument),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.msa-disk-image`
    pub const APPLICATION_VND_MSA_DISK_IMAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMsaDiskImage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.mseq`
    pub const APPLICATION_VND_MSEQ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMseq),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.msign`
    pub const APPLICATION_VND_MSIGN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMsign),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.multiad.creator`
    pub const APPLICATION_VND_MULTIAD_CREATOR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMultiadCreator),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.multiad.creator.cif`
    pub const APPLICATION_VND_MULTIAD_CREATOR_CIF: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndMultiadCreatorCif),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.music-niff`
    pub const APPLICATION_VND_MUSIC_NIFF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMusicNiff),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.musician`
    pub const APPLICATION_VND_MUSICIAN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMusician),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.muvee.style`
    pub const APPLICATION_VND_MUVEE_STYLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMuveeStyle),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.mynfc`
    pub const APPLICATION_VND_MYNFC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndMynfc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.nacamar.ybrid+json`
    pub const APPLICATION_VND_NACAMAR_YBRID_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNacamarYbrid),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.ncd.control`
    pub const APPLICATION_VND_NCD_CONTROL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndNcdControl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ncd.reference`
    pub const APPLICATION_VND_NCD_REFERENCE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNcdReference),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nearst.inv+json`
    pub const APPLICATION_VND_NEARST_INV_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNearstInv),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.nebumind.line`
    pub const APPLICATION_VND_NEBUMIND_LINE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNebumindLine),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nervana`
    pub const APPLICATION_VND_NERVANA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndNervana),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.netfpx`
    pub const APPLICATION_VND_NETFPX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndNetfpx),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.neurolanguage.nlu`
    pub const APPLICATION_VND_NEUROLANGUAGE_NLU: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNeurolanguageNlu),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nimn`
    pub const APPLICATION_VND_NIMN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndNimn),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.nintendo.nitro.rom`
    pub const APPLICATION_VND_NINTENDO_NITRO_ROM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNintendoNitroRom),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nintendo.snes.rom`
    pub const APPLICATION_VND_NINTENDO_SNES_ROM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNintendoSnesRom),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nitf`
    pub const APPLICATION_VND_NITF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndNitf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.noblenet-directory`
    pub const APPLICATION_VND_NOBLENET_DIRECTORY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNoblenetDirectory),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.noblenet-sealer`
    pub const APPLICATION_VND_NOBLENET_SEALER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNoblenetSealer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.noblenet-web`
    pub const APPLICATION_VND_NOBLENET_WEB: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNoblenetWeb),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nokia.catalogs`
    pub const APPLICATION_VND_NOKIA_CATALOGS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaCatalogs),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nokia.conml+wbxml`
    pub const APPLICATION_VND_NOKIA_CONML_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaConml),
            suffix: Some(crate::Name::Interned(super::Suffix::Wbxml)),
            parameters: &[],
        });

    /// `application/vnd.nokia.conml+xml`
    pub const APPLICATION_VND_NOKIA_CONML_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaConml),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.nokia.iptv.config+xml`
    pub const APPLICATION_VND_NOKIA_IPTV_CONFIG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaIptvConfig),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.nokia.iSDS-radio-presets`
    pub const APPLICATION_VND_NOKIA_I_SDS_RADIO_PRESETS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaISdsRadioPresets),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nokia.landmark+wbxml`
    pub const APPLICATION_VND_NOKIA_LANDMARK_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaLandmark),
            suffix: Some(crate::Name::Interned(super::Suffix::Wbxml)),
            parameters: &[],
        });

    /// `application/vnd.nokia.landmark+xml`
    pub const APPLICATION_VND_NOKIA_LANDMARK_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaLandmark),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.nokia.landmarkcollection+xml`
    pub const APPLICATION_VND_NOKIA_LANDMARKCOLLECTION_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaLandmarkcollection),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.nokia.n-gage.ac+xml`
    pub const APPLICATION_VND_NOKIA_N_GAGE_AC_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaNGageAc),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.nokia.n-gage.data`
    pub const APPLICATION_VND_NOKIA_N_GAGE_DATA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaNGageData),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nokia.ncd`
    pub const APPLICATION_VND_NOKIA_NCD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndNokiaNcd),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.nokia.pcd+wbxml`
    pub const APPLICATION_VND_NOKIA_PCD_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaPcd),
            suffix: Some(crate::Name::Interned(super::Suffix::Wbxml)),
            parameters: &[],
        });

    /// `application/vnd.nokia.pcd+xml`
    pub const APPLICATION_VND_NOKIA_PCD_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaPcd),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.nokia.radio-preset`
    pub const APPLICATION_VND_NOKIA_RADIO_PRESET: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaRadioPreset),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.nokia.radio-presets`
    pub const APPLICATION_VND_NOKIA_RADIO_PRESETS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaRadioPresets),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.novadigm.EDM`
    pub const APPLICATION_VND_NOVADIGM_EDM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNovadigmEdm),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.novadigm.EDX`
    pub const APPLICATION_VND_NOVADIGM_EDX: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNovadigmEdx),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.novadigm.EXT`
    pub const APPLICATION_VND_NOVADIGM_EXT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNovadigmExt),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ntt-local.content-share`
    pub const APPLICATION_VND_NTT_LOCAL_CONTENT_SHARE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNttLocalContentShare),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ntt-local.file-transfer`
    pub const APPLICATION_VND_NTT_LOCAL_FILE_TRANSFER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNttLocalFileTransfer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ntt-local.ogw_remote-access`
    pub const APPLICATION_VND_NTT_LOCAL_OGW_REMOTE_ACCESS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNttLocalOgwRemoteAccess),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ntt-local.sip-ta_remote`
    pub const APPLICATION_VND_NTT_LOCAL_SIP_TA_REMOTE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNttLocalSipTaRemote),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ntt-local.sip-ta_tcp_stream`
    pub const APPLICATION_VND_NTT_LOCAL_SIP_TA_TCP_STREAM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndNttLocalSipTaTcpStream),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.chart`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_CHART: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentChart),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.chart-template`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_CHART_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentChartTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.database`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_DATABASE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentDatabase),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.formula`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentFormula),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.formula-template`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentFormulaTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.graphics`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentGraphics),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.graphics-template`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentGraphicsTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.image`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_IMAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentImage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.image-template`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_IMAGE_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentImageTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.presentation`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentPresentation),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.presentation-template`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(
                super::Subtype::VndOasisOpendocumentPresentationTemplate,
            ),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.spreadsheet`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentSpreadsheet),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.spreadsheet-template`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentSpreadsheetTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.text`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentText),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.text-master`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_MASTER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentTextMaster),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.text-template`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentTextTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oasis.opendocument.text-web`
    pub const APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_WEB: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOasisOpendocumentTextWeb),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.obn`
    pub const APPLICATION_VND_OBN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndObn),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ocf+cbor`
    pub const APPLICATION_VND_OCF_CBOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOcf),
        suffix: Some(crate::Name::Interned(super::Suffix::Cbor)),
        parameters: &[],
    });

    /// `application/vnd.oci.image.manifest.v1+json`
    pub const APPLICATION_VND_OCI_IMAGE_MANIFEST_V1_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOciImageManifestV1),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.oftn.l10n+json`
    pub const APPLICATION_VND_OFTN_L10N_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOftnL10n),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.oipf.contentaccessdownload+xml`
    pub const APPLICATION_VND_OIPF_CONTENTACCESSDOWNLOAD_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfContentaccessdownload),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oipf.contentaccessstreaming+xml`
    pub const APPLICATION_VND_OIPF_CONTENTACCESSSTREAMING_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfContentaccessstreaming),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oipf.cspg-hexbinary`
    pub const APPLICATION_VND_OIPF_CSPG_HEXBINARY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfCspgHexbinary),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oipf.dae.svg+xml`
    pub const APPLICATION_VND_OIPF_DAE_SVG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfDaeSvg),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oipf.dae.xhtml+xml`
    pub const APPLICATION_VND_OIPF_DAE_XHTML_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfDaeXhtml),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oipf.mippvcontrolmessage+xml`
    pub const APPLICATION_VND_OIPF_MIPPVCONTROLMESSAGE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfMippvcontrolmessage),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oipf.pae.gem`
    pub const APPLICATION_VND_OIPF_PAE_GEM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfPaeGem),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oipf.spdiscovery+xml`
    pub const APPLICATION_VND_OIPF_SPDISCOVERY_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfSpdiscovery),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oipf.spdlist+xml`
    pub const APPLICATION_VND_OIPF_SPDLIST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfSpdlist),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oipf.ueprofile+xml`
    pub const APPLICATION_VND_OIPF_UEPROFILE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfUeprofile),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oipf.userprofile+xml`
    pub const APPLICATION_VND_OIPF_USERPROFILE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOipfUserprofile),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.olpc-sugar`
    pub const APPLICATION_VND_OLPC_SUGAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOlpcSugar),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.oma-scws-config`
    pub const APPLICATION_VND_OMA_SCWS_CONFIG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaScwsConfig),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oma-scws-http-request`
    pub const APPLICATION_VND_OMA_SCWS_HTTP_REQUEST: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaScwsHttpRequest),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oma-scws-http-response`
    pub const APPLICATION_VND_OMA_SCWS_HTTP_RESPONSE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaScwsHttpResponse),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.associated-procedure-parameter+xml`
    pub const APPLICATION_VND_OMA_BCAST_ASSOCIATED_PROCEDURE_PARAMETER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastAssociatedProcedureParameter),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.drm-trigger+xml`
    pub const APPLICATION_VND_OMA_BCAST_DRM_TRIGGER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastDrmTrigger),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.imd+xml`
    pub const APPLICATION_VND_OMA_BCAST_IMD_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastImd),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.ltkm`
    pub const APPLICATION_VND_OMA_BCAST_LTKM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastLtkm),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.notification+xml`
    pub const APPLICATION_VND_OMA_BCAST_NOTIFICATION_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastNotification),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.provisioningtrigger`
    pub const APPLICATION_VND_OMA_BCAST_PROVISIONINGTRIGGER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastProvisioningtrigger),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.sgboot`
    pub const APPLICATION_VND_OMA_BCAST_SGBOOT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastSgboot),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.sgdd+xml`
    pub const APPLICATION_VND_OMA_BCAST_SGDD_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastSgdd),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.sgdu`
    pub const APPLICATION_VND_OMA_BCAST_SGDU: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastSgdu),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.simple-symbol-container`
    pub const APPLICATION_VND_OMA_BCAST_SIMPLE_SYMBOL_CONTAINER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastSimpleSymbolContainer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.smartcard-trigger+xml`
    pub const APPLICATION_VND_OMA_BCAST_SMARTCARD_TRIGGER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastSmartcardTrigger),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.sprov+xml`
    pub const APPLICATION_VND_OMA_BCAST_SPROV_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastSprov),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.bcast.stkm`
    pub const APPLICATION_VND_OMA_BCAST_STKM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaBcastStkm),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.oma.cab-address-book+xml`
    pub const APPLICATION_VND_OMA_CAB_ADDRESS_BOOK_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaCabAddressBook),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.cab-feature-handler+xml`
    pub const APPLICATION_VND_OMA_CAB_FEATURE_HANDLER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaCabFeatureHandler),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.cab-pcc+xml`
    pub const APPLICATION_VND_OMA_CAB_PCC_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaCabPcc),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.cab-subs-invite+xml`
    pub const APPLICATION_VND_OMA_CAB_SUBS_INVITE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaCabSubsInvite),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.cab-user-prefs+xml`
    pub const APPLICATION_VND_OMA_CAB_USER_PREFS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaCabUserPrefs),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.dcd`
    pub const APPLICATION_VND_OMA_DCD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOmaDcd),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.oma.dcdc`
    pub const APPLICATION_VND_OMA_DCDC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOmaDcdc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.oma.dd2+xml`
    pub const APPLICATION_VND_OMA_DD2_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOmaDd2),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.oma.drm.risd+xml`
    pub const APPLICATION_VND_OMA_DRM_RISD_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaDrmRisd),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.group-usage-list+xml`
    pub const APPLICATION_VND_OMA_GROUP_USAGE_LIST_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaGroupUsageList),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.lwm2m+cbor`
    pub const APPLICATION_VND_OMA_LWM2M_CBOR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaLwm2m),
            suffix: Some(crate::Name::Interned(super::Suffix::Cbor)),
            parameters: &[],
        });

    /// `application/vnd.oma.lwm2m+json`
    pub const APPLICATION_VND_OMA_LWM2M_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaLwm2m),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.oma.lwm2m+tlv`
    pub const APPLICATION_VND_OMA_LWM2M_TLV: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaLwm2m),
            suffix: Some(crate::Name::Interned(super::Suffix::Tlv)),
            parameters: &[],
        });

    /// `application/vnd.oma.pal+xml`
    pub const APPLICATION_VND_OMA_PAL_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOmaPal),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.oma.poc.detailed-progress-report+xml`
    pub const APPLICATION_VND_OMA_POC_DETAILED_PROGRESS_REPORT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaPocDetailedProgressReport),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.poc.final-report+xml`
    pub const APPLICATION_VND_OMA_POC_FINAL_REPORT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaPocFinalReport),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.poc.groups+xml`
    pub const APPLICATION_VND_OMA_POC_GROUPS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaPocGroups),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.poc.invocation-descriptor+xml`
    pub const APPLICATION_VND_OMA_POC_INVOCATION_DESCRIPTOR_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaPocInvocationDescriptor),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.poc.optimized-progress-report+xml`
    pub const APPLICATION_VND_OMA_POC_OPTIMIZED_PROGRESS_REPORT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaPocOptimizedProgressReport),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.push`
    pub const APPLICATION_VND_OMA_PUSH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOmaPush),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.oma.scidm.messages+xml`
    pub const APPLICATION_VND_OMA_SCIDM_MESSAGES_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaScidmMessages),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oma.xcap-directory+xml`
    pub const APPLICATION_VND_OMA_XCAP_DIRECTORY_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmaXcapDirectory),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.omads-email+xml`
    pub const APPLICATION_VND_OMADS_EMAIL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmadsEmail),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.omads-file+xml`
    pub const APPLICATION_VND_OMADS_FILE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmadsFile),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.omads-folder+xml`
    pub const APPLICATION_VND_OMADS_FOLDER_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmadsFolder),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.omaloc-supl-init`
    pub const APPLICATION_VND_OMALOC_SUPL_INIT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOmalocSuplInit),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.onepager`
    pub const APPLICATION_VND_ONEPAGER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOnepager),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.onepagertamp`
    pub const APPLICATION_VND_ONEPAGERTAMP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOnepagertamp),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.onepagertamx`
    pub const APPLICATION_VND_ONEPAGERTAMX: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOnepagertamx),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.onepagertat`
    pub const APPLICATION_VND_ONEPAGERTAT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOnepagertat),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.onepagertatp`
    pub const APPLICATION_VND_ONEPAGERTATP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOnepagertatp),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.onepagertatx`
    pub const APPLICATION_VND_ONEPAGERTATX: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOnepagertatx),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.openblox.game+xml`
    pub const APPLICATION_VND_OPENBLOX_GAME_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOpenbloxGame),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.openblox.game-binary`
    pub const APPLICATION_VND_OPENBLOX_GAME_BINARY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOpenbloxGameBinary),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.openeye.oeb`
    pub const APPLICATION_VND_OPENEYE_OEB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOpeneyeOeb),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.openofficeorg.extension`
    pub const APPLICATION_VND_OPENOFFICEORG_EXTENSION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOpenofficeorgExtension),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.openstreetmap.data+xml`
    pub const APPLICATION_VND_OPENSTREETMAP_DATA_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOpenstreetmapData),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.opentimestamps.ots`
    pub const APPLICATION_VND_OPENTIMESTAMPS_OTS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOpentimestampsOts),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.openxmlformats-officedocument.custom-properties+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_CUSTOM_PROPERTIES_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentCustomProperties,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.customXmlProperties+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_CUSTOM_XML_PROPERTIES_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentCustomXmlProperties,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.drawing+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWING_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOpenxmlformatsOfficedocumentDrawing),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.openxmlformats-officedocument.drawingml.chart+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_CHART_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentDrawingmlChart,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_CHARTSHAPES_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentDrawingmlChartshapes,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_DIAGRAM_COLORS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramColors,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_DIAGRAM_DATA_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramData,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_DIAGRAM_LAYOUT_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramLayout,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_DRAWINGML_DIAGRAM_STYLE_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentDrawingmlDiagramStyle,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.extended-properties+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_EXTENDED_PROPERTIES_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentExtendedProperties,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.commentAuthors+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_COMMENT_AUTHORS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlCommentAuthors,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.comments+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_COMMENTS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlComments,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.handoutMaster+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_HANDOUT_MASTER_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlHandoutMaster,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_NOTES_MASTER_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlNotesMaster,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_NOTES_SLIDE_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlNotesSlide,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.presentation`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlPresentation,
        ),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION_MAIN_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlPresentationMain,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.presProps+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRES_PROPS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlPresProps,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.slide`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlide,
        ),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.slide+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlide,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE_LAYOUT_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideLayout,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE_MASTER_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideMaster,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.slideshow`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideshow,
        ),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW_MAIN_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideshowMain,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.slideUpdateInfo+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE_UPDATE_INFO_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlSlideUpdateInfo,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TABLE_STYLES_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTableStyles,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.tags+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TAGS_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTags,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.template`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTemplate,
        ),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.template.main+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE_MAIN_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlTemplateMain,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_VIEW_PROPS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentPresentationmlViewProps,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_CALC_CHAIN_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlCalcChain,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_CHARTSHEET_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlChartsheet,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_COMMENTS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlComments,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_CONNECTIONS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlConnections,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_DIALOGSHEET_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlDialogsheet,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_EXTERNAL_LINK_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlExternalLink,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_PIVOT_CACHE_DEFINITION_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheDefinition),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[]
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_PIVOT_CACHE_RECORDS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotCacheRecords),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[]
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_PIVOT_TABLE_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlPivotTable,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_QUERY_TABLE_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlQueryTable,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_REVISION_HEADERS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionHeaders,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_REVISION_LOG_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlRevisionLog,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHARED_STRINGS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSharedStrings,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSheet,
        ),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET_MAIN_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMain,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET_METADATA_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlSheetMetadata,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_STYLES_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlStyles,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TABLE_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTable,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TABLE_SINGLE_CELLS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTableSingleCells,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.template`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplate,
        ),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE_MAIN_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlTemplateMain,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_USER_NAMES_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlUserNames,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_VOLATILE_DEPENDENCIES_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlVolatileDependencies),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[]
    });

    /// `application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_WORKSHEET_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentSpreadsheetmlWorksheet,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.theme+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_THEME_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOpenxmlformatsOfficedocumentTheme),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.openxmlformats-officedocument.themeOverride+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_THEME_OVERRIDE_XML: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentThemeOverride,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.vmlDrawing`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_VML_DRAWING: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(
                super::Subtype::VndOpenxmlformatsOfficedocumentVmlDrawing,
            ),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_COMMENTS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlComments,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.document`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlDocument,
        ),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT_GLOSSARY_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentGlossary),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[]
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT_MAIN_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlDocumentMain,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_ENDNOTES_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlEndnotes,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_FONT_TABLE_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlFontTable,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_FOOTER_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlFooter,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_FOOTNOTES_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlFootnotes,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_NUMBERING_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlNumbering,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_SETTINGS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlSettings,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_STYLES_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlStyles,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.template`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE: crate::Mime<
        'static,
    > = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlTemplate,
        ),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE_MAIN_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlTemplateMain,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_WEB_SETTINGS_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsOfficedocumentWordprocessingmlWebSettings,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-package.core-properties+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_PACKAGE_CORE_PROPERTIES_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOpenxmlformatsPackageCoreProperties),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_PACKAGE_DIGITAL_SIGNATURE_XMLSIGNATURE_XML:
        crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(
            super::Subtype::VndOpenxmlformatsPackageDigitalSignatureXmlsignature,
        ),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.openxmlformats-package.relationships+xml`
    pub const APPLICATION_VND_OPENXMLFORMATS_PACKAGE_RELATIONSHIPS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOpenxmlformatsPackageRelationships),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oracle.resource+json`
    pub const APPLICATION_VND_ORACLE_RESOURCE_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOracleResource),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.orange.indata`
    pub const APPLICATION_VND_ORANGE_INDATA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOrangeIndata),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.osa.netdeploy`
    pub const APPLICATION_VND_OSA_NETDEPLOY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOsaNetdeploy),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.osgeo.mapguide.package`
    pub const APPLICATION_VND_OSGEO_MAPGUIDE_PACKAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOsgeoMapguidePackage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.osgi.bundle`
    pub const APPLICATION_VND_OSGI_BUNDLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOsgiBundle),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.osgi.dp`
    pub const APPLICATION_VND_OSGI_DP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndOsgiDp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.osgi.subsystem`
    pub const APPLICATION_VND_OSGI_SUBSYSTEM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOsgiSubsystem),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.otps.ct-kip+xml`
    pub const APPLICATION_VND_OTPS_CT_KIP_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOtpsCtKip),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.oxli.countgraph`
    pub const APPLICATION_VND_OXLI_COUNTGRAPH: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndOxliCountgraph),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.pagerduty+json`
    pub const APPLICATION_VND_PAGERDUTY_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPagerduty),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.palm`
    pub const APPLICATION_VND_PALM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPalm),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.panoply`
    pub const APPLICATION_VND_PANOPLY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPanoply),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.paos.xml`
    pub const APPLICATION_VND_PAOS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPaosXml),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.patentdive`
    pub const APPLICATION_VND_PATENTDIVE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPatentdive),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.patientecommsdoc`
    pub const APPLICATION_VND_PATIENTECOMMSDOC: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPatientecommsdoc),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.pawaafile`
    pub const APPLICATION_VND_PAWAAFILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPawaafile),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.pcos`
    pub const APPLICATION_VND_PCOS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPcos),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.pg.format`
    pub const APPLICATION_VND_PG_FORMAT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPgFormat),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.pg.osasli`
    pub const APPLICATION_VND_PG_OSASLI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPgOsasli),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.piaccess.application-licence`
    pub const APPLICATION_VND_PIACCESS_APPLICATION_LICENCE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPiaccessApplicationLicence),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.picsel`
    pub const APPLICATION_VND_PICSEL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPicsel),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.pmi.widget`
    pub const APPLICATION_VND_PMI_WIDGET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPmiWidget),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.poc.group-advertisement+xml`
    pub const APPLICATION_VND_POC_GROUP_ADVERTISEMENT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPocGroupAdvertisement),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.pocketlearn`
    pub const APPLICATION_VND_POCKETLEARN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPocketlearn),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.powerbuilder6`
    pub const APPLICATION_VND_POWERBUILDER6: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPowerbuilder6),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.powerbuilder6-s`
    pub const APPLICATION_VND_POWERBUILDER6_S: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPowerbuilder6S),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.powerbuilder7`
    pub const APPLICATION_VND_POWERBUILDER7: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPowerbuilder7),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.powerbuilder7-s`
    pub const APPLICATION_VND_POWERBUILDER7_S: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPowerbuilder7S),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.powerbuilder75`
    pub const APPLICATION_VND_POWERBUILDER75: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPowerbuilder75),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.powerbuilder75-s`
    pub const APPLICATION_VND_POWERBUILDER75_S: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPowerbuilder75S),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.preminet`
    pub const APPLICATION_VND_PREMINET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPreminet),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.previewsystems.box`
    pub const APPLICATION_VND_PREVIEWSYSTEMS_BOX: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPreviewsystemsBox),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.proteus.magazine`
    pub const APPLICATION_VND_PROTEUS_MAGAZINE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndProteusMagazine),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.psfs`
    pub const APPLICATION_VND_PSFS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPsfs),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.publishare-delta-tree`
    pub const APPLICATION_VND_PUBLISHARE_DELTA_TREE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPublishareDeltaTree),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.pvi.ptid1`
    pub const APPLICATION_VND_PVI_PTID1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndPviPtid1),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.pwg-multiplexed`
    pub const APPLICATION_VND_PWG_MULTIPLEXED: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPwgMultiplexed),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.pwg-xhtml-print+xml`
    pub const APPLICATION_VND_PWG_XHTML_PRINT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndPwgXhtmlPrint),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.qualcomm.brew-app-res`
    pub const APPLICATION_VND_QUALCOMM_BREW_APP_RES: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndQualcommBrewAppRes),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.quarantainenet`
    pub const APPLICATION_VND_QUARANTAINENET: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndQuarantainenet),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.Quark.QuarkXPress`
    pub const APPLICATION_VND_QUARK_QUARK_X_PRESS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndQuarkQuarkXPress),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.quobject-quoxdocument`
    pub const APPLICATION_VND_QUOBJECT_QUOXDOCUMENT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndQuobjectQuoxdocument),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.radisys.moml+xml`
    pub const APPLICATION_VND_RADISYS_MOML_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMoml),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml+xml`
    pub const APPLICATION_VND_RADISYS_MSML_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsml),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-audit+xml`
    pub const APPLICATION_VND_RADISYS_MSML_AUDIT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlAudit),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-audit-conf+xml`
    pub const APPLICATION_VND_RADISYS_MSML_AUDIT_CONF_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlAuditConf),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-audit-conn+xml`
    pub const APPLICATION_VND_RADISYS_MSML_AUDIT_CONN_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlAuditConn),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-audit-dialog+xml`
    pub const APPLICATION_VND_RADISYS_MSML_AUDIT_DIALOG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlAuditDialog),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-audit-stream+xml`
    pub const APPLICATION_VND_RADISYS_MSML_AUDIT_STREAM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlAuditStream),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-conf+xml`
    pub const APPLICATION_VND_RADISYS_MSML_CONF_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlConf),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-dialog+xml`
    pub const APPLICATION_VND_RADISYS_MSML_DIALOG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlDialog),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-dialog-base+xml`
    pub const APPLICATION_VND_RADISYS_MSML_DIALOG_BASE_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlDialogBase),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-dialog-fax-detect+xml`
    pub const APPLICATION_VND_RADISYS_MSML_DIALOG_FAX_DETECT_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlDialogFaxDetect),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-dialog-fax-sendrecv+xml`
    pub const APPLICATION_VND_RADISYS_MSML_DIALOG_FAX_SENDRECV_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlDialogFaxSendrecv),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-dialog-group+xml`
    pub const APPLICATION_VND_RADISYS_MSML_DIALOG_GROUP_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlDialogGroup),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-dialog-speech+xml`
    pub const APPLICATION_VND_RADISYS_MSML_DIALOG_SPEECH_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlDialogSpeech),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.radisys.msml-dialog-transform+xml`
    pub const APPLICATION_VND_RADISYS_MSML_DIALOG_TRANSFORM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlDialogTransform),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.rainstor.data`
    pub const APPLICATION_VND_RAINSTOR_DATA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRainstorData),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.rapid`
    pub const APPLICATION_VND_RAPID: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndRapid),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.rar`
    pub const APPLICATION_VND_RAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndRar),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.realvnc.bed`
    pub const APPLICATION_VND_REALVNC_BED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndRealvncBed),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.recordare.musicxml`
    pub const APPLICATION_VND_RECORDARE_MUSICXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRecordareMusicxml),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.recordare.musicxml+xml`
    pub const APPLICATION_VND_RECORDARE_MUSICXML_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRecordareMusicxml),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.RenLearn.rlprint`
    pub const APPLICATION_VND_REN_LEARN_RLPRINT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRenLearnRlprint),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.resilient.logic`
    pub const APPLICATION_VND_RESILIENT_LOGIC: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndResilientLogic),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.restful+json`
    pub const APPLICATION_VND_RESTFUL_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRestful),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.rig.cryptonote`
    pub const APPLICATION_VND_RIG_CRYPTONOTE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRigCryptonote),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.rim.cod`
    pub const APPLICATION_VND_RIM_COD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndRimCod),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.route66.link66+xml`
    pub const APPLICATION_VND_ROUTE66_LINK66_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRoute66Link66),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.rs-274x`
    pub const APPLICATION_VND_RS_274X: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndRs274x),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ruckus.download`
    pub const APPLICATION_VND_RUCKUS_DOWNLOAD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndRuckusDownload),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.s3sms`
    pub const APPLICATION_VND_S3SMS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndS3sms),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sailingtracker.track`
    pub const APPLICATION_VND_SAILINGTRACKER_TRACK: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSailingtrackerTrack),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sar`
    pub const APPLICATION_VND_SAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSar),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sbm.cid`
    pub const APPLICATION_VND_SBM_CID: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSbmCid),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sbm.mid2`
    pub const APPLICATION_VND_SBM_MID2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSbmMid2),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.scribus`
    pub const APPLICATION_VND_SCRIBUS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndScribus),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealed.3df`
    pub const APPLICATION_VND_SEALED_3DF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSealed3df),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealed.csf`
    pub const APPLICATION_VND_SEALED_CSF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSealedCsf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealed.doc`
    pub const APPLICATION_VND_SEALED_DOC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSealedDoc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealed.eml`
    pub const APPLICATION_VND_SEALED_EML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSealedEml),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealed.mht`
    pub const APPLICATION_VND_SEALED_MHT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSealedMht),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealed.net`
    pub const APPLICATION_VND_SEALED_NET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSealedNet),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealed.ppt`
    pub const APPLICATION_VND_SEALED_PPT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSealedPpt),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealed.tiff`
    pub const APPLICATION_VND_SEALED_TIFF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSealedTiff),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealed.xls`
    pub const APPLICATION_VND_SEALED_XLS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSealedXls),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sealedmedia.softseal.html`
    pub const APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_HTML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSealedmediaSoftsealHtml),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sealedmedia.softseal.pdf`
    pub const APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_PDF: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSealedmediaSoftsealPdf),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.seemail`
    pub const APPLICATION_VND_SEEMAIL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSeemail),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.seis+json`
    pub const APPLICATION_VND_SEIS_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSeis),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.sema`
    pub const APPLICATION_VND_SEMA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSema),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.semd`
    pub const APPLICATION_VND_SEMD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSemd),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.semf`
    pub const APPLICATION_VND_SEMF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSemf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.shade-save-file`
    pub const APPLICATION_VND_SHADE_SAVE_FILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndShadeSaveFile),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.shana.informed.formdata`
    pub const APPLICATION_VND_SHANA_INFORMED_FORMDATA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndShanaInformedFormdata),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.shana.informed.formtemplate`
    pub const APPLICATION_VND_SHANA_INFORMED_FORMTEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndShanaInformedFormtemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.shana.informed.interchange`
    pub const APPLICATION_VND_SHANA_INFORMED_INTERCHANGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndShanaInformedInterchange),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.shana.informed.package`
    pub const APPLICATION_VND_SHANA_INFORMED_PACKAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndShanaInformedPackage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.shootproof+json`
    pub const APPLICATION_VND_SHOOTPROOF_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndShootproof),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.shopkick+json`
    pub const APPLICATION_VND_SHOPKICK_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndShopkick),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.shp`
    pub const APPLICATION_VND_SHP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndShp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.shx`
    pub const APPLICATION_VND_SHX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndShx),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sigrok.session`
    pub const APPLICATION_VND_SIGROK_SESSION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSigrokSession),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.SimTech-MindMapper`
    pub const APPLICATION_VND_SIM_TECH_MIND_MAPPER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSimTechMindMapper),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.siren+json`
    pub const APPLICATION_VND_SIREN_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSiren),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.smaf`
    pub const APPLICATION_VND_SMAF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSmaf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.smart.notebook`
    pub const APPLICATION_VND_SMART_NOTEBOOK: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSmartNotebook),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.smart.teacher`
    pub const APPLICATION_VND_SMART_TEACHER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSmartTeacher),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.snesdev-page-table`
    pub const APPLICATION_VND_SNESDEV_PAGE_TABLE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSnesdevPageTable),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.software602.filler.form+xml`
    pub const APPLICATION_VND_SOFTWARE602_FILLER_FORM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSoftware602FillerForm),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.software602.filler.form-xml-zip`
    pub const APPLICATION_VND_SOFTWARE602_FILLER_FORM_XML_ZIP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSoftware602FillerFormXmlZip),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.solent.sdkm+xml`
    pub const APPLICATION_VND_SOLENT_SDKM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSolentSdkm),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.spotfire.dxp`
    pub const APPLICATION_VND_SPOTFIRE_DXP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSpotfireDxp),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.spotfire.sfs`
    pub const APPLICATION_VND_SPOTFIRE_SFS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSpotfireSfs),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sqlite3`
    pub const APPLICATION_VND_SQLITE3: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSqlite3),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sss-cod`
    pub const APPLICATION_VND_SSS_COD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSssCod),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sss-dtf`
    pub const APPLICATION_VND_SSS_DTF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSssDtf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.sss-ntf`
    pub const APPLICATION_VND_SSS_NTF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSssNtf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.stardivision.calc`
    pub const APPLICATION_VND_STARDIVISION_CALC: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStardivisionCalc),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.stardivision.chart`
    pub const APPLICATION_VND_STARDIVISION_CHART: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStardivisionChart),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.stardivision.draw`
    pub const APPLICATION_VND_STARDIVISION_DRAW: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStardivisionDraw),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.stardivision.impress`
    pub const APPLICATION_VND_STARDIVISION_IMPRESS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStardivisionImpress),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.stardivision.math`
    pub const APPLICATION_VND_STARDIVISION_MATH: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStardivisionMath),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.stardivision.writer`
    pub const APPLICATION_VND_STARDIVISION_WRITER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStardivisionWriter),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.stardivision.writer-global`
    pub const APPLICATION_VND_STARDIVISION_WRITER_GLOBAL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStardivisionWriterGlobal),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.stepmania.package`
    pub const APPLICATION_VND_STEPMANIA_PACKAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStepmaniaPackage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.stepmania.stepchart`
    pub const APPLICATION_VND_STEPMANIA_STEPCHART: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStepmaniaStepchart),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.street-stream`
    pub const APPLICATION_VND_STREET_STREAM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndStreetStream),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.wadl+xml`
    pub const APPLICATION_VND_SUN_WADL_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunWadl),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.sun.xml.calc`
    pub const APPLICATION_VND_SUN_XML_CALC: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlCalc),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.xml.calc.template`
    pub const APPLICATION_VND_SUN_XML_CALC_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlCalcTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.xml.draw`
    pub const APPLICATION_VND_SUN_XML_DRAW: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlDraw),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.xml.draw.template`
    pub const APPLICATION_VND_SUN_XML_DRAW_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlDrawTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.xml.impress`
    pub const APPLICATION_VND_SUN_XML_IMPRESS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlImpress),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.xml.impress.template`
    pub const APPLICATION_VND_SUN_XML_IMPRESS_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlImpressTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.xml.math`
    pub const APPLICATION_VND_SUN_XML_MATH: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlMath),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.xml.writer`
    pub const APPLICATION_VND_SUN_XML_WRITER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlWriter),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.xml.writer.global`
    pub const APPLICATION_VND_SUN_XML_WRITER_GLOBAL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlWriterGlobal),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sun.xml.writer.template`
    pub const APPLICATION_VND_SUN_XML_WRITER_TEMPLATE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSunXmlWriterTemplate),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sus-calendar`
    pub const APPLICATION_VND_SUS_CALENDAR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSusCalendar),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.svd`
    pub const APPLICATION_VND_SVD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSvd),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.swiftview-ics`
    pub const APPLICATION_VND_SWIFTVIEW_ICS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSwiftviewIcs),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.sycle+xml`
    pub const APPLICATION_VND_SYCLE_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSycle),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.syft+json`
    pub const APPLICATION_VND_SYFT_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSyft),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.symbian.install`
    pub const APPLICATION_VND_SYMBIAN_INSTALL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSymbianInstall),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.syncml+xml`
    pub const APPLICATION_VND_SYNCML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndSyncml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.syncml.dm+wbxml`
    pub const APPLICATION_VND_SYNCML_DM_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSyncmlDm),
            suffix: Some(crate::Name::Interned(super::Suffix::Wbxml)),
            parameters: &[],
        });

    /// `application/vnd.syncml.dm+xml`
    pub const APPLICATION_VND_SYNCML_DM_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSyncmlDm),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.syncml.dm.notification`
    pub const APPLICATION_VND_SYNCML_DM_NOTIFICATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSyncmlDmNotification),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.syncml.dmddf+wbxml`
    pub const APPLICATION_VND_SYNCML_DMDDF_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSyncmlDmddf),
            suffix: Some(crate::Name::Interned(super::Suffix::Wbxml)),
            parameters: &[],
        });

    /// `application/vnd.syncml.dmddf+xml`
    pub const APPLICATION_VND_SYNCML_DMDDF_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSyncmlDmddf),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.syncml.dmtnds+wbxml`
    pub const APPLICATION_VND_SYNCML_DMTNDS_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSyncmlDmtnds),
            suffix: Some(crate::Name::Interned(super::Suffix::Wbxml)),
            parameters: &[],
        });

    /// `application/vnd.syncml.dmtnds+xml`
    pub const APPLICATION_VND_SYNCML_DMTNDS_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSyncmlDmtnds),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.syncml.ds.notification`
    pub const APPLICATION_VND_SYNCML_DS_NOTIFICATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndSyncmlDsNotification),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.tableschema+json`
    pub const APPLICATION_VND_TABLESCHEMA_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndTableschema),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.tao.intent-module-archive`
    pub const APPLICATION_VND_TAO_INTENT_MODULE_ARCHIVE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndTaoIntentModuleArchive),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.tcpdump.pcap`
    pub const APPLICATION_VND_TCPDUMP_PCAP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndTcpdumpPcap),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.theqvd`
    pub const APPLICATION_VND_THEQVD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndTheqvd),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.think-cell.ppttc+json`
    pub const APPLICATION_VND_THINK_CELL_PPTTC_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndThinkCellPpttc),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.tmd.mediaflex.api+xml`
    pub const APPLICATION_VND_TMD_MEDIAFLEX_API_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndTmdMediaflexApi),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.tml`
    pub const APPLICATION_VND_TML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndTml),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.tmobile-livetv`
    pub const APPLICATION_VND_TMOBILE_LIVETV: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndTmobileLivetv),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.tri.onesource`
    pub const APPLICATION_VND_TRI_ONESOURCE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndTriOnesource),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.trid.tpt`
    pub const APPLICATION_VND_TRID_TPT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndTridTpt),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.triscape.mxs`
    pub const APPLICATION_VND_TRISCAPE_MXS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndTriscapeMxs),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.trueapp`
    pub const APPLICATION_VND_TRUEAPP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndTrueapp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.truedoc`
    pub const APPLICATION_VND_TRUEDOC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndTruedoc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.ubisoft.webplayer`
    pub const APPLICATION_VND_UBISOFT_WEBPLAYER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUbisoftWebplayer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ufdl`
    pub const APPLICATION_VND_UFDL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndUfdl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.uiq.theme`
    pub const APPLICATION_VND_UIQ_THEME: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndUiqTheme),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.umajin`
    pub const APPLICATION_VND_UMAJIN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndUmajin),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.unity`
    pub const APPLICATION_VND_UNITY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndUnity),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.uoml+xml`
    pub const APPLICATION_VND_UOML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndUoml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.uplanet.alert`
    pub const APPLICATION_VND_UPLANET_ALERT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetAlert),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.alert-wbxml`
    pub const APPLICATION_VND_UPLANET_ALERT_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetAlertWbxml),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.bearer-choice`
    pub const APPLICATION_VND_UPLANET_BEARER_CHOICE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetBearerChoice),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.bearer-choice-wbxml`
    pub const APPLICATION_VND_UPLANET_BEARER_CHOICE_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetBearerChoiceWbxml),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.cacheop`
    pub const APPLICATION_VND_UPLANET_CACHEOP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetCacheop),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.cacheop-wbxml`
    pub const APPLICATION_VND_UPLANET_CACHEOP_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetCacheopWbxml),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.channel`
    pub const APPLICATION_VND_UPLANET_CHANNEL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetChannel),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.channel-wbxml`
    pub const APPLICATION_VND_UPLANET_CHANNEL_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetChannelWbxml),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.list`
    pub const APPLICATION_VND_UPLANET_LIST: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetList),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.list-wbxml`
    pub const APPLICATION_VND_UPLANET_LIST_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetListWbxml),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.listcmd`
    pub const APPLICATION_VND_UPLANET_LISTCMD: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetListcmd),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.listcmd-wbxml`
    pub const APPLICATION_VND_UPLANET_LISTCMD_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetListcmdWbxml),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uplanet.signal`
    pub const APPLICATION_VND_UPLANET_SIGNAL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndUplanetSignal),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.uri-map`
    pub const APPLICATION_VND_URI_MAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndUriMap),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.valve.source.material`
    pub const APPLICATION_VND_VALVE_SOURCE_MATERIAL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndValveSourceMaterial),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.vcx`
    pub const APPLICATION_VND_VCX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndVcx),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.vd-study`
    pub const APPLICATION_VND_VD_STUDY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndVdStudy),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.vectorworks`
    pub const APPLICATION_VND_VECTORWORKS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndVectorworks),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.vel+json`
    pub const APPLICATION_VND_VEL_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndVel),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.verimatrix.vcas`
    pub const APPLICATION_VND_VERIMATRIX_VCAS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndVerimatrixVcas),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.veritone.aion+json`
    pub const APPLICATION_VND_VERITONE_AION_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndVeritoneAion),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vnd.veryant.thin`
    pub const APPLICATION_VND_VERYANT_THIN: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndVeryantThin),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.ves.encrypted`
    pub const APPLICATION_VND_VES_ENCRYPTED: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndVesEncrypted),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.vidsoft.vidconference`
    pub const APPLICATION_VND_VIDSOFT_VIDCONFERENCE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndVidsoftVidconference),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.visio`
    pub const APPLICATION_VND_VISIO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndVisio),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.visionary`
    pub const APPLICATION_VND_VISIONARY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndVisionary),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.vividence.scriptfile`
    pub const APPLICATION_VND_VIVIDENCE_SCRIPTFILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndVividenceScriptfile),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.vsf`
    pub const APPLICATION_VND_VSF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndVsf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wap.sic`
    pub const APPLICATION_VND_WAP_SIC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWapSic),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wap.slc`
    pub const APPLICATION_VND_WAP_SLC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWapSlc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wap.wbxml`
    pub const APPLICATION_VND_WAP_WBXML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWapWbxml),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wap.wmlc`
    pub const APPLICATION_VND_WAP_WMLC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWapWmlc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wap.wmlscriptc`
    pub const APPLICATION_VND_WAP_WMLSCRIPTC: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndWapWmlscriptc),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.webturbo`
    pub const APPLICATION_VND_WEBTURBO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWebturbo),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wfa.dpp`
    pub const APPLICATION_VND_WFA_DPP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWfaDpp),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wfa.p2p`
    pub const APPLICATION_VND_WFA_P2P: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWfaP2p),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wfa.wsc`
    pub const APPLICATION_VND_WFA_WSC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWfaWsc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.windows.devicepairing`
    pub const APPLICATION_VND_WINDOWS_DEVICEPAIRING: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndWindowsDevicepairing),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.wmc`
    pub const APPLICATION_VND_WMC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWmc),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wmf.bootstrap`
    pub const APPLICATION_VND_WMF_BOOTSTRAP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndWmfBootstrap),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.wolfram.mathematica`
    pub const APPLICATION_VND_WOLFRAM_MATHEMATICA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndWolframMathematica),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.wolfram.mathematica.package`
    pub const APPLICATION_VND_WOLFRAM_MATHEMATICA_PACKAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndWolframMathematicaPackage),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.wolfram.player`
    pub const APPLICATION_VND_WOLFRAM_PLAYER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndWolframPlayer),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.wordperfect`
    pub const APPLICATION_VND_WORDPERFECT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWordperfect),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wordperfect5.1`
    pub const APPLICATION_VND_WORDPERFECT5_1: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndWordperfect51),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.wqd`
    pub const APPLICATION_VND_WQD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWqd),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wrq-hp3000-labelled`
    pub const APPLICATION_VND_WRQ_HP3000_LABELLED: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndWrqHp3000Labelled),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.wt.stf`
    pub const APPLICATION_VND_WT_STF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWtStf),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.wv.csp+wbxml`
    pub const APPLICATION_VND_WV_CSP_WBXML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndWvCsp),
            suffix: Some(crate::Name::Interned(super::Suffix::Wbxml)),
            parameters: &[],
        });

    /// `application/vnd.wv.csp+xml`
    pub const APPLICATION_VND_WV_CSP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWvCsp),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.wv.ssp+xml`
    pub const APPLICATION_VND_WV_SSP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndWvSsp),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.xacml+json`
    pub const APPLICATION_VND_XACML_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndXacml),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/vnd.xara`
    pub const APPLICATION_VND_XARA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndXara),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.xfdl`
    pub const APPLICATION_VND_XFDL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndXfdl),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.xfdl.webform`
    pub const APPLICATION_VND_XFDL_WEBFORM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndXfdlWebform),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.xmi+xml`
    pub const APPLICATION_VND_XMI_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndXmi),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/vnd.xmpie.cpkg`
    pub const APPLICATION_VND_XMPIE_CPKG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndXmpieCpkg),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.xmpie.dpkg`
    pub const APPLICATION_VND_XMPIE_DPKG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndXmpieDpkg),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.xmpie.plan`
    pub const APPLICATION_VND_XMPIE_PLAN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndXmpiePlan),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.xmpie.ppkg`
    pub const APPLICATION_VND_XMPIE_PPKG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndXmpiePpkg),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.xmpie.xlim`
    pub const APPLICATION_VND_XMPIE_XLIM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndXmpieXlim),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.yamaha.hv-dic`
    pub const APPLICATION_VND_YAMAHA_HV_DIC: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaHvDic),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.yamaha.hv-script`
    pub const APPLICATION_VND_YAMAHA_HV_SCRIPT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaHvScript),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.yamaha.hv-voice`
    pub const APPLICATION_VND_YAMAHA_HV_VOICE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaHvVoice),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.yamaha.openscoreformat`
    pub const APPLICATION_VND_YAMAHA_OPENSCOREFORMAT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaOpenscoreformat),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.yamaha.openscoreformat.osfpvg+xml`
    pub const APPLICATION_VND_YAMAHA_OPENSCOREFORMAT_OSFPVG_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaOpenscoreformatOsfpvg),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/vnd.yamaha.remote-setup`
    pub const APPLICATION_VND_YAMAHA_REMOTE_SETUP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaRemoteSetup),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.yamaha.smaf-audio`
    pub const APPLICATION_VND_YAMAHA_SMAF_AUDIO: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaSmafAudio),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.yamaha.smaf-phrase`
    pub const APPLICATION_VND_YAMAHA_SMAF_PHRASE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaSmafPhrase),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.yamaha.through-ngn`
    pub const APPLICATION_VND_YAMAHA_THROUGH_NGN: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaThroughNgn),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.yamaha.tunnel-udpencap`
    pub const APPLICATION_VND_YAMAHA_TUNNEL_UDPENCAP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYamahaTunnelUdpencap),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.yaoweme`
    pub const APPLICATION_VND_YAOWEME: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndYaoweme),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.yellowriver-custom-menu`
    pub const APPLICATION_VND_YELLOWRIVER_CUSTOM_MENU: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndYellowriverCustomMenu),
            suffix: None,
            parameters: &[],
        });

    /// `application/vnd.zul`
    pub const APPLICATION_VND_ZUL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VndZul),
        suffix: None,
        parameters: &[],
    });

    /// `application/vnd.zzazz.deck+xml`
    pub const APPLICATION_VND_ZZAZZ_DECK_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VndZzazzDeck),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/voicexml+xml`
    pub const APPLICATION_VOICEXML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Voicexml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/voucher-cms+json`
    pub const APPLICATION_VOUCHER_CMS_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::VoucherCms),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/vq-rtcpxr`
    pub const APPLICATION_VQ_RTCPXR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::VqRtcpxr),
        suffix: None,
        parameters: &[],
    });

    /// `application/wasm`
    pub const APPLICATION_WASM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Wasm),
        suffix: None,
        parameters: &[],
    });

    /// `application/watcherinfo+xml`
    pub const APPLICATION_WATCHERINFO_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Watcherinfo),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/webpush-options+json`
    pub const APPLICATION_WEBPUSH_OPTIONS_JSON: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::WebpushOptions),
            suffix: Some(crate::Name::Interned(super::Suffix::Json)),
            parameters: &[],
        });

    /// `application/whoispp-query`
    pub const APPLICATION_WHOISPP_QUERY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::WhoisppQuery),
        suffix: None,
        parameters: &[],
    });

    /// `application/whoispp-response`
    pub const APPLICATION_WHOISPP_RESPONSE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::WhoisppResponse),
            suffix: None,
            parameters: &[],
        });

    /// `application/widget`
    pub const APPLICATION_WIDGET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Widget),
        suffix: None,
        parameters: &[],
    });

    /// `application/wita`
    pub const APPLICATION_WITA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Wita),
        suffix: None,
        parameters: &[],
    });

    /// `application/wordperfect5.1`
    pub const APPLICATION_WORDPERFECT5_1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Wordperfect51),
        suffix: None,
        parameters: &[],
    });

    /// `application/wsdl+xml`
    pub const APPLICATION_WSDL_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Wsdl),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/wspolicy+xml`
    pub const APPLICATION_WSPOLICY_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Wspolicy),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/x-123`
    pub const APPLICATION_X_123: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::X123),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-7z-compressed`
    pub const APPLICATION_X_7Z_COMPRESSED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::X7zCompressed),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-abiword`
    pub const APPLICATION_X_ABIWORD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XAbiword),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-apple-diskimage`
    pub const APPLICATION_X_APPLE_DISKIMAGE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XAppleDiskimage),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-bcpio`
    pub const APPLICATION_X_BCPIO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XBcpio),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-bittorrent`
    pub const APPLICATION_X_BITTORRENT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XBittorrent),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-cdf`
    pub const APPLICATION_X_CDF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XCdf),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-cdlink`
    pub const APPLICATION_X_CDLINK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XCdlink),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-comsol`
    pub const APPLICATION_X_COMSOL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XComsol),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-cpio`
    pub const APPLICATION_X_CPIO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XCpio),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-csh`
    pub const APPLICATION_X_CSH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XCsh),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-director`
    pub const APPLICATION_X_DIRECTOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XDirector),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-doom`
    pub const APPLICATION_X_DOOM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XDoom),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-dvi`
    pub const APPLICATION_X_DVI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XDvi),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-font`
    pub const APPLICATION_X_FONT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XFont),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-font-pcf`
    pub const APPLICATION_X_FONT_PCF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XFontPcf),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-freemind`
    pub const APPLICATION_X_FREEMIND: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XFreemind),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-ganttproject`
    pub const APPLICATION_X_GANTTPROJECT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XGanttproject),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-gnumeric`
    pub const APPLICATION_X_GNUMERIC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XGnumeric),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-go-sgf`
    pub const APPLICATION_X_GO_SGF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XGoSgf),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-graphing-calculator`
    pub const APPLICATION_X_GRAPHING_CALCULATOR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XGraphingCalculator),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-gtar`
    pub const APPLICATION_X_GTAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XGtar),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-gtar-compressed`
    pub const APPLICATION_X_GTAR_COMPRESSED: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XGtarCompressed),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-hdf`
    pub const APPLICATION_X_HDF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XHdf),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-hwp`
    pub const APPLICATION_X_HWP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XHwp),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-ica`
    pub const APPLICATION_X_ICA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XIca),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-info`
    pub const APPLICATION_X_INFO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XInfo),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-internet-signup`
    pub const APPLICATION_X_INTERNET_SIGNUP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XInternetSignup),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-iphone`
    pub const APPLICATION_X_IPHONE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XIphone),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-iso9660-image`
    pub const APPLICATION_X_ISO9660_IMAGE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XIso9660Image),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-java-jnlp-file`
    pub const APPLICATION_X_JAVA_JNLP_FILE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XJavaJnlpFile),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-jmol`
    pub const APPLICATION_X_JMOL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XJmol),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-killustrator`
    pub const APPLICATION_X_KILLUSTRATOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XKillustrator),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-latex`
    pub const APPLICATION_X_LATEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XLatex),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-lha`
    pub const APPLICATION_X_LHA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XLha),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-lyx`
    pub const APPLICATION_X_LYX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XLyx),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-lzh`
    pub const APPLICATION_X_LZH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XLzh),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-lzx`
    pub const APPLICATION_X_LZX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XLzx),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-maker`
    pub const APPLICATION_X_MAKER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XMaker),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-ms-wmd`
    pub const APPLICATION_X_MS_WMD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XMsWmd),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-ms-wmz`
    pub const APPLICATION_X_MS_WMZ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XMsWmz),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-msdos-program`
    pub const APPLICATION_X_MSDOS_PROGRAM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XMsdosProgram),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-msi`
    pub const APPLICATION_X_MSI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XMsi),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-netcdf`
    pub const APPLICATION_X_NETCDF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XNetcdf),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-ns-proxy-autoconfig`
    pub const APPLICATION_X_NS_PROXY_AUTOCONFIG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XNsProxyAutoconfig),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-nwc`
    pub const APPLICATION_X_NWC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XNwc),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-object`
    pub const APPLICATION_X_OBJECT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XObject),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-oz-application`
    pub const APPLICATION_X_OZ_APPLICATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XOzApplication),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-pkcs7-certreqresp`
    pub const APPLICATION_X_PKCS7_CERTREQRESP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XPkcs7Certreqresp),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-python-code`
    pub const APPLICATION_X_PYTHON_CODE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XPythonCode),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-qgis`
    pub const APPLICATION_X_QGIS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XQgis),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-quicktimeplayer`
    pub const APPLICATION_X_QUICKTIMEPLAYER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XQuicktimeplayer),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-rdp`
    pub const APPLICATION_X_RDP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XRdp),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-redhat-package-manager`
    pub const APPLICATION_X_REDHAT_PACKAGE_MANAGER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XRedhatPackageManager),
            suffix: None,
            parameters: &[],
        });

    /// `application/x-rss+xml`
    pub const APPLICATION_X_RSS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XRss),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/x-ruby`
    pub const APPLICATION_X_RUBY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XRuby),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-scilab`
    pub const APPLICATION_X_SCILAB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XScilab),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-scilab-xcos`
    pub const APPLICATION_X_SCILAB_XCOS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XScilabXcos),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-sh`
    pub const APPLICATION_X_SH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XSh),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-shar`
    pub const APPLICATION_X_SHAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XShar),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-silverlight`
    pub const APPLICATION_X_SILVERLIGHT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XSilverlight),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-stuffit`
    pub const APPLICATION_X_STUFFIT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XStuffit),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-sv4cpio`
    pub const APPLICATION_X_SV4CPIO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XSv4cpio),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-sv4crc`
    pub const APPLICATION_X_SV4CRC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XSv4crc),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-tar`
    pub const APPLICATION_X_TAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XTar),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-tcl`
    pub const APPLICATION_X_TCL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XTcl),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-tex-gf`
    pub const APPLICATION_X_TEX_GF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XTexGf),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-tex-pk`
    pub const APPLICATION_X_TEX_PK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XTexPk),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-texinfo`
    pub const APPLICATION_X_TEXINFO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XTexinfo),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-trash`
    pub const APPLICATION_X_TRASH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XTrash),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-troff-man`
    pub const APPLICATION_X_TROFF_MAN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XTroffMan),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-troff-me`
    pub const APPLICATION_X_TROFF_ME: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XTroffMe),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-troff-ms`
    pub const APPLICATION_X_TROFF_MS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XTroffMs),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-ustar`
    pub const APPLICATION_X_USTAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XUstar),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-wais-source`
    pub const APPLICATION_X_WAIS_SOURCE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XWaisSource),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-wingz`
    pub const APPLICATION_X_WINGZ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XWingz),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-x509-ca-cert`
    pub const APPLICATION_X_X509_CA_CERT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XX509CaCert),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-xfig`
    pub const APPLICATION_X_XFIG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XXfig),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-xpinstall`
    pub const APPLICATION_X_XPINSTALL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XXpinstall),
        suffix: None,
        parameters: &[],
    });

    /// `application/x-xz`
    pub const APPLICATION_X_XZ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XXz),
        suffix: None,
        parameters: &[],
    });

    /// `application/x400-bp`
    pub const APPLICATION_X400_BP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::X400Bp),
        suffix: None,
        parameters: &[],
    });

    /// `application/xacml+xml`
    pub const APPLICATION_XACML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xacml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xcap-att+xml`
    pub const APPLICATION_XCAP_ATT_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XcapAtt),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xcap-caps+xml`
    pub const APPLICATION_XCAP_CAPS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XcapCaps),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xcap-diff+xml`
    pub const APPLICATION_XCAP_DIFF_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XcapDiff),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xcap-el+xml`
    pub const APPLICATION_XCAP_EL_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XcapEl),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xcap-error+xml`
    pub const APPLICATION_XCAP_ERROR_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XcapError),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xcap-ns+xml`
    pub const APPLICATION_XCAP_NS_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XcapNs),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xcon-conference-info+xml`
    pub const APPLICATION_XCON_CONFERENCE_INFO_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XconConferenceInfo),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/xcon-conference-info-diff+xml`
    pub const APPLICATION_XCON_CONFERENCE_INFO_DIFF_XML: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XconConferenceInfoDiff),
            suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
            parameters: &[],
        });

    /// `application/xenc+xml`
    pub const APPLICATION_XENC_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xenc),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xhtml+xml`
    pub const APPLICATION_XHTML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xhtml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xliff+xml`
    pub const APPLICATION_XLIFF_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xliff),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xml`
    pub const APPLICATION_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xml),
        suffix: None,
        parameters: &[],
    });

    /// `application/xml-dtd`
    pub const APPLICATION_XML_DTD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XmlDtd),
        suffix: None,
        parameters: &[],
    });

    /// `application/xml-external-parsed-entity`
    pub const APPLICATION_XML_EXTERNAL_PARSED_ENTITY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Application),
            subtype: crate::Name::Interned(super::Subtype::XmlExternalParsedEntity),
            suffix: None,
            parameters: &[],
        });

    /// `application/xml-patch+xml`
    pub const APPLICATION_XML_PATCH_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::XmlPatch),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xmpp+xml`
    pub const APPLICATION_XMPP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xmpp),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xop+xml`
    pub const APPLICATION_XOP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xop),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xslt+xml`
    pub const APPLICATION_XSLT_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xslt),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xspf+xml`
    pub const APPLICATION_XSPF_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xspf),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/xv+xml`
    pub const APPLICATION_XV_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Xv),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/yang`
    pub const APPLICATION_YANG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Yang),
        suffix: None,
        parameters: &[],
    });

    /// `application/yang-data+json`
    pub const APPLICATION_YANG_DATA_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::YangData),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/yang-data+xml`
    pub const APPLICATION_YANG_DATA_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::YangData),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/yang-patch+json`
    pub const APPLICATION_YANG_PATCH_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::YangPatch),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `application/yang-patch+xml`
    pub const APPLICATION_YANG_PATCH_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::YangPatch),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/yin+xml`
    pub const APPLICATION_YIN_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Yin),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `application/zip`
    pub const APPLICATION_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Zip),
        suffix: None,
        parameters: &[],
    });

    /// `application/zlib`
    pub const APPLICATION_ZLIB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Zlib),
        suffix: None,
        parameters: &[],
    });

    /// `application/zstd`
    pub const APPLICATION_ZSTD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Application),
        subtype: crate::Name::Interned(super::Subtype::Zstd),
        suffix: None,
        parameters: &[],
    });

    /// `audio/aac`
    pub const AUDIO_AAC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Aac),
        suffix: None,
        parameters: &[],
    });

    /// `audio/ac3`
    pub const AUDIO_AC3: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Ac3),
        suffix: None,
        parameters: &[],
    });

    /// `audio/AMR`
    pub const AUDIO_AMR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Amr),
        suffix: None,
        parameters: &[],
    });

    /// `audio/AMR-WB`
    pub const AUDIO_AMR_WB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::AmrWb),
        suffix: None,
        parameters: &[],
    });

    /// `audio/annodex`
    pub const AUDIO_ANNODEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Annodex),
        suffix: None,
        parameters: &[],
    });

    /// `audio/aptx`
    pub const AUDIO_APTX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Aptx),
        suffix: None,
        parameters: &[],
    });

    /// `audio/asc`
    pub const AUDIO_ASC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Asc),
        suffix: None,
        parameters: &[],
    });

    /// `audio/ATRAC-ADVANCED-LOSSLESS`
    pub const AUDIO_ATRAC_ADVANCED_LOSSLESS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Audio),
            subtype: crate::Name::Interned(super::Subtype::AtracAdvancedLossless),
            suffix: None,
            parameters: &[],
        });

    /// `audio/ATRAC-X`
    pub const AUDIO_ATRAC_X: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::AtracX),
        suffix: None,
        parameters: &[],
    });

    /// `audio/ATRAC3`
    pub const AUDIO_ATRAC3: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Atrac3),
        suffix: None,
        parameters: &[],
    });

    /// `audio/basic`
    pub const AUDIO_BASIC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Basic),
        suffix: None,
        parameters: &[],
    });

    /// `audio/BV16`
    pub const AUDIO_BV16: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Bv16),
        suffix: None,
        parameters: &[],
    });

    /// `audio/BV32`
    pub const AUDIO_BV32: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Bv32),
        suffix: None,
        parameters: &[],
    });

    /// `audio/clearmode`
    pub const AUDIO_CLEARMODE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Clearmode),
        suffix: None,
        parameters: &[],
    });

    /// `audio/CN`
    pub const AUDIO_CN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Cn),
        suffix: None,
        parameters: &[],
    });

    /// `audio/csound`
    pub const AUDIO_CSOUND: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Csound),
        suffix: None,
        parameters: &[],
    });

    /// `audio/DAT12`
    pub const AUDIO_DAT12: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Dat12),
        suffix: None,
        parameters: &[],
    });

    /// `audio/dls`
    pub const AUDIO_DLS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Dls),
        suffix: None,
        parameters: &[],
    });

    /// `audio/dsr-es201108`
    pub const AUDIO_DSR_ES201108: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::DsrEs201108),
        suffix: None,
        parameters: &[],
    });

    /// `audio/dsr-es202050`
    pub const AUDIO_DSR_ES202050: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::DsrEs202050),
        suffix: None,
        parameters: &[],
    });

    /// `audio/dsr-es202211`
    pub const AUDIO_DSR_ES202211: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::DsrEs202211),
        suffix: None,
        parameters: &[],
    });

    /// `audio/dsr-es202212`
    pub const AUDIO_DSR_ES202212: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::DsrEs202212),
        suffix: None,
        parameters: &[],
    });

    /// `audio/DV`
    pub const AUDIO_DV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Dv),
        suffix: None,
        parameters: &[],
    });

    /// `audio/DVI4`
    pub const AUDIO_DVI4: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Dvi4),
        suffix: None,
        parameters: &[],
    });

    /// `audio/eac3`
    pub const AUDIO_EAC3: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Eac3),
        suffix: None,
        parameters: &[],
    });

    /// `audio/encaprtp`
    pub const AUDIO_ENCAPRTP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Encaprtp),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRC`
    pub const AUDIO_EVRC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrc),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRC-QCP`
    pub const AUDIO_EVRC_QCP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::EvrcQcp),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRC0`
    pub const AUDIO_EVRC0: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrc0),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRC1`
    pub const AUDIO_EVRC1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrc1),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRCB`
    pub const AUDIO_EVRCB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrcb),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRCB0`
    pub const AUDIO_EVRCB0: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrcb0),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRCB1`
    pub const AUDIO_EVRCB1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrcb1),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRCNW`
    pub const AUDIO_EVRCNW: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrcnw),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRCNW0`
    pub const AUDIO_EVRCNW0: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrcnw0),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRCNW1`
    pub const AUDIO_EVRCNW1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrcnw1),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRCWB`
    pub const AUDIO_EVRCWB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrcwb),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRCWB0`
    pub const AUDIO_EVRCWB0: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrcwb0),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVRCWB1`
    pub const AUDIO_EVRCWB1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evrcwb1),
        suffix: None,
        parameters: &[],
    });

    /// `audio/EVS`
    pub const AUDIO_EVS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Evs),
        suffix: None,
        parameters: &[],
    });

    /// `audio/example`
    pub const AUDIO_EXAMPLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Example),
        suffix: None,
        parameters: &[],
    });

    /// `audio/flac`
    pub const AUDIO_FLAC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Flac),
        suffix: None,
        parameters: &[],
    });

    /// `audio/flexfec`
    pub const AUDIO_FLEXFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Flexfec),
        suffix: None,
        parameters: &[],
    });

    /// `audio/fwdred`
    pub const AUDIO_FWDRED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Fwdred),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G711-0`
    pub const AUDIO_G711_0: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G7110),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G719`
    pub const AUDIO_G719: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G719),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G722`
    pub const AUDIO_G722: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G722),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G7221`
    pub const AUDIO_G7221: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G7221),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G723`
    pub const AUDIO_G723: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G723),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G726-16`
    pub const AUDIO_G726_16: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G72616),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G726-24`
    pub const AUDIO_G726_24: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G72624),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G726-32`
    pub const AUDIO_G726_32: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G72632),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G726-40`
    pub const AUDIO_G726_40: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G72640),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G728`
    pub const AUDIO_G728: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G728),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G729`
    pub const AUDIO_G729: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G729),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G7291`
    pub const AUDIO_G7291: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G7291),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G729D`
    pub const AUDIO_G729D: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G729d),
        suffix: None,
        parameters: &[],
    });

    /// `audio/G729E`
    pub const AUDIO_G729E: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::G729e),
        suffix: None,
        parameters: &[],
    });

    /// `audio/GSM`
    pub const AUDIO_GSM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Gsm),
        suffix: None,
        parameters: &[],
    });

    /// `audio/GSM-EFR`
    pub const AUDIO_GSM_EFR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::GsmEfr),
        suffix: None,
        parameters: &[],
    });

    /// `audio/GSM-HR-08`
    pub const AUDIO_GSM_HR_08: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::GsmHr08),
        suffix: None,
        parameters: &[],
    });

    /// `audio/iLBC`
    pub const AUDIO_I_LBC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::ILbc),
        suffix: None,
        parameters: &[],
    });

    /// `audio/ip-mr_v2.5`
    pub const AUDIO_IP_MR_V2_5: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::IpMrV25),
        suffix: None,
        parameters: &[],
    });

    /// `audio/L16`
    pub const AUDIO_L16: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::L16),
        suffix: None,
        parameters: &[],
    });

    /// `audio/L20`
    pub const AUDIO_L20: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::L20),
        suffix: None,
        parameters: &[],
    });

    /// `audio/L24`
    pub const AUDIO_L24: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::L24),
        suffix: None,
        parameters: &[],
    });

    /// `audio/L8`
    pub const AUDIO_L8: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::L8),
        suffix: None,
        parameters: &[],
    });

    /// `audio/LPC`
    pub const AUDIO_LPC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Lpc),
        suffix: None,
        parameters: &[],
    });

    /// `audio/MELP`
    pub const AUDIO_MELP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Melp),
        suffix: None,
        parameters: &[],
    });

    /// `audio/MELP1200`
    pub const AUDIO_MELP1200: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Melp1200),
        suffix: None,
        parameters: &[],
    });

    /// `audio/MELP2400`
    pub const AUDIO_MELP2400: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Melp2400),
        suffix: None,
        parameters: &[],
    });

    /// `audio/MELP600`
    pub const AUDIO_MELP600: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Melp600),
        suffix: None,
        parameters: &[],
    });

    /// `audio/mhas`
    pub const AUDIO_MHAS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Mhas),
        suffix: None,
        parameters: &[],
    });

    /// `audio/mobile-xmf`
    pub const AUDIO_MOBILE_XMF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::MobileXmf),
        suffix: None,
        parameters: &[],
    });

    /// `audio/mp4`
    pub const AUDIO_MP4: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Mp4),
        suffix: None,
        parameters: &[],
    });

    /// `audio/MP4A-LATM`
    pub const AUDIO_MP4A_LATM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Mp4aLatm),
        suffix: None,
        parameters: &[],
    });

    /// `audio/MPA`
    pub const AUDIO_MPA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Mpa),
        suffix: None,
        parameters: &[],
    });

    /// `audio/mpa-robust`
    pub const AUDIO_MPA_ROBUST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::MpaRobust),
        suffix: None,
        parameters: &[],
    });

    /// `audio/mpeg`
    pub const AUDIO_MPEG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Mpeg),
        suffix: None,
        parameters: &[],
    });

    /// `audio/mpeg4-generic`
    pub const AUDIO_MPEG4_GENERIC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Mpeg4Generic),
        suffix: None,
        parameters: &[],
    });

    /// `audio/mpegurl`
    pub const AUDIO_MPEGURL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Mpegurl),
        suffix: None,
        parameters: &[],
    });

    /// `audio/ogg`
    pub const AUDIO_OGG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Ogg),
        suffix: None,
        parameters: &[],
    });

    /// `audio/opus`
    pub const AUDIO_OPUS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Opus),
        suffix: None,
        parameters: &[],
    });

    /// `audio/parityfec`
    pub const AUDIO_PARITYFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Parityfec),
        suffix: None,
        parameters: &[],
    });

    /// `audio/PCMA`
    pub const AUDIO_PCMA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Pcma),
        suffix: None,
        parameters: &[],
    });

    /// `audio/PCMA-WB`
    pub const AUDIO_PCMA_WB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::PcmaWb),
        suffix: None,
        parameters: &[],
    });

    /// `audio/PCMU`
    pub const AUDIO_PCMU: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Pcmu),
        suffix: None,
        parameters: &[],
    });

    /// `audio/PCMU-WB`
    pub const AUDIO_PCMU_WB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::PcmuWb),
        suffix: None,
        parameters: &[],
    });

    /// `audio/prs.sid`
    pub const AUDIO_PRS_SID: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::PrsSid),
        suffix: None,
        parameters: &[],
    });

    /// `audio/QCELP`
    pub const AUDIO_QCELP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Qcelp),
        suffix: None,
        parameters: &[],
    });

    /// `audio/raptorfec`
    pub const AUDIO_RAPTORFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Raptorfec),
        suffix: None,
        parameters: &[],
    });

    /// `audio/RED`
    pub const AUDIO_RED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Red),
        suffix: None,
        parameters: &[],
    });

    /// `audio/rtp-enc-aescm128`
    pub const AUDIO_RTP_ENC_AESCM128: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::RtpEncAescm128),
        suffix: None,
        parameters: &[],
    });

    /// `audio/rtp-midi`
    pub const AUDIO_RTP_MIDI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::RtpMidi),
        suffix: None,
        parameters: &[],
    });

    /// `audio/rtploopback`
    pub const AUDIO_RTPLOOPBACK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Rtploopback),
        suffix: None,
        parameters: &[],
    });

    /// `audio/rtx`
    pub const AUDIO_RTX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Rtx),
        suffix: None,
        parameters: &[],
    });

    /// `audio/scip`
    pub const AUDIO_SCIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Scip),
        suffix: None,
        parameters: &[],
    });

    /// `audio/SMV`
    pub const AUDIO_SMV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Smv),
        suffix: None,
        parameters: &[],
    });

    /// `audio/SMV-QCP`
    pub const AUDIO_SMV_QCP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::SmvQcp),
        suffix: None,
        parameters: &[],
    });

    /// `audio/SMV0`
    pub const AUDIO_SMV0: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Smv0),
        suffix: None,
        parameters: &[],
    });

    /// `audio/sofa`
    pub const AUDIO_SOFA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Sofa),
        suffix: None,
        parameters: &[],
    });

    /// `audio/sp-midi`
    pub const AUDIO_SP_MIDI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::SpMidi),
        suffix: None,
        parameters: &[],
    });

    /// `audio/speex`
    pub const AUDIO_SPEEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Speex),
        suffix: None,
        parameters: &[],
    });

    /// `audio/t140c`
    pub const AUDIO_T140C: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::T140c),
        suffix: None,
        parameters: &[],
    });

    /// `audio/t38`
    pub const AUDIO_T38: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::T38),
        suffix: None,
        parameters: &[],
    });

    /// `audio/telephone-event`
    pub const AUDIO_TELEPHONE_EVENT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::TelephoneEvent),
        suffix: None,
        parameters: &[],
    });

    /// `audio/TETRA_ACELP`
    pub const AUDIO_TETRA_ACELP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::TetraAcelp),
        suffix: None,
        parameters: &[],
    });

    /// `audio/TETRA_ACELP_BB`
    pub const AUDIO_TETRA_ACELP_BB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::TetraAcelpBb),
        suffix: None,
        parameters: &[],
    });

    /// `audio/tone`
    pub const AUDIO_TONE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Tone),
        suffix: None,
        parameters: &[],
    });

    /// `audio/TSVCIS`
    pub const AUDIO_TSVCIS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Tsvcis),
        suffix: None,
        parameters: &[],
    });

    /// `audio/UEMCLIP`
    pub const AUDIO_UEMCLIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Uemclip),
        suffix: None,
        parameters: &[],
    });

    /// `audio/ulpfec`
    pub const AUDIO_ULPFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Ulpfec),
        suffix: None,
        parameters: &[],
    });

    /// `audio/usac`
    pub const AUDIO_USAC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Usac),
        suffix: None,
        parameters: &[],
    });

    /// `audio/VDVI`
    pub const AUDIO_VDVI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Vdvi),
        suffix: None,
        parameters: &[],
    });

    /// `audio/VMR-WB`
    pub const AUDIO_VMR_WB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VmrWb),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.3gpp.iufp`
    pub const AUDIO_VND_3GPP_IUFP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Vnd3gppIufp),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.4SB`
    pub const AUDIO_VND_4SB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Vnd4sb),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.audiokoz`
    pub const AUDIO_VND_AUDIOKOZ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndAudiokoz),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.CELP`
    pub const AUDIO_VND_CELP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndCelp),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.cisco.nse`
    pub const AUDIO_VND_CISCO_NSE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndCiscoNse),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.cmles.radio-events`
    pub const AUDIO_VND_CMLES_RADIO_EVENTS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Audio),
            subtype: crate::Name::Interned(super::Subtype::VndCmlesRadioEvents),
            suffix: None,
            parameters: &[],
        });

    /// `audio/vnd.cns.anp1`
    pub const AUDIO_VND_CNS_ANP1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndCnsAnp1),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.cns.inf1`
    pub const AUDIO_VND_CNS_INF1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndCnsInf1),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dece.audio`
    pub const AUDIO_VND_DECE_AUDIO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDeceAudio),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.digital-winds`
    pub const AUDIO_VND_DIGITAL_WINDS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDigitalWinds),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dlna.adts`
    pub const AUDIO_VND_DLNA_ADTS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDlnaAdts),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dolby.heaac.1`
    pub const AUDIO_VND_DOLBY_HEAAC_1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDolbyHeaac1),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dolby.heaac.2`
    pub const AUDIO_VND_DOLBY_HEAAC_2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDolbyHeaac2),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dolby.mlp`
    pub const AUDIO_VND_DOLBY_MLP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDolbyMlp),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dolby.mps`
    pub const AUDIO_VND_DOLBY_MPS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDolbyMps),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dolby.pl2`
    pub const AUDIO_VND_DOLBY_PL2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDolbyPl2),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dolby.pl2x`
    pub const AUDIO_VND_DOLBY_PL2X: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDolbyPl2x),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dolby.pl2z`
    pub const AUDIO_VND_DOLBY_PL2Z: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDolbyPl2z),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dolby.pulse.1`
    pub const AUDIO_VND_DOLBY_PULSE_1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDolbyPulse1),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dra`
    pub const AUDIO_VND_DRA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDra),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dts`
    pub const AUDIO_VND_DTS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDts),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dts.hd`
    pub const AUDIO_VND_DTS_HD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDtsHd),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dts.uhd`
    pub const AUDIO_VND_DTS_UHD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDtsUhd),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.dvb.file`
    pub const AUDIO_VND_DVB_FILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndDvbFile),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.everad.plj`
    pub const AUDIO_VND_EVERAD_PLJ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndEveradPlj),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.hns.audio`
    pub const AUDIO_VND_HNS_AUDIO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndHnsAudio),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.lucent.voice`
    pub const AUDIO_VND_LUCENT_VOICE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndLucentVoice),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.ms-playready.media.pya`
    pub const AUDIO_VND_MS_PLAYREADY_MEDIA_PYA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Audio),
            subtype: crate::Name::Interned(super::Subtype::VndMsPlayreadyMediaPya),
            suffix: None,
            parameters: &[],
        });

    /// `audio/vnd.nokia.mobile-xmf`
    pub const AUDIO_VND_NOKIA_MOBILE_XMF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndNokiaMobileXmf),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.nortel.vbk`
    pub const AUDIO_VND_NORTEL_VBK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndNortelVbk),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.nuera.ecelp4800`
    pub const AUDIO_VND_NUERA_ECELP4800: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndNueraEcelp4800),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.nuera.ecelp7470`
    pub const AUDIO_VND_NUERA_ECELP7470: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndNueraEcelp7470),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.nuera.ecelp9600`
    pub const AUDIO_VND_NUERA_ECELP9600: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndNueraEcelp9600),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.octel.sbc`
    pub const AUDIO_VND_OCTEL_SBC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndOctelSbc),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.presonus.multitrack`
    pub const AUDIO_VND_PRESONUS_MULTITRACK: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Audio),
            subtype: crate::Name::Interned(super::Subtype::VndPresonusMultitrack),
            suffix: None,
            parameters: &[],
        });

    /// `audio/vnd.rhetorex.32kadpcm`
    pub const AUDIO_VND_RHETOREX_32KADPCM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndRhetorex32kadpcm),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.rip`
    pub const AUDIO_VND_RIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndRip),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vnd.sealedmedia.softseal.mpeg`
    pub const AUDIO_VND_SEALEDMEDIA_SOFTSEAL_MPEG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Audio),
            subtype: crate::Name::Interned(super::Subtype::VndSealedmediaSoftsealMpeg),
            suffix: None,
            parameters: &[],
        });

    /// `audio/vnd.vmx.cvsd`
    pub const AUDIO_VND_VMX_CVSD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VndVmxCvsd),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vorbis`
    pub const AUDIO_VORBIS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::Vorbis),
        suffix: None,
        parameters: &[],
    });

    /// `audio/vorbis-config`
    pub const AUDIO_VORBIS_CONFIG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::VorbisConfig),
        suffix: None,
        parameters: &[],
    });

    /// `audio/x-aiff`
    pub const AUDIO_X_AIFF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::XAiff),
        suffix: None,
        parameters: &[],
    });

    /// `audio/x-gsm`
    pub const AUDIO_X_GSM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::XGsm),
        suffix: None,
        parameters: &[],
    });

    /// `audio/x-ms-wax`
    pub const AUDIO_X_MS_WAX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::XMsWax),
        suffix: None,
        parameters: &[],
    });

    /// `audio/x-ms-wma`
    pub const AUDIO_X_MS_WMA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::XMsWma),
        suffix: None,
        parameters: &[],
    });

    /// `audio/x-pn-realaudio`
    pub const AUDIO_X_PN_REALAUDIO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::XPnRealaudio),
        suffix: None,
        parameters: &[],
    });

    /// `audio/x-scpls`
    pub const AUDIO_X_SCPLS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::XScpls),
        suffix: None,
        parameters: &[],
    });

    /// `audio/x-sd2`
    pub const AUDIO_X_SD2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::XSd2),
        suffix: None,
        parameters: &[],
    });

    /// `audio/x-wav`
    pub const AUDIO_X_WAV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Audio),
        subtype: crate::Name::Interned(super::Subtype::XWav),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-alchemy`
    pub const CHEMICAL_X_ALCHEMY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XAlchemy),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-cache`
    pub const CHEMICAL_X_CACHE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCache),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-cache-csf`
    pub const CHEMICAL_X_CACHE_CSF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCacheCsf),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-cactvs-binary`
    pub const CHEMICAL_X_CACTVS_BINARY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCactvsBinary),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-cdx`
    pub const CHEMICAL_X_CDX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCdx),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-cerius`
    pub const CHEMICAL_X_CERIUS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCerius),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-chem3d`
    pub const CHEMICAL_X_CHEM3D: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XChem3d),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-chemdraw`
    pub const CHEMICAL_X_CHEMDRAW: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XChemdraw),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-cif`
    pub const CHEMICAL_X_CIF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCif),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-cmdf`
    pub const CHEMICAL_X_CMDF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCmdf),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-cml`
    pub const CHEMICAL_X_CML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCml),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-compass`
    pub const CHEMICAL_X_COMPASS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCompass),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-crossfire`
    pub const CHEMICAL_X_CROSSFIRE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCrossfire),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-csml`
    pub const CHEMICAL_X_CSML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCsml),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-ctx`
    pub const CHEMICAL_X_CTX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCtx),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-cxf`
    pub const CHEMICAL_X_CXF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XCxf),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-embl-dl-nucleotide`
    pub const CHEMICAL_X_EMBL_DL_NUCLEOTIDE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Chemical),
            subtype: crate::Name::Interned(super::Subtype::XEmblDlNucleotide),
            suffix: None,
            parameters: &[],
        });

    /// `chemical/x-galactic-spc`
    pub const CHEMICAL_X_GALACTIC_SPC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XGalacticSpc),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-gamess-input`
    pub const CHEMICAL_X_GAMESS_INPUT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XGamessInput),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-gaussian-checkpoint`
    pub const CHEMICAL_X_GAUSSIAN_CHECKPOINT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Chemical),
            subtype: crate::Name::Interned(super::Subtype::XGaussianCheckpoint),
            suffix: None,
            parameters: &[],
        });

    /// `chemical/x-gaussian-cube`
    pub const CHEMICAL_X_GAUSSIAN_CUBE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XGaussianCube),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-gaussian-input`
    pub const CHEMICAL_X_GAUSSIAN_INPUT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XGaussianInput),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-gaussian-log`
    pub const CHEMICAL_X_GAUSSIAN_LOG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XGaussianLog),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-gcg8-sequence`
    pub const CHEMICAL_X_GCG8_SEQUENCE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XGcg8Sequence),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-genbank`
    pub const CHEMICAL_X_GENBANK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XGenbank),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-hin`
    pub const CHEMICAL_X_HIN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XHin),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-isostar`
    pub const CHEMICAL_X_ISOSTAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XIsostar),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-jcamp-dx`
    pub const CHEMICAL_X_JCAMP_DX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XJcampDx),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-kinemage`
    pub const CHEMICAL_X_KINEMAGE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XKinemage),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-macmolecule`
    pub const CHEMICAL_X_MACMOLECULE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMacmolecule),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-macromodel-input`
    pub const CHEMICAL_X_MACROMODEL_INPUT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMacromodelInput),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mdl-molfile`
    pub const CHEMICAL_X_MDL_MOLFILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMdlMolfile),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mdl-rdfile`
    pub const CHEMICAL_X_MDL_RDFILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMdlRdfile),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mdl-rxnfile`
    pub const CHEMICAL_X_MDL_RXNFILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMdlRxnfile),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mdl-sdfile`
    pub const CHEMICAL_X_MDL_SDFILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMdlSdfile),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mdl-tgf`
    pub const CHEMICAL_X_MDL_TGF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMdlTgf),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mmcif`
    pub const CHEMICAL_X_MMCIF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMmcif),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mol2`
    pub const CHEMICAL_X_MOL2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMol2),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-molconn-Z`
    pub const CHEMICAL_X_MOLCONN_Z: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMolconnZ),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mopac-graph`
    pub const CHEMICAL_X_MOPAC_GRAPH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMopacGraph),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mopac-input`
    pub const CHEMICAL_X_MOPAC_INPUT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMopacInput),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mopac-out`
    pub const CHEMICAL_X_MOPAC_OUT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMopacOut),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-mopac-vib`
    pub const CHEMICAL_X_MOPAC_VIB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XMopacVib),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-ncbi-asn1`
    pub const CHEMICAL_X_NCBI_ASN1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XNcbiAsn1),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-ncbi-asn1-ascii`
    pub const CHEMICAL_X_NCBI_ASN1_ASCII: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XNcbiAsn1Ascii),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-ncbi-asn1-binary`
    pub const CHEMICAL_X_NCBI_ASN1_BINARY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XNcbiAsn1Binary),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-ncbi-asn1-spec`
    pub const CHEMICAL_X_NCBI_ASN1_SPEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XNcbiAsn1Spec),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-pdb`
    pub const CHEMICAL_X_PDB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XPdb),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-rosdal`
    pub const CHEMICAL_X_ROSDAL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XRosdal),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-swissprot`
    pub const CHEMICAL_X_SWISSPROT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XSwissprot),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-vamas-iso14976`
    pub const CHEMICAL_X_VAMAS_ISO14976: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XVamasIso14976),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-vmd`
    pub const CHEMICAL_X_VMD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XVmd),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-xtel`
    pub const CHEMICAL_X_XTEL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XXtel),
        suffix: None,
        parameters: &[],
    });

    /// `chemical/x-xyz`
    pub const CHEMICAL_X_XYZ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Chemical),
        subtype: crate::Name::Interned(super::Subtype::XXyz),
        suffix: None,
        parameters: &[],
    });

    /// `font/collection`
    pub const FONT_COLLECTION: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Font),
        subtype: crate::Name::Interned(super::Subtype::Collection),
        suffix: None,
        parameters: &[],
    });

    /// `font/otf`
    pub const FONT_OTF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Font),
        subtype: crate::Name::Interned(super::Subtype::Otf),
        suffix: None,
        parameters: &[],
    });

    /// `font/sfnt`
    pub const FONT_SFNT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Font),
        subtype: crate::Name::Interned(super::Subtype::Sfnt),
        suffix: None,
        parameters: &[],
    });

    /// `font/ttf`
    pub const FONT_TTF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Font),
        subtype: crate::Name::Interned(super::Subtype::Ttf),
        suffix: None,
        parameters: &[],
    });

    /// `font/woff`
    pub const FONT_WOFF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Font),
        subtype: crate::Name::Interned(super::Subtype::Woff),
        suffix: None,
        parameters: &[],
    });

    /// `font/woff2`
    pub const FONT_WOFF2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Font),
        subtype: crate::Name::Interned(super::Subtype::Woff2),
        suffix: None,
        parameters: &[],
    });

    /// `image/aces`
    pub const IMAGE_ACES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Aces),
        suffix: None,
        parameters: &[],
    });

    /// `image/avci`
    pub const IMAGE_AVCI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Avci),
        suffix: None,
        parameters: &[],
    });

    /// `image/avcs`
    pub const IMAGE_AVCS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Avcs),
        suffix: None,
        parameters: &[],
    });

    /// `image/avif`
    pub const IMAGE_AVIF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Avif),
        suffix: None,
        parameters: &[],
    });

    /// `image/bmp`
    pub const IMAGE_BMP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Bmp),
        suffix: None,
        parameters: &[],
    });

    /// `image/cgm`
    pub const IMAGE_CGM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Cgm),
        suffix: None,
        parameters: &[],
    });

    /// `image/dicom-rle`
    pub const IMAGE_DICOM_RLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::DicomRle),
        suffix: None,
        parameters: &[],
    });

    /// `image/emf`
    pub const IMAGE_EMF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Emf),
        suffix: None,
        parameters: &[],
    });

    /// `image/example`
    pub const IMAGE_EXAMPLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Example),
        suffix: None,
        parameters: &[],
    });

    /// `image/fits`
    pub const IMAGE_FITS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Fits),
        suffix: None,
        parameters: &[],
    });

    /// `image/g3fax`
    pub const IMAGE_G3FAX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::G3fax),
        suffix: None,
        parameters: &[],
    });

    /// `image/gif`
    pub const IMAGE_GIF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Gif),
        suffix: None,
        parameters: &[],
    });

    /// `image/heic`
    pub const IMAGE_HEIC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Heic),
        suffix: None,
        parameters: &[],
    });

    /// `image/heic-sequence`
    pub const IMAGE_HEIC_SEQUENCE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::HeicSequence),
        suffix: None,
        parameters: &[],
    });

    /// `image/heif`
    pub const IMAGE_HEIF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Heif),
        suffix: None,
        parameters: &[],
    });

    /// `image/heif-sequence`
    pub const IMAGE_HEIF_SEQUENCE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::HeifSequence),
        suffix: None,
        parameters: &[],
    });

    /// `image/hej2k`
    pub const IMAGE_HEJ2K: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Hej2k),
        suffix: None,
        parameters: &[],
    });

    /// `image/hsj2`
    pub const IMAGE_HSJ2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Hsj2),
        suffix: None,
        parameters: &[],
    });

    /// `image/ief`
    pub const IMAGE_IEF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Ief),
        suffix: None,
        parameters: &[],
    });

    /// `image/jls`
    pub const IMAGE_JLS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jls),
        suffix: None,
        parameters: &[],
    });

    /// `image/jp2`
    pub const IMAGE_JP2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jp2),
        suffix: None,
        parameters: &[],
    });

    /// `image/jpeg`
    pub const IMAGE_JPEG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jpeg),
        suffix: None,
        parameters: &[],
    });

    /// `image/jph`
    pub const IMAGE_JPH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jph),
        suffix: None,
        parameters: &[],
    });

    /// `image/jphc`
    pub const IMAGE_JPHC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jphc),
        suffix: None,
        parameters: &[],
    });

    /// `image/jpm`
    pub const IMAGE_JPM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jpm),
        suffix: None,
        parameters: &[],
    });

    /// `image/jpx`
    pub const IMAGE_JPX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jpx),
        suffix: None,
        parameters: &[],
    });

    /// `image/jxl`
    pub const IMAGE_JXL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jxl),
        suffix: None,
        parameters: &[],
    });

    /// `image/jxr`
    pub const IMAGE_JXR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jxr),
        suffix: None,
        parameters: &[],
    });

    /// `image/jxrA`
    pub const IMAGE_JXR_A: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::JxrA),
        suffix: None,
        parameters: &[],
    });

    /// `image/jxrS`
    pub const IMAGE_JXR_S: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::JxrS),
        suffix: None,
        parameters: &[],
    });

    /// `image/jxs`
    pub const IMAGE_JXS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jxs),
        suffix: None,
        parameters: &[],
    });

    /// `image/jxsc`
    pub const IMAGE_JXSC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jxsc),
        suffix: None,
        parameters: &[],
    });

    /// `image/jxsi`
    pub const IMAGE_JXSI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jxsi),
        suffix: None,
        parameters: &[],
    });

    /// `image/jxss`
    pub const IMAGE_JXSS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Jxss),
        suffix: None,
        parameters: &[],
    });

    /// `image/ktx`
    pub const IMAGE_KTX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Ktx),
        suffix: None,
        parameters: &[],
    });

    /// `image/ktx2`
    pub const IMAGE_KTX2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Ktx2),
        suffix: None,
        parameters: &[],
    });

    /// `image/naplps`
    pub const IMAGE_NAPLPS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Naplps),
        suffix: None,
        parameters: &[],
    });

    /// `image/png`
    pub const IMAGE_PNG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Png),
        suffix: None,
        parameters: &[],
    });

    /// `image/prs.btif`
    pub const IMAGE_PRS_BTIF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::PrsBtif),
        suffix: None,
        parameters: &[],
    });

    /// `image/prs.pti`
    pub const IMAGE_PRS_PTI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::PrsPti),
        suffix: None,
        parameters: &[],
    });

    /// `image/pwg-raster`
    pub const IMAGE_PWG_RASTER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::PwgRaster),
        suffix: None,
        parameters: &[],
    });

    /// `image/svg+xml`
    pub const IMAGE_SVG_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Svg),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `image/t38`
    pub const IMAGE_T38: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::T38),
        suffix: None,
        parameters: &[],
    });

    /// `image/tiff`
    pub const IMAGE_TIFF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Tiff),
        suffix: None,
        parameters: &[],
    });

    /// `image/tiff-fx`
    pub const IMAGE_TIFF_FX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::TiffFx),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.adobe.photoshop`
    pub const IMAGE_VND_ADOBE_PHOTOSHOP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndAdobePhotoshop),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.airzip.accelerator.azv`
    pub const IMAGE_VND_AIRZIP_ACCELERATOR_AZV: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Image),
            subtype: crate::Name::Interned(super::Subtype::VndAirzipAcceleratorAzv),
            suffix: None,
            parameters: &[],
        });

    /// `image/vnd.cns.inf2`
    pub const IMAGE_VND_CNS_INF2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndCnsInf2),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.dece.graphic`
    pub const IMAGE_VND_DECE_GRAPHIC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndDeceGraphic),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.djvu`
    pub const IMAGE_VND_DJVU: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndDjvu),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.dvb.subtitle`
    pub const IMAGE_VND_DVB_SUBTITLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndDvbSubtitle),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.dwg`
    pub const IMAGE_VND_DWG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndDwg),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.dxf`
    pub const IMAGE_VND_DXF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndDxf),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.fastbidsheet`
    pub const IMAGE_VND_FASTBIDSHEET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndFastbidsheet),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.fpx`
    pub const IMAGE_VND_FPX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndFpx),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.fst`
    pub const IMAGE_VND_FST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndFst),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.fujixerox.edmics-mmr`
    pub const IMAGE_VND_FUJIXEROX_EDMICS_MMR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Image),
            subtype: crate::Name::Interned(super::Subtype::VndFujixeroxEdmicsMmr),
            suffix: None,
            parameters: &[],
        });

    /// `image/vnd.fujixerox.edmics-rlc`
    pub const IMAGE_VND_FUJIXEROX_EDMICS_RLC: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Image),
            subtype: crate::Name::Interned(super::Subtype::VndFujixeroxEdmicsRlc),
            suffix: None,
            parameters: &[],
        });

    /// `image/vnd.globalgraphics.pgb`
    pub const IMAGE_VND_GLOBALGRAPHICS_PGB: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Image),
            subtype: crate::Name::Interned(super::Subtype::VndGlobalgraphicsPgb),
            suffix: None,
            parameters: &[],
        });

    /// `image/vnd.microsoft.icon`
    pub const IMAGE_VND_MICROSOFT_ICON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndMicrosoftIcon),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.mix`
    pub const IMAGE_VND_MIX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndMix),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.mozilla.apng`
    pub const IMAGE_VND_MOZILLA_APNG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndMozillaApng),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.ms-modi`
    pub const IMAGE_VND_MS_MODI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndMsModi),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.net-fpx`
    pub const IMAGE_VND_NET_FPX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndNetFpx),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.pco.b16`
    pub const IMAGE_VND_PCO_B16: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndPcoB16),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.radiance`
    pub const IMAGE_VND_RADIANCE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndRadiance),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.sealed.png`
    pub const IMAGE_VND_SEALED_PNG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndSealedPng),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.sealedmedia.softseal.gif`
    pub const IMAGE_VND_SEALEDMEDIA_SOFTSEAL_GIF: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Image),
            subtype: crate::Name::Interned(super::Subtype::VndSealedmediaSoftsealGif),
            suffix: None,
            parameters: &[],
        });

    /// `image/vnd.sealedmedia.softseal.jpg`
    pub const IMAGE_VND_SEALEDMEDIA_SOFTSEAL_JPG: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Image),
            subtype: crate::Name::Interned(super::Subtype::VndSealedmediaSoftsealJpg),
            suffix: None,
            parameters: &[],
        });

    /// `image/vnd.svf`
    pub const IMAGE_VND_SVF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndSvf),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.tencent.tap`
    pub const IMAGE_VND_TENCENT_TAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndTencentTap),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.valve.source.texture`
    pub const IMAGE_VND_VALVE_SOURCE_TEXTURE: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Image),
            subtype: crate::Name::Interned(super::Subtype::VndValveSourceTexture),
            suffix: None,
            parameters: &[],
        });

    /// `image/vnd.wap.wbmp`
    pub const IMAGE_VND_WAP_WBMP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndWapWbmp),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.xiff`
    pub const IMAGE_VND_XIFF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndXiff),
        suffix: None,
        parameters: &[],
    });

    /// `image/vnd.zbrush.pcx`
    pub const IMAGE_VND_ZBRUSH_PCX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::VndZbrushPcx),
        suffix: None,
        parameters: &[],
    });

    /// `image/wmf`
    pub const IMAGE_WMF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::Wmf),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-canon-cr2`
    pub const IMAGE_X_CANON_CR2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XCanonCr2),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-canon-crw`
    pub const IMAGE_X_CANON_CRW: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XCanonCrw),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-cmu-raster`
    pub const IMAGE_X_CMU_RASTER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XCmuRaster),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-coreldraw`
    pub const IMAGE_X_CORELDRAW: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XCoreldraw),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-coreldrawpattern`
    pub const IMAGE_X_CORELDRAWPATTERN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XCoreldrawpattern),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-coreldrawtemplate`
    pub const IMAGE_X_CORELDRAWTEMPLATE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XCoreldrawtemplate),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-corelphotopaint`
    pub const IMAGE_X_CORELPHOTOPAINT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XCorelphotopaint),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-epson-erf`
    pub const IMAGE_X_EPSON_ERF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XEpsonErf),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-jg`
    pub const IMAGE_X_JG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XJg),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-jng`
    pub const IMAGE_X_JNG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XJng),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-nikon-nef`
    pub const IMAGE_X_NIKON_NEF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XNikonNef),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-olympus-orf`
    pub const IMAGE_X_OLYMPUS_ORF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XOlympusOrf),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-portable-anymap`
    pub const IMAGE_X_PORTABLE_ANYMAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XPortableAnymap),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-portable-bitmap`
    pub const IMAGE_X_PORTABLE_BITMAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XPortableBitmap),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-portable-graymap`
    pub const IMAGE_X_PORTABLE_GRAYMAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XPortableGraymap),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-portable-pixmap`
    pub const IMAGE_X_PORTABLE_PIXMAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XPortablePixmap),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-rgb`
    pub const IMAGE_X_RGB: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XRgb),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-xbitmap`
    pub const IMAGE_X_XBITMAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XXbitmap),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-xcf`
    pub const IMAGE_X_XCF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XXcf),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-xpixmap`
    pub const IMAGE_X_XPIXMAP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XXpixmap),
        suffix: None,
        parameters: &[],
    });

    /// `image/x-xwindowdump`
    pub const IMAGE_X_XWINDOWDUMP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Image),
        subtype: crate::Name::Interned(super::Subtype::XXwindowdump),
        suffix: None,
        parameters: &[],
    });

    /// `inode/blockdevice`
    pub const INODE_BLOCKDEVICE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Inode),
        subtype: crate::Name::Interned(super::Subtype::Blockdevice),
        suffix: None,
        parameters: &[],
    });

    /// `inode/chardevice`
    pub const INODE_CHARDEVICE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Inode),
        subtype: crate::Name::Interned(super::Subtype::Chardevice),
        suffix: None,
        parameters: &[],
    });

    /// `inode/directory`
    pub const INODE_DIRECTORY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Inode),
        subtype: crate::Name::Interned(super::Subtype::Directory),
        suffix: None,
        parameters: &[],
    });

    /// `inode/directory-locked`
    pub const INODE_DIRECTORY_LOCKED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Inode),
        subtype: crate::Name::Interned(super::Subtype::DirectoryLocked),
        suffix: None,
        parameters: &[],
    });

    /// `inode/fifo`
    pub const INODE_FIFO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Inode),
        subtype: crate::Name::Interned(super::Subtype::Fifo),
        suffix: None,
        parameters: &[],
    });

    /// `inode/socket`
    pub const INODE_SOCKET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Inode),
        subtype: crate::Name::Interned(super::Subtype::Socket),
        suffix: None,
        parameters: &[],
    });

    /// `message/CPIM`
    pub const MESSAGE_CPIM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::Cpim),
        suffix: None,
        parameters: &[],
    });

    /// `message/delivery-status`
    pub const MESSAGE_DELIVERY_STATUS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::DeliveryStatus),
        suffix: None,
        parameters: &[],
    });

    /// `message/disposition-notification`
    pub const MESSAGE_DISPOSITION_NOTIFICATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Message),
            subtype: crate::Name::Interned(super::Subtype::DispositionNotification),
            suffix: None,
            parameters: &[],
        });

    /// `message/example`
    pub const MESSAGE_EXAMPLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::Example),
        suffix: None,
        parameters: &[],
    });

    /// `message/external-body`
    pub const MESSAGE_EXTERNAL_BODY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::ExternalBody),
        suffix: None,
        parameters: &[],
    });

    /// `message/feedback-report`
    pub const MESSAGE_FEEDBACK_REPORT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::FeedbackReport),
        suffix: None,
        parameters: &[],
    });

    /// `message/global`
    pub const MESSAGE_GLOBAL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::Global),
        suffix: None,
        parameters: &[],
    });

    /// `message/global-delivery-status`
    pub const MESSAGE_GLOBAL_DELIVERY_STATUS: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Message),
            subtype: crate::Name::Interned(super::Subtype::GlobalDeliveryStatus),
            suffix: None,
            parameters: &[],
        });

    /// `message/global-disposition-notification`
    pub const MESSAGE_GLOBAL_DISPOSITION_NOTIFICATION: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Message),
            subtype: crate::Name::Interned(super::Subtype::GlobalDispositionNotification),
            suffix: None,
            parameters: &[],
        });

    /// `message/global-headers`
    pub const MESSAGE_GLOBAL_HEADERS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::GlobalHeaders),
        suffix: None,
        parameters: &[],
    });

    /// `message/http`
    pub const MESSAGE_HTTP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::Http),
        suffix: None,
        parameters: &[],
    });

    /// `message/imdn+xml`
    pub const MESSAGE_IMDN_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::Imdn),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `message/partial`
    pub const MESSAGE_PARTIAL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::Partial),
        suffix: None,
        parameters: &[],
    });

    /// `message/rfc822`
    pub const MESSAGE_RFC822: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::Rfc822),
        suffix: None,
        parameters: &[],
    });

    /// `message/s-http`
    pub const MESSAGE_S_HTTP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::SHttp),
        suffix: None,
        parameters: &[],
    });

    /// `message/sip`
    pub const MESSAGE_SIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::Sip),
        suffix: None,
        parameters: &[],
    });

    /// `message/sipfrag`
    pub const MESSAGE_SIPFRAG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::Sipfrag),
        suffix: None,
        parameters: &[],
    });

    /// `message/tracking-status`
    pub const MESSAGE_TRACKING_STATUS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::TrackingStatus),
        suffix: None,
        parameters: &[],
    });

    /// `message/vnd.wfa.wsc`
    pub const MESSAGE_VND_WFA_WSC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Message),
        subtype: crate::Name::Interned(super::Subtype::VndWfaWsc),
        suffix: None,
        parameters: &[],
    });

    /// `model/e57`
    pub const MODEL_E57: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::E57),
        suffix: None,
        parameters: &[],
    });

    /// `model/example`
    pub const MODEL_EXAMPLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Example),
        suffix: None,
        parameters: &[],
    });

    /// `model/gltf+json`
    pub const MODEL_GLTF_JSON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Gltf),
        suffix: Some(crate::Name::Interned(super::Suffix::Json)),
        parameters: &[],
    });

    /// `model/gltf-binary`
    pub const MODEL_GLTF_BINARY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::GltfBinary),
        suffix: None,
        parameters: &[],
    });

    /// `model/iges`
    pub const MODEL_IGES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Iges),
        suffix: None,
        parameters: &[],
    });

    /// `model/mesh`
    pub const MODEL_MESH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Mesh),
        suffix: None,
        parameters: &[],
    });

    /// `model/mtl`
    pub const MODEL_MTL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Mtl),
        suffix: None,
        parameters: &[],
    });

    /// `model/obj`
    pub const MODEL_OBJ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Obj),
        suffix: None,
        parameters: &[],
    });

    /// `model/prc`
    pub const MODEL_PRC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Prc),
        suffix: None,
        parameters: &[],
    });

    /// `model/step`
    pub const MODEL_STEP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Step),
        suffix: None,
        parameters: &[],
    });

    /// `model/step+xml`
    pub const MODEL_STEP_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Step),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `model/step+zip`
    pub const MODEL_STEP_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Step),
        suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
        parameters: &[],
    });

    /// `model/step-xml+zip`
    pub const MODEL_STEP_XML_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::StepXml),
        suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
        parameters: &[],
    });

    /// `model/stl`
    pub const MODEL_STL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Stl),
        suffix: None,
        parameters: &[],
    });

    /// `model/u3d`
    pub const MODEL_U3D: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::U3d),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.collada+xml`
    pub const MODEL_VND_COLLADA_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndCollada),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `model/vnd.dwf`
    pub const MODEL_VND_DWF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndDwf),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.flatland.3dml`
    pub const MODEL_VND_FLATLAND_3DML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndFlatland3dml),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.gdl`
    pub const MODEL_VND_GDL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndGdl),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.gs-gdl`
    pub const MODEL_VND_GS_GDL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndGsGdl),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.gtw`
    pub const MODEL_VND_GTW: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndGtw),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.moml+xml`
    pub const MODEL_VND_MOML_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndMoml),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `model/vnd.mts`
    pub const MODEL_VND_MTS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndMts),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.opengex`
    pub const MODEL_VND_OPENGEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndOpengex),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.parasolid.transmit.binary`
    pub const MODEL_VND_PARASOLID_TRANSMIT_BINARY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Model),
            subtype: crate::Name::Interned(super::Subtype::VndParasolidTransmitBinary),
            suffix: None,
            parameters: &[],
        });

    /// `model/vnd.parasolid.transmit.text`
    pub const MODEL_VND_PARASOLID_TRANSMIT_TEXT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Model),
            subtype: crate::Name::Interned(super::Subtype::VndParasolidTransmitText),
            suffix: None,
            parameters: &[],
        });

    /// `model/vnd.pytha.pyox`
    pub const MODEL_VND_PYTHA_PYOX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndPythaPyox),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.rosette.annotated-data-model`
    pub const MODEL_VND_ROSETTE_ANNOTATED_DATA_MODEL: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Model),
            subtype: crate::Name::Interned(super::Subtype::VndRosetteAnnotatedDataModel),
            suffix: None,
            parameters: &[],
        });

    /// `model/vnd.sap.vds`
    pub const MODEL_VND_SAP_VDS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndSapVds),
        suffix: None,
        parameters: &[],
    });

    /// `model/vnd.usdz+zip`
    pub const MODEL_VND_USDZ_ZIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndUsdz),
        suffix: Some(crate::Name::Interned(super::Suffix::Zip)),
        parameters: &[],
    });

    /// `model/vnd.valve.source.compiled-map`
    pub const MODEL_VND_VALVE_SOURCE_COMPILED_MAP: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Model),
            subtype: crate::Name::Interned(super::Subtype::VndValveSourceCompiledMap),
            suffix: None,
            parameters: &[],
        });

    /// `model/vnd.vtu`
    pub const MODEL_VND_VTU: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::VndVtu),
        suffix: None,
        parameters: &[],
    });

    /// `model/vrml`
    pub const MODEL_VRML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::Vrml),
        suffix: None,
        parameters: &[],
    });

    /// `model/x3d+fastinfoset`
    pub const MODEL_X3D_FASTINFOSET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::X3d),
        suffix: Some(crate::Name::Interned(super::Suffix::Fastinfoset)),
        parameters: &[],
    });

    /// `model/x3d+xml`
    pub const MODEL_X3D_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::X3d),
        suffix: Some(crate::Name::Interned(super::Suffix::Xml)),
        parameters: &[],
    });

    /// `model/x3d-vrml`
    pub const MODEL_X3D_VRML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Model),
        subtype: crate::Name::Interned(super::Subtype::X3dVrml),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/alternative`
    pub const MULTIPART_ALTERNATIVE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Alternative),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/appledouble`
    pub const MULTIPART_APPLEDOUBLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Appledouble),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/byteranges`
    pub const MULTIPART_BYTERANGES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Byteranges),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/digest`
    pub const MULTIPART_DIGEST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Digest),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/encrypted`
    pub const MULTIPART_ENCRYPTED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Encrypted),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/example`
    pub const MULTIPART_EXAMPLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Example),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/form-data`
    pub const MULTIPART_FORM_DATA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::FormData),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/header-set`
    pub const MULTIPART_HEADER_SET: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::HeaderSet),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/mixed`
    pub const MULTIPART_MIXED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Mixed),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/multilingual`
    pub const MULTIPART_MULTILINGUAL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Multilingual),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/parallel`
    pub const MULTIPART_PARALLEL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Parallel),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/related`
    pub const MULTIPART_RELATED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Related),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/report`
    pub const MULTIPART_REPORT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Report),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/signed`
    pub const MULTIPART_SIGNED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::Signed),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/vnd.bint.med-plus`
    pub const MULTIPART_VND_BINT_MED_PLUS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::VndBintMedPlus),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/voice-message`
    pub const MULTIPART_VOICE_MESSAGE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::VoiceMessage),
        suffix: None,
        parameters: &[],
    });

    /// `multipart/x-mixed-replace`
    pub const MULTIPART_X_MIXED_REPLACE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Multipart),
        subtype: crate::Name::Interned(super::Subtype::XMixedReplace),
        suffix: None,
        parameters: &[],
    });

    /// `text/cache-manifest`
    pub const TEXT_CACHE_MANIFEST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::CacheManifest),
        suffix: None,
        parameters: &[],
    });

    /// `text/calendar`
    pub const TEXT_CALENDAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Calendar),
        suffix: None,
        parameters: &[],
    });

    /// `text/cql`
    pub const TEXT_CQL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Cql),
        suffix: None,
        parameters: &[],
    });

    /// `text/cql-extension`
    pub const TEXT_CQL_EXTENSION: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::CqlExtension),
        suffix: None,
        parameters: &[],
    });

    /// `text/cql-identifier`
    pub const TEXT_CQL_IDENTIFIER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::CqlIdentifier),
        suffix: None,
        parameters: &[],
    });

    /// `text/css`
    pub const TEXT_CSS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Css),
        suffix: None,
        parameters: &[],
    });

    /// `text/csv`
    pub const TEXT_CSV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Csv),
        suffix: None,
        parameters: &[],
    });

    /// `text/csv-schema`
    pub const TEXT_CSV_SCHEMA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::CsvSchema),
        suffix: None,
        parameters: &[],
    });

    /// `text/dns`
    pub const TEXT_DNS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Dns),
        suffix: None,
        parameters: &[],
    });

    /// `text/encaprtp`
    pub const TEXT_ENCAPRTP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Encaprtp),
        suffix: None,
        parameters: &[],
    });

    /// `text/enriched`
    pub const TEXT_ENRICHED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Enriched),
        suffix: None,
        parameters: &[],
    });

    /// `text/example`
    pub const TEXT_EXAMPLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Example),
        suffix: None,
        parameters: &[],
    });

    /// `text/fhirpath`
    pub const TEXT_FHIRPATH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Fhirpath),
        suffix: None,
        parameters: &[],
    });

    /// `text/flexfec`
    pub const TEXT_FLEXFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Flexfec),
        suffix: None,
        parameters: &[],
    });

    /// `text/fwdred`
    pub const TEXT_FWDRED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Fwdred),
        suffix: None,
        parameters: &[],
    });

    /// `text/gff3`
    pub const TEXT_GFF3: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Gff3),
        suffix: None,
        parameters: &[],
    });

    /// `text/grammar-ref-list`
    pub const TEXT_GRAMMAR_REF_LIST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::GrammarRefList),
        suffix: None,
        parameters: &[],
    });

    /// `text/html`
    pub const TEXT_HTML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Html),
        suffix: None,
        parameters: &[],
    });

    /// `text/javascript`
    pub const TEXT_JAVASCRIPT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Javascript),
        suffix: None,
        parameters: &[],
    });

    /// `text/jcr-cnd`
    pub const TEXT_JCR_CND: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::JcrCnd),
        suffix: None,
        parameters: &[],
    });

    /// `text/markdown`
    pub const TEXT_MARKDOWN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Markdown),
        suffix: None,
        parameters: &[],
    });

    /// `text/mizar`
    pub const TEXT_MIZAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Mizar),
        suffix: None,
        parameters: &[],
    });

    /// `text/n3`
    pub const TEXT_N3: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::N3),
        suffix: None,
        parameters: &[],
    });

    /// `text/parameters`
    pub const TEXT_PARAMETERS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Parameters),
        suffix: None,
        parameters: &[],
    });

    /// `text/parityfec`
    pub const TEXT_PARITYFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Parityfec),
        suffix: None,
        parameters: &[],
    });

    /// `text/plain`
    pub const TEXT_PLAIN: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Plain),
        suffix: None,
        parameters: &[],
    });

    /// `text/provenance-notation`
    pub const TEXT_PROVENANCE_NOTATION: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::ProvenanceNotation),
        suffix: None,
        parameters: &[],
    });

    /// `text/prs.fallenstein.rst`
    pub const TEXT_PRS_FALLENSTEIN_RST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::PrsFallensteinRst),
        suffix: None,
        parameters: &[],
    });

    /// `text/prs.lines.tag`
    pub const TEXT_PRS_LINES_TAG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::PrsLinesTag),
        suffix: None,
        parameters: &[],
    });

    /// `text/prs.prop.logic`
    pub const TEXT_PRS_PROP_LOGIC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::PrsPropLogic),
        suffix: None,
        parameters: &[],
    });

    /// `text/raptorfec`
    pub const TEXT_RAPTORFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Raptorfec),
        suffix: None,
        parameters: &[],
    });

    /// `text/RED`
    pub const TEXT_RED: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Red),
        suffix: None,
        parameters: &[],
    });

    /// `text/rfc822-headers`
    pub const TEXT_RFC822_HEADERS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Rfc822Headers),
        suffix: None,
        parameters: &[],
    });

    /// `text/rtf`
    pub const TEXT_RTF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Rtf),
        suffix: None,
        parameters: &[],
    });

    /// `text/rtp-enc-aescm128`
    pub const TEXT_RTP_ENC_AESCM128: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::RtpEncAescm128),
        suffix: None,
        parameters: &[],
    });

    /// `text/rtploopback`
    pub const TEXT_RTPLOOPBACK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Rtploopback),
        suffix: None,
        parameters: &[],
    });

    /// `text/rtx`
    pub const TEXT_RTX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Rtx),
        suffix: None,
        parameters: &[],
    });

    /// `text/SGML`
    pub const TEXT_SGML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Sgml),
        suffix: None,
        parameters: &[],
    });

    /// `text/shaclc`
    pub const TEXT_SHACLC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Shaclc),
        suffix: None,
        parameters: &[],
    });

    /// `text/shex`
    pub const TEXT_SHEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Shex),
        suffix: None,
        parameters: &[],
    });

    /// `text/spdx`
    pub const TEXT_SPDX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Spdx),
        suffix: None,
        parameters: &[],
    });

    /// `text/strings`
    pub const TEXT_STRINGS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Strings),
        suffix: None,
        parameters: &[],
    });

    /// `text/t140`
    pub const TEXT_T140: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::T140),
        suffix: None,
        parameters: &[],
    });

    /// `text/tab-separated-values`
    pub const TEXT_TAB_SEPARATED_VALUES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::TabSeparatedValues),
        suffix: None,
        parameters: &[],
    });

    /// `text/texmacs`
    pub const TEXT_TEXMACS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Texmacs),
        suffix: None,
        parameters: &[],
    });

    /// `text/troff`
    pub const TEXT_TROFF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Troff),
        suffix: None,
        parameters: &[],
    });

    /// `text/turtle`
    pub const TEXT_TURTLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Turtle),
        suffix: None,
        parameters: &[],
    });

    /// `text/ulpfec`
    pub const TEXT_ULPFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Ulpfec),
        suffix: None,
        parameters: &[],
    });

    /// `text/uri-list`
    pub const TEXT_URI_LIST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::UriList),
        suffix: None,
        parameters: &[],
    });

    /// `text/vcard`
    pub const TEXT_VCARD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Vcard),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.a`
    pub const TEXT_VND_A: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndA),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.abc`
    pub const TEXT_VND_ABC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndAbc),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.ascii-art`
    pub const TEXT_VND_ASCII_ART: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndAsciiArt),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.curl`
    pub const TEXT_VND_CURL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndCurl),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.debian.copyright`
    pub const TEXT_VND_DEBIAN_COPYRIGHT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndDebianCopyright),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.DMClientScript`
    pub const TEXT_VND_DM_CLIENT_SCRIPT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndDmClientScript),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.dvb.subtitle`
    pub const TEXT_VND_DVB_SUBTITLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndDvbSubtitle),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.esmertec.theme-descriptor`
    pub const TEXT_VND_ESMERTEC_THEME_DESCRIPTOR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Text),
            subtype: crate::Name::Interned(super::Subtype::VndEsmertecThemeDescriptor),
            suffix: None,
            parameters: &[],
        });

    /// `text/vnd.familysearch.gedcom`
    pub const TEXT_VND_FAMILYSEARCH_GEDCOM: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Text),
            subtype: crate::Name::Interned(super::Subtype::VndFamilysearchGedcom),
            suffix: None,
            parameters: &[],
        });

    /// `text/vnd.ficlab.flt`
    pub const TEXT_VND_FICLAB_FLT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndFiclabFlt),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.fly`
    pub const TEXT_VND_FLY: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndFly),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.fmi.flexstor`
    pub const TEXT_VND_FMI_FLEXSTOR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndFmiFlexstor),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.gml`
    pub const TEXT_VND_GML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndGml),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.graphviz`
    pub const TEXT_VND_GRAPHVIZ: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndGraphviz),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.hans`
    pub const TEXT_VND_HANS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndHans),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.hgl`
    pub const TEXT_VND_HGL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndHgl),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.in3d.3dml`
    pub const TEXT_VND_IN3D_3DML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndIn3d3dml),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.in3d.spot`
    pub const TEXT_VND_IN3D_SPOT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndIn3dSpot),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.IPTC.NewsML`
    pub const TEXT_VND_IPTC_NEWS_ML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndIptcNewsMl),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.IPTC.NITF`
    pub const TEXT_VND_IPTC_NITF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndIptcNitf),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.latex-z`
    pub const TEXT_VND_LATEX_Z: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndLatexZ),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.motorola.reflex`
    pub const TEXT_VND_MOTOROLA_REFLEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndMotorolaReflex),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.ms-mediapackage`
    pub const TEXT_VND_MS_MEDIAPACKAGE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndMsMediapackage),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.net2phone.commcenter.command`
    pub const TEXT_VND_NET2PHONE_COMMCENTER_COMMAND: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Text),
            subtype: crate::Name::Interned(super::Subtype::VndNet2phoneCommcenterCommand),
            suffix: None,
            parameters: &[],
        });

    /// `text/vnd.radisys.msml-basic-layout`
    pub const TEXT_VND_RADISYS_MSML_BASIC_LAYOUT: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Text),
            subtype: crate::Name::Interned(super::Subtype::VndRadisysMsmlBasicLayout),
            suffix: None,
            parameters: &[],
        });

    /// `text/vnd.senx.warpscript`
    pub const TEXT_VND_SENX_WARPSCRIPT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndSenxWarpscript),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.sosi`
    pub const TEXT_VND_SOSI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndSosi),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.sun.j2me.app-descriptor`
    pub const TEXT_VND_SUN_J2ME_APP_DESCRIPTOR: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Text),
            subtype: crate::Name::Interned(super::Subtype::VndSunJ2meAppDescriptor),
            suffix: None,
            parameters: &[],
        });

    /// `text/vnd.trolltech.linguist`
    pub const TEXT_VND_TROLLTECH_LINGUIST: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndTrolltechLinguist),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.wap.si`
    pub const TEXT_VND_WAP_SI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndWapSi),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.wap.sl`
    pub const TEXT_VND_WAP_SL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndWapSl),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.wap.wml`
    pub const TEXT_VND_WAP_WML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndWapWml),
        suffix: None,
        parameters: &[],
    });

    /// `text/vnd.wap.wmlscript`
    pub const TEXT_VND_WAP_WMLSCRIPT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::VndWapWmlscript),
        suffix: None,
        parameters: &[],
    });

    /// `text/vtt`
    pub const TEXT_VTT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Vtt),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-bibtex`
    pub const TEXT_X_BIBTEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XBibtex),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-boo`
    pub const TEXT_X_BOO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XBoo),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-chdr`
    pub const TEXT_X_CHDR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XChdr),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-component`
    pub const TEXT_X_COMPONENT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XComponent),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-csh`
    pub const TEXT_X_CSH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XCsh),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-csrc`
    pub const TEXT_X_CSRC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XCsrc),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-diff`
    pub const TEXT_X_DIFF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XDiff),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-dsrc`
    pub const TEXT_X_DSRC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XDsrc),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-haskell`
    pub const TEXT_X_HASKELL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XHaskell),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-java`
    pub const TEXT_X_JAVA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XJava),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-lilypond`
    pub const TEXT_X_LILYPOND: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XLilypond),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-literate-haskell`
    pub const TEXT_X_LITERATE_HASKELL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XLiterateHaskell),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-moc`
    pub const TEXT_X_MOC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XMoc),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-pascal`
    pub const TEXT_X_PASCAL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XPascal),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-pcs-gcd`
    pub const TEXT_X_PCS_GCD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XPcsGcd),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-perl`
    pub const TEXT_X_PERL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XPerl),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-python`
    pub const TEXT_X_PYTHON: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XPython),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-scala`
    pub const TEXT_X_SCALA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XScala),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-setext`
    pub const TEXT_X_SETEXT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XSetext),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-sfv`
    pub const TEXT_X_SFV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XSfv),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-sh`
    pub const TEXT_X_SH: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XSh),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-tcl`
    pub const TEXT_X_TCL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XTcl),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-tex`
    pub const TEXT_X_TEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XTex),
        suffix: None,
        parameters: &[],
    });

    /// `text/x-vcalendar`
    pub const TEXT_X_VCALENDAR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XVcalendar),
        suffix: None,
        parameters: &[],
    });

    /// `text/xml`
    pub const TEXT_XML: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::Xml),
        suffix: None,
        parameters: &[],
    });

    /// `text/xml-dtd`
    pub const TEXT_XML_DTD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Text),
        subtype: crate::Name::Interned(super::Subtype::XmlDtd),
        suffix: None,
        parameters: &[],
    });

    /// `text/xml-external-parsed-entity`
    pub const TEXT_XML_EXTERNAL_PARSED_ENTITY: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Text),
            subtype: crate::Name::Interned(super::Subtype::XmlExternalParsedEntity),
            suffix: None,
            parameters: &[],
        });

    /// `video/annodex`
    pub const VIDEO_ANNODEX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Annodex),
        suffix: None,
        parameters: &[],
    });

    /// `video/AV1`
    pub const VIDEO_AV1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Av1),
        suffix: None,
        parameters: &[],
    });

    /// `video/BMPEG`
    pub const VIDEO_BMPEG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Bmpeg),
        suffix: None,
        parameters: &[],
    });

    /// `video/BT656`
    pub const VIDEO_BT656: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Bt656),
        suffix: None,
        parameters: &[],
    });

    /// `video/CelB`
    pub const VIDEO_CEL_B: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::CelB),
        suffix: None,
        parameters: &[],
    });

    /// `video/dl`
    pub const VIDEO_DL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Dl),
        suffix: None,
        parameters: &[],
    });

    /// `video/DV`
    pub const VIDEO_DV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Dv),
        suffix: None,
        parameters: &[],
    });

    /// `video/encaprtp`
    pub const VIDEO_ENCAPRTP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Encaprtp),
        suffix: None,
        parameters: &[],
    });

    /// `video/example`
    pub const VIDEO_EXAMPLE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Example),
        suffix: None,
        parameters: &[],
    });

    /// `video/FFV1`
    pub const VIDEO_FFV1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Ffv1),
        suffix: None,
        parameters: &[],
    });

    /// `video/flexfec`
    pub const VIDEO_FLEXFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Flexfec),
        suffix: None,
        parameters: &[],
    });

    /// `video/fli`
    pub const VIDEO_FLI: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Fli),
        suffix: None,
        parameters: &[],
    });

    /// `video/gl`
    pub const VIDEO_GL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Gl),
        suffix: None,
        parameters: &[],
    });

    /// `video/H261`
    pub const VIDEO_H261: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::H261),
        suffix: None,
        parameters: &[],
    });

    /// `video/H263`
    pub const VIDEO_H263: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::H263),
        suffix: None,
        parameters: &[],
    });

    /// `video/H263-1998`
    pub const VIDEO_H263_1998: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::H2631998),
        suffix: None,
        parameters: &[],
    });

    /// `video/H263-2000`
    pub const VIDEO_H263_2000: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::H2632000),
        suffix: None,
        parameters: &[],
    });

    /// `video/H264`
    pub const VIDEO_H264: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::H264),
        suffix: None,
        parameters: &[],
    });

    /// `video/H264-RCDO`
    pub const VIDEO_H264_RCDO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::H264Rcdo),
        suffix: None,
        parameters: &[],
    });

    /// `video/H264-SVC`
    pub const VIDEO_H264_SVC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::H264Svc),
        suffix: None,
        parameters: &[],
    });

    /// `video/H265`
    pub const VIDEO_H265: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::H265),
        suffix: None,
        parameters: &[],
    });

    /// `video/iso.segment`
    pub const VIDEO_ISO_SEGMENT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::IsoSegment),
        suffix: None,
        parameters: &[],
    });

    /// `video/JPEG`
    pub const VIDEO_JPEG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Jpeg),
        suffix: None,
        parameters: &[],
    });

    /// `video/jpeg2000`
    pub const VIDEO_JPEG2000: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Jpeg2000),
        suffix: None,
        parameters: &[],
    });

    /// `video/jxsv`
    pub const VIDEO_JXSV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Jxsv),
        suffix: None,
        parameters: &[],
    });

    /// `video/mj2`
    pub const VIDEO_MJ2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Mj2),
        suffix: None,
        parameters: &[],
    });

    /// `video/MP1S`
    pub const VIDEO_MP1S: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Mp1s),
        suffix: None,
        parameters: &[],
    });

    /// `video/MP2P`
    pub const VIDEO_MP2P: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Mp2p),
        suffix: None,
        parameters: &[],
    });

    /// `video/MP2T`
    pub const VIDEO_MP2T: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Mp2t),
        suffix: None,
        parameters: &[],
    });

    /// `video/mp4`
    pub const VIDEO_MP4: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Mp4),
        suffix: None,
        parameters: &[],
    });

    /// `video/MP4V-ES`
    pub const VIDEO_MP4V_ES: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Mp4vEs),
        suffix: None,
        parameters: &[],
    });

    /// `video/mpeg`
    pub const VIDEO_MPEG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Mpeg),
        suffix: None,
        parameters: &[],
    });

    /// `video/mpeg4-generic`
    pub const VIDEO_MPEG4_GENERIC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Mpeg4Generic),
        suffix: None,
        parameters: &[],
    });

    /// `video/MPV`
    pub const VIDEO_MPV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Mpv),
        suffix: None,
        parameters: &[],
    });

    /// `video/nv`
    pub const VIDEO_NV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Nv),
        suffix: None,
        parameters: &[],
    });

    /// `video/ogg`
    pub const VIDEO_OGG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Ogg),
        suffix: None,
        parameters: &[],
    });

    /// `video/parityfec`
    pub const VIDEO_PARITYFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Parityfec),
        suffix: None,
        parameters: &[],
    });

    /// `video/pointer`
    pub const VIDEO_POINTER: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Pointer),
        suffix: None,
        parameters: &[],
    });

    /// `video/quicktime`
    pub const VIDEO_QUICKTIME: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Quicktime),
        suffix: None,
        parameters: &[],
    });

    /// `video/raptorfec`
    pub const VIDEO_RAPTORFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Raptorfec),
        suffix: None,
        parameters: &[],
    });

    /// `video/raw`
    pub const VIDEO_RAW: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Raw),
        suffix: None,
        parameters: &[],
    });

    /// `video/rtp-enc-aescm128`
    pub const VIDEO_RTP_ENC_AESCM128: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::RtpEncAescm128),
        suffix: None,
        parameters: &[],
    });

    /// `video/rtploopback`
    pub const VIDEO_RTPLOOPBACK: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Rtploopback),
        suffix: None,
        parameters: &[],
    });

    /// `video/rtx`
    pub const VIDEO_RTX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Rtx),
        suffix: None,
        parameters: &[],
    });

    /// `video/scip`
    pub const VIDEO_SCIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Scip),
        suffix: None,
        parameters: &[],
    });

    /// `video/smpte291`
    pub const VIDEO_SMPTE291: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Smpte291),
        suffix: None,
        parameters: &[],
    });

    /// `video/SMPTE292M`
    pub const VIDEO_SMPTE292M: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Smpte292m),
        suffix: None,
        parameters: &[],
    });

    /// `video/ulpfec`
    pub const VIDEO_ULPFEC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Ulpfec),
        suffix: None,
        parameters: &[],
    });

    /// `video/vc1`
    pub const VIDEO_VC1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Vc1),
        suffix: None,
        parameters: &[],
    });

    /// `video/vc2`
    pub const VIDEO_VC2: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Vc2),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.CCTV`
    pub const VIDEO_VND_CCTV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndCctv),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.dece.hd`
    pub const VIDEO_VND_DECE_HD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDeceHd),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.dece.mobile`
    pub const VIDEO_VND_DECE_MOBILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDeceMobile),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.dece.mp4`
    pub const VIDEO_VND_DECE_MP4: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDeceMp4),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.dece.pd`
    pub const VIDEO_VND_DECE_PD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDecePd),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.dece.sd`
    pub const VIDEO_VND_DECE_SD: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDeceSd),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.dece.video`
    pub const VIDEO_VND_DECE_VIDEO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDeceVideo),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.directv.mpeg`
    pub const VIDEO_VND_DIRECTV_MPEG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDirectvMpeg),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.directv.mpeg-tts`
    pub const VIDEO_VND_DIRECTV_MPEG_TTS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDirectvMpegTts),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.dlna.mpeg-tts`
    pub const VIDEO_VND_DLNA_MPEG_TTS: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDlnaMpegTts),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.dvb.file`
    pub const VIDEO_VND_DVB_FILE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndDvbFile),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.fvt`
    pub const VIDEO_VND_FVT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndFvt),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.hns.video`
    pub const VIDEO_VND_HNS_VIDEO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndHnsVideo),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.iptvforum.1dparityfec-1010`
    pub const VIDEO_VND_IPTVFORUM_1DPARITYFEC_1010: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndIptvforum1dparityfec1010),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.iptvforum.1dparityfec-2005`
    pub const VIDEO_VND_IPTVFORUM_1DPARITYFEC_2005: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndIptvforum1dparityfec2005),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.iptvforum.2dparityfec-1010`
    pub const VIDEO_VND_IPTVFORUM_2DPARITYFEC_1010: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndIptvforum2dparityfec1010),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.iptvforum.2dparityfec-2005`
    pub const VIDEO_VND_IPTVFORUM_2DPARITYFEC_2005: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndIptvforum2dparityfec2005),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.iptvforum.ttsavc`
    pub const VIDEO_VND_IPTVFORUM_TTSAVC: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndIptvforumTtsavc),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.iptvforum.ttsmpeg2`
    pub const VIDEO_VND_IPTVFORUM_TTSMPEG2: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndIptvforumTtsmpeg2),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.motorola.video`
    pub const VIDEO_VND_MOTOROLA_VIDEO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndMotorolaVideo),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.motorola.videop`
    pub const VIDEO_VND_MOTOROLA_VIDEOP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndMotorolaVideop),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.mpegurl`
    pub const VIDEO_VND_MPEGURL: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndMpegurl),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.ms-playready.media.pyv`
    pub const VIDEO_VND_MS_PLAYREADY_MEDIA_PYV: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndMsPlayreadyMediaPyv),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.nokia.interleaved-multimedia`
    pub const VIDEO_VND_NOKIA_INTERLEAVED_MULTIMEDIA: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndNokiaInterleavedMultimedia),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.nokia.mp4vr`
    pub const VIDEO_VND_NOKIA_MP4VR: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndNokiaMp4vr),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.nokia.videovoip`
    pub const VIDEO_VND_NOKIA_VIDEOVOIP: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndNokiaVideovoip),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.objectvideo`
    pub const VIDEO_VND_OBJECTVIDEO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndObjectvideo),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.radgamettools.bink`
    pub const VIDEO_VND_RADGAMETTOOLS_BINK: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndRadgamettoolsBink),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.radgamettools.smacker`
    pub const VIDEO_VND_RADGAMETTOOLS_SMACKER: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndRadgamettoolsSmacker),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.sealed.mpeg1`
    pub const VIDEO_VND_SEALED_MPEG1: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndSealedMpeg1),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.sealed.mpeg4`
    pub const VIDEO_VND_SEALED_MPEG4: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndSealedMpeg4),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.sealed.swf`
    pub const VIDEO_VND_SEALED_SWF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndSealedSwf),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.sealedmedia.softseal.mov`
    pub const VIDEO_VND_SEALEDMEDIA_SOFTSEAL_MOV: crate::Mime<'static> =
        crate::Mime(crate::Repr::Parts {
            ty: crate::Name::Interned(super::Type::Video),
            subtype: crate::Name::Interned(super::Subtype::VndSealedmediaSoftsealMov),
            suffix: None,
            parameters: &[],
        });

    /// `video/vnd.uvvu.mp4`
    pub const VIDEO_VND_UVVU_MP4: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndUvvuMp4),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.vivo`
    pub const VIDEO_VND_VIVO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndVivo),
        suffix: None,
        parameters: &[],
    });

    /// `video/vnd.youtube.yt`
    pub const VIDEO_VND_YOUTUBE_YT: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::VndYoutubeYt),
        suffix: None,
        parameters: &[],
    });

    /// `video/VP8`
    pub const VIDEO_VP8: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Vp8),
        suffix: None,
        parameters: &[],
    });

    /// `video/VP9`
    pub const VIDEO_VP9: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Vp9),
        suffix: None,
        parameters: &[],
    });

    /// `video/webm`
    pub const VIDEO_WEBM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::Webm),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-flv`
    pub const VIDEO_X_FLV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XFlv),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-la-asf`
    pub const VIDEO_X_LA_ASF: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XLaAsf),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-matroska`
    pub const VIDEO_X_MATROSKA: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XMatroska),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-mng`
    pub const VIDEO_X_MNG: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XMng),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-ms-wm`
    pub const VIDEO_X_MS_WM: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XMsWm),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-ms-wmv`
    pub const VIDEO_X_MS_WMV: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XMsWmv),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-ms-wmx`
    pub const VIDEO_X_MS_WMX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XMsWmx),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-ms-wvx`
    pub const VIDEO_X_MS_WVX: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XMsWvx),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-msvideo`
    pub const VIDEO_X_MSVIDEO: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XMsvideo),
        suffix: None,
        parameters: &[],
    });

    /// `video/x-sgi-movie`
    pub const VIDEO_X_SGI_MOVIE: crate::Mime<'static> = crate::Mime(crate::Repr::Parts {
        ty: crate::Name::Interned(super::Type::Video),
        subtype: crate::Name::Interned(super::Subtype::XSgiMovie),
        suffix: None,
        parameters: &[],
    });
}
